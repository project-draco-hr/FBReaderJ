{
  final String optionsForKey="optionsFor";
  ZLComboOptionEntry mainEntry=new ScrollingTypeEntry(dialogTab.getResource(optionsForKey),fbreader,this);
  dialogTab.addOption(optionsForKey,mainEntry);
  final ZLResource modeResource=dialogTab.getResource("mode");
  ScrollingModeEntry.ourNoOverlappingString=modeResource.getResource("noOverlapping").getValue();
  ScrollingModeEntry.ourKeepLinesString=modeResource.getResource("keepLines").getValue();
  ScrollingModeEntry.ourScrollLinesString=modeResource.getResource("scrollLines").getValue();
  ScrollingModeEntry.ourScrollPercentageString=modeResource.getResource("scrollPercentage").getValue();
  ScrollingModeEntry.ourDisableString=modeResource.getResource("disable").getValue();
  myLargeScrollingEntries=new ScrollingEntries(fbreader,fbreader.LargeScrollingOptions);
  mySmallScrollingEntries=new ScrollingEntries(fbreader,fbreader.SmallScrollingOptions);
  final boolean isMousePresented=new ZLBooleanOption(ZLOption.EMPTY,ZLOption.PLATFORM_GROUP,"MousePresented",false).getValue();
  final boolean hasTouchScreen=new ZLBooleanOption(ZLOption.EMPTY,ZLOption.PLATFORM_GROUP,"TouchScreenPresented",true).getValue();
  if (isMousePresented) {
    myMouseScrollingEntries=new ScrollingEntries(fbreader,fbreader.MouseScrollingOptions);
  }
  if (hasTouchScreen) {
    myTapScrollingEntries=new ScrollingEntries(fbreader,fbreader.FingerTapScrollingOptions);
  }
  mainEntry.onStringValueSelected(mainEntry.initialValue());
  myLargeScrollingEntries.connect(dialogTab);
  mySmallScrollingEntries.connect(dialogTab);
  if (isMousePresented) {
    myMouseScrollingEntries.connect(dialogTab);
  }
  if (hasTouchScreen) {
    myTapScrollingEntries.connect(dialogTab);
  }
}
