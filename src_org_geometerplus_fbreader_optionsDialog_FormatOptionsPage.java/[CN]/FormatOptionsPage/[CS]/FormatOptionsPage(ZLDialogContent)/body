{
  final ZLResource styleResource=ZLResource.resource(KEY_STYLE);
  myComboEntry=new ComboOptionEntry(this);
  ZLTextStyleCollection collection=ZLTextStyleCollection.Instance();
  byte styles[]={REGULAR,TITLE,SECTION_TITLE,SUBTITLE,H1,H2,H3,H4,H5,H6,ANNOTATION,EPIGRAPH,PREFORMATTED,AUTHOR,POEM_TITLE,STANZA,VERSE};
  final int stylesNumber=styles.length;
  for (int i=0; i < stylesNumber; ++i) {
    final ZLTextStyleDecoration decoration=collection.getDecoration(styles[i]);
    if (decoration != null) {
      myComboEntry.addValue(styleResource.getResource(decoration.getName()).getValue());
    }
  }
  dialogTab.addOption("optionsFor",myComboEntry);
  for (int i=0; i < stylesNumber; ++i) {
    ZLTextStyleDecoration d=collection.getDecoration(styles[i]);
    if ((d != null) && (d.isFullDecoration())) {
      ZLTextFullStyleDecoration decoration=(ZLTextFullStyleDecoration)d;
      final String name=styleResource.getResource(decoration.getName()).getValue();
      registerEntries(dialogTab,KEY_SPACEBEFORE,new ZLSimpleSpinOptionEntry(decoration.SpaceBeforeOption,1),KEY_LEFTINDENT,new ZLSimpleSpinOptionEntry(decoration.LeftIndentOption,1),name);
      registerEntries(dialogTab,KEY_SPACEAFTER,new ZLSimpleSpinOptionEntry(decoration.SpaceAfterOption,1),KEY_RIGHTINDENT,new ZLSimpleSpinOptionEntry(decoration.RightIndentOption,1),name);
      registerEntries(dialogTab,KEY_LINESPACING,new ZLTextLineSpaceOptionEntry(decoration.LineSpacePercentOption,dialogTab.getResource(KEY_LINESPACING)),KEY_FIRSTLINEINDENT,new ZLSimpleSpinOptionEntry(decoration.FirstLineIndentDeltaOption,1),name);
      registerEntries(dialogTab,KEY_ALIGNMENT,new ZLTextAlignmentOptionEntry(decoration.AlignmentOption,dialogTab.getResource(KEY_ALIGNMENT)),KEY_DUMMY,null,name);
    }
  }
  myComboEntry.onValueSelected(0);
}
