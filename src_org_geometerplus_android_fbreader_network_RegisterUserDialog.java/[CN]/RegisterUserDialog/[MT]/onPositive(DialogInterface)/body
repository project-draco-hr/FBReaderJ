{
  AlertDialog alert=(AlertDialog)dialog;
  myLogin=((TextView)alert.findViewById(R.id.network_register_login)).getText().toString().trim();
  myPassword=((TextView)alert.findViewById(R.id.network_register_password)).getText().toString();
  myConfirmPassword=((TextView)alert.findViewById(R.id.network_register_confirm_password)).getText().toString();
  myEmail=((TextView)alert.findViewById(R.id.network_register_email)).getText().toString().trim();
  if (myLogin.length() == 0) {
    myLogin=null;
    final ZLNetworkException error=new ZLNetworkException(NetworkException.ERROR_LOGIN_WAS_NOT_SPECIFIED);
    sendError(true,false,error.getMessage());
    return;
  }
  if (!myPassword.equals(myConfirmPassword)) {
    final String err=myResource.getResource("differentPasswords").getValue();
    myPassword=null;
    myConfirmPassword=null;
    sendError(true,false,err);
    return;
  }
  if (myEmail.length() == 0) {
    myEmail=null;
    final ZLNetworkException error=new ZLNetworkException(NetworkException.ERROR_EMAIL_WAS_NOT_SPECIFIED);
    sendError(true,false,error.getMessage());
    return;
  }
  final int atPos=myEmail.indexOf("@");
  if (atPos == -1 || myEmail.indexOf(".",atPos) == -1) {
    final ZLNetworkException error=new ZLNetworkException(NetworkException.ERROR_INVALID_EMAIL);
    sendError(true,false,error.getMessage());
    return;
  }
  final NetworkAuthenticationManager mgr=myLink.authenticationManager();
  final Runnable runnable=new Runnable(){
    public void run(){
      boolean doRestart=true;
      try {
        mgr.registerUser(myLogin,myPassword,myEmail);
        if (mgr.isAuthorised(true).Status != ZLBoolean3.B3_FALSE && mgr.needsInitialization()) {
          doRestart=false;
          mgr.initialize();
        }
      }
 catch (      ZLNetworkException e) {
        mgr.logOut();
        sendError(doRestart,false,e.getMessage());
        return;
      }
      sendSuccess(false);
    }
  }
;
  AndroidUtil.wait("registerUser",runnable,myActivity);
}
