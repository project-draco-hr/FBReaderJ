{
  String id=attributes.getValue("id");
  if (id != null) {
    if (!myReadMainText) {
      myCurrentTextModel=myBookModel.getFootnoteModel(id);
    }
  }
  FB2Tag tag;
  try {
    tag=getTag(qName);
  }
 catch (  IllegalArgumentException e) {
    return;
  }
switch (tag) {
case P:
    if (mySectionStarted) {
      mySectionStarted=false;
    }
 else     if (myInsideTitle) {
    }
  beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case SUB:
case SUP:
case CODE:
case EMPHASIS:
case STRONG:
case STRIKETHROUGH:
addControl((byte)tag.ordinal(),true);
break;
case V:
case SUBTITLE:
case TEXT_AUTHOR:
case DATE:
pushKind((byte)tag.ordinal());
beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case EMPTY_LINE:
beginParagraph(ZLTextParagraph.Kind.EMPTY_LINE_PARAGRAPH);
endParagraph();
break;
case CITE:
case EPIGRAPH:
pushKind((byte)tag.ordinal());
break;
case POEM:
myInsidePoem=true;
break;
case STANZA:
pushKind((byte)tag.ordinal());
beginParagraph(ZLTextParagraph.Kind.BEFORE_SKIP_PARAGRAPH);
endParagraph();
break;
case SECTION:
if (myReadMainText) {
insertEndOfSectionParagraph();
++mySectionDepth;
mySectionStarted=true;
}
break;
case ANNOTATION:
if (myBodyCounter == 0) {
myCurrentTextModel=myBookModel.getBookModel();
}
pushKind((byte)tag.ordinal());
break;
case TITLE:
if (myInsidePoem) {
pushKind((byte)FB2Tag.POEM.ordinal());
}
 else if (mySectionDepth == 0) {
insertEndOfSectionParagraph();
pushKind((byte)tag.ordinal());
}
 else {
pushKind((byte)FB2Tag.SECTION.ordinal());
myInsideTitle=true;
}
break;
case BODY:
++myBodyCounter;
if ((myBodyCounter == 1) || (attributes.getValue("name") == null)) {
myCurrentTextModel=myBookModel.getBookModel();
myReadMainText=true;
}
break;
default :
break;
}
}
