{
  if (myFileName != null) {
    return;
  }
  myFileName=makeImagesDir() + File.separator + myData.hashCode();
  final String type=mimeType();
  if (type == NetworkImage.MIME_PNG) {
    myFileName+=".png";
  }
 else   if (type == NetworkImage.MIME_JPEG) {
    myFileName+=".jpg";
  }
  FileOutputStream outputStream=null;
  try {
    File file=new File(myFileName);
    if (file.exists()) {
      return;
    }
    outputStream=new FileOutputStream(file);
    final int dataLength=myData.length();
    final byte[] data=new byte[myData.length() * 3 / 4 + 4];
    int dataPos=0;
    for (int pos=0; pos < dataLength; ) {
      byte n0=-1, n1=-1, n2=-1, n3=-1;
      while ((pos < dataLength) && (n0 == -1)) {
        n0=decodeByte(myData.charAt(pos++));
      }
      while ((pos < dataLength) && (n1 == -1)) {
        n1=decodeByte(myData.charAt(pos++));
      }
      while ((pos < dataLength) && (n2 == -1)) {
        n2=decodeByte(myData.charAt(pos++));
      }
      while ((pos < dataLength) && (n3 == -1)) {
        n3=decodeByte(myData.charAt(pos++));
      }
      data[dataPos++]=(byte)(n0 << 2 | n1 >> 4);
      data[dataPos++]=(byte)(((n1 & 0xf) << 4) | ((n2 >> 2) & 0xf));
      data[dataPos++]=(byte)(n2 << 6 | n3);
    }
    outputStream.write(data,0,dataPos);
  }
  finally {
    if (outputStream != null) {
      outputStream.close();
    }
    myData=null;
  }
}
