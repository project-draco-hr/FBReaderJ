{
  executeAsATransaction(new Runnable(){
    public void run(){
      final SQLiteStatement statement;
      if (link.getId() == INetworkLink.INVALID_ID) {
        if (myInsertCustomLinkStatement == null) {
          myInsertCustomLinkStatement=myDatabase.compileStatement("INSERT INTO Links (title,site_name,summary,language,predefined_id,type) VALUES (?,?,?,?,?,?)");
        }
        statement=myInsertCustomLinkStatement;
      }
 else {
        if (myUpdateCustomLinkStatement == null) {
          myUpdateCustomLinkStatement=myDatabase.compileStatement("UPDATE Links SET title = ?, site_name = ?, summary = ?, language = ?" + " WHERE link_id = ?");
        }
        statement=myUpdateCustomLinkStatement;
      }
      statement.bindString(1,link.getTitle());
      statement.bindString(2,link.getSiteName());
      SQLiteUtil.bindString(statement,3,link.getSummary());
      SQLiteUtil.bindString(statement,4,link.getLanguage());
      final long id;
      final UrlInfoCollection<UrlInfoWithDate> linksMap=new UrlInfoCollection<UrlInfoWithDate>();
      if (statement == myInsertCustomLinkStatement) {
        if (link instanceof IPredefinedNetworkLink) {
          statement.bindString(5,((IPredefinedNetworkLink)link).getPredefinedId());
        }
 else {
          SQLiteUtil.bindString(statement,5,null);
        }
        statement.bindLong(6,link.getType().Index);
        id=statement.executeInsert();
        link.setId((int)id);
      }
 else {
        id=link.getId();
        statement.bindLong(5,id);
        statement.execute();
        final Cursor linksCursor=myDatabase.rawQuery("SELECT key,url,mime,update_time FROM LinkUrls WHERE link_id = " + link.getId(),null);
        while (linksCursor.moveToNext()) {
          try {
            linksMap.addInfo(new UrlInfoWithDate(UrlInfo.Type.valueOf(linksCursor.getString(0)),linksCursor.getString(1),MimeType.get(linksCursor.getString(2)),SQLiteUtil.getDate(linksCursor,3)));
          }
 catch (          IllegalArgumentException e) {
          }
        }
        linksCursor.close();
      }
      for (      UrlInfo.Type key : link.getUrlKeys()) {
        final UrlInfoWithDate info=link.getUrlInfo(key);
        final UrlInfoWithDate dbInfo=linksMap.getInfo(key);
        linksMap.removeAllInfos(key);
        final SQLiteStatement urlStatement;
        if (dbInfo == null) {
          if (myInsertCustomLinkUrlStatement == null) {
            myInsertCustomLinkUrlStatement=myDatabase.compileStatement("INSERT OR REPLACE INTO LinkUrls(url,mime,update_time,link_id,key) VALUES (?,?,?,?,?)");
          }
          urlStatement=myInsertCustomLinkUrlStatement;
        }
 else         if (!info.equals(dbInfo)) {
          if (myUpdateCustomLinkUrlStatement == null) {
            myUpdateCustomLinkUrlStatement=myDatabase.compileStatement("UPDATE LinkUrls SET url = ?, mime = ?, update_time = ? WHERE link_id = ? AND key = ?");
          }
          urlStatement=myUpdateCustomLinkUrlStatement;
        }
 else {
          continue;
        }
        SQLiteUtil.bindString(urlStatement,1,info.Url);
        SQLiteUtil.bindString(urlStatement,2,info.Mime.toString());
        SQLiteUtil.bindDate(urlStatement,3,info.Updated);
        urlStatement.bindLong(4,id);
        urlStatement.bindString(5,key.toString());
        urlStatement.execute();
      }
      for (      UrlInfo info : linksMap.getAllInfos()) {
        myDatabase.delete("LinkUrls","link_id = ? AND key = ?",new String[]{String.valueOf(id),info.InfoType.toString()});
      }
    }
  }
);
}
