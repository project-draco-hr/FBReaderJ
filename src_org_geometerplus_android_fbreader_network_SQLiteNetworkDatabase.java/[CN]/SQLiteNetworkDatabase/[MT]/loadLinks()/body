{
  final List<INetworkLink> links=new LinkedList<INetworkLink>();
  final Cursor cursor=myDatabase.rawQuery("SELECT link_id,title,site_name,summary FROM Links",null);
  final UrlInfoCollection<UrlInfoWithDate> linksMap=new UrlInfoCollection<UrlInfoWithDate>();
  while (cursor.moveToNext()) {
    final int id=cursor.getInt(0);
    final String title=cursor.getString(1);
    final String siteName=cursor.getString(2);
    final String summary=cursor.getString(3);
    linksMap.clear();
    final Cursor linksCursor=myDatabase.rawQuery("SELECT key,url,update_time FROM LinkUrls WHERE link_id = " + id,null);
    while (linksCursor.moveToNext()) {
      try {
        linksMap.addInfo(new UrlInfoWithDate(UrlInfo.Type.valueOf(linksCursor.getString(0)),linksCursor.getString(1),SQLiteUtil.getDate(linksCursor,2)));
      }
 catch (      IllegalArgumentException e) {
      }
    }
    linksCursor.close();
    final INetworkLink l=createLink(id,siteName,title,summary,linksMap);
    if (l != null) {
      links.add(l);
    }
  }
  cursor.close();
  return links;
}
