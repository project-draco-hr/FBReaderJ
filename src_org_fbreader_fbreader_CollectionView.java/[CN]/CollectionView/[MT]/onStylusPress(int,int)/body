{
  if (super.onStylusPress(x,y)) {
    return true;
  }
  ZLTextElementArea imageArea=getElementByCoordinates(x,y);
  if ((imageArea != null) && (imageArea.Element instanceof ZLTextImageElement)) {
    ZLTextWordCursor cursor=getStartCursor();
    cursor.moveToParagraph(imageArea.ParagraphNumber);
    cursor.moveTo(imageArea.TextElementNumber,0);
    final ZLTextElement element=cursor.getElement();
    if (!(element instanceof ZLTextImageElement)) {
      return false;
    }
    final ZLTextImageElement imageElement=(ZLTextImageElement)element;
    BookDescription book=collectionModel().bookByParagraphNumber(imageArea.ParagraphNumber);
    if (book == null) {
      return false;
    }
    final String imageId=imageElement.Id;
    if (imageId == CollectionModel.BookInfoImageId) {
      if (new BookInfoDialog(myCollection,book.getFileName()).getDialog().run()) {
        myCollection.rebuild(false);
        myUpdateModel=true;
        selectBook(book);
        repaintView();
      }
      return true;
    }
 else     if (imageId == CollectionModel.RemoveBookImageId) {
      String boxKey="removeBookBox";
      final String message;
{
        final String format=ZLDialogManager.getDialogMessage(boxKey);
        int index=format.indexOf("%s");
        if (index == -1) {
          message=format;
        }
 else {
          message=format.substring(0,index) + book.getTitle() + format.substring(index + 2);
        }
      }
      if (ZLDialogManager.getInstance().showQuestionBox(boxKey,message,ZLDialogManager.YES_BUTTON,ZLDialogManager.NO_BUTTON,null) == 0) {
        CollectionModel cModel=collectionModel();
        new BookList().removeFileName(book.getFileName());
        int index=cModel.paragraphNumberByBook(book);
        ZLTextTreeParagraph paragraph=cModel.getTreeParagraph(index);
        int count=1;
        for (ZLTextTreeParagraph parent=paragraph.getParent(); (parent != null) && (parent.getChildren().size() == 1); parent=parent.getParent()) {
          ++count;
        }
        if (count > index) {
          count=index;
        }
        for (; count > 0; --count) {
          cModel.removeParagraph(index--);
        }
        if (cModel.getParagraphsNumber() == 0) {
        }
 else {
          int pIndex=getStartCursor().getParagraphCursor().getIndex();
          if (pIndex >= cModel.getParagraphsNumber()) {
            pIndex=cModel.getParagraphsNumber() - 1;
          }
          while (!cModel.getTreeParagraph(index).getParent().isOpen()) {
            --pIndex;
          }
          gotoParagraph(pIndex);
        }
        rebuildPaintInfo(true);
        getApplication().refreshWindow();
      }
      return true;
    }
    return false;
  }
  int index=getParagraphIndexByCoordinate(y);
  if (index == -1) {
    return false;
  }
  BookDescription book=collectionModel().bookByParagraphNumber(index);
  if (book != null) {
    getFBReader().openBook(book);
    getFBReader().showBookTextView();
    return true;
  }
  return false;
}
