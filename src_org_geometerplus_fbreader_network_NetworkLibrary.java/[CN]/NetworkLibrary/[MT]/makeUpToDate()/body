{
  firstTimeComputeActiveIds();
  final Map<INetworkLink,List<NetworkCatalogTree>> linkToTreeMap=new HashMap<INetworkLink,List<NetworkCatalogTree>>();
  for (  FBTree tree : myRootTree.subtrees()) {
    if (tree instanceof NetworkCatalogTree) {
      final NetworkCatalogTree nTree=(NetworkCatalogTree)tree;
      final INetworkLink link=nTree.getLink();
      if (link != null) {
        List<NetworkCatalogTree> list=linkToTreeMap.get(link);
        if (list == null) {
          list=new LinkedList<NetworkCatalogTree>();
          linkToTreeMap.put(link,list);
        }
        list.add(nTree);
      }
    }
  }
  if (linkToTreeMap.isEmpty()) {
    new RecentCatalogListTree(myRootTree,new RecentCatalogListItem(resource().getResource("recent")));
    new SearchCatalogTree(myRootTree,mySearchItem);
    new ManageCatalogsItemTree(myRootTree);
    new AddCustomCatalogItemTree(myRootTree);
  }
  int index=2;
  for (  INetworkLink link : activeLinks()) {
    final List<NetworkCatalogTree> trees=linkToTreeMap.remove(link);
    if (trees != null) {
      for (      NetworkCatalogTree t : trees) {
        myRootTree.moveSubtree(t,index++);
      }
    }
 else {
      new NetworkCatalogRootTree(myRootTree,link,index++);
    }
  }
  for (  List<NetworkCatalogTree> trees : linkToTreeMap.values()) {
    for (    NetworkCatalogTree t : trees) {
      t.removeSelf();
    }
  }
  fireModelChangedEvent(ChangeListener.Code.SomeCode);
}
