{
  final SortedSet<INetworkLink> linkSet=new TreeSet<INetworkLink>(activeLinks());
  final LinkedList<FBTree> toRemove=new LinkedList<FBTree>();
  for (  FBTree t : myRootTree.subTrees()) {
    if (t instanceof NetworkCatalogTree) {
      final INetworkLink link=((NetworkCatalogTree)t).Item.Link;
      if (link != null) {
        if (!linkSet.contains(link)) {
          toRemove.add(t);
        }
 else         if (link instanceof ICustomNetworkLink && ((ICustomNetworkLink)link).hasChanges()) {
          toRemove.add(t);
        }
 else {
          linkSet.remove(link);
        }
      }
 else {
        toRemove.add(t);
      }
    }
 else {
      toRemove.add(t);
    }
  }
  for (  FBTree tree : toRemove) {
    tree.removeSelf();
  }
  for (  INetworkLink link : linkSet) {
    int index=0;
    for (    FBTree t : myRootTree.subTrees()) {
      final INetworkLink l=((NetworkCatalogTree)t).Item.Link;
      if (l != null && link.compareTo(l) <= 0) {
        break;
      }
      ++index;
    }
    new NetworkCatalogRootTree(myRootTree,link,index);
  }
  new SearchCatalogTree(myRootTree,new SearchItem(null),0);
  new AddCustomCatalogItemTree(myRootTree);
  fireModelChangedEvent(ChangeListener.Code.SomeCode);
}
