{
  Log.w("FBREADER","makeUpToDate...");
  final LinkedList<FBTree> toRemove=new LinkedList<FBTree>();
  ListIterator<FBTree> nodeIterator=myRootTree.subTrees().listIterator();
  FBTree currentNode=null;
  int nodeCount=0;
synchronized (myLinks) {
    ListIterator<INetworkLink> it=myLinks.listIterator();
    while (it.hasNext()) {
      INetworkLink link=it.next();
      boolean processed=false;
      while (currentNode != null || nodeIterator.hasNext()) {
        if (currentNode == null) {
          currentNode=nodeIterator.next();
        }
        if (!(currentNode instanceof NetworkCatalogTree)) {
          currentNode=null;
          ++nodeCount;
          continue;
        }
        final INetworkLink nodeLink=((NetworkCatalogTree)currentNode).Item.Link;
        if (linksEqual(link,nodeLink)) {
          if (linkIsInvalid(link,nodeLink)) {
            Log.w("FBREADER","invalid link: " + link.getSiteName() + " /// "+ link.getTitle());
            toRemove.add(currentNode);
          }
 else {
            Log.w("FBREADER","link is ok: " + link.getSiteName() + " /// "+ link.getTitle());
            processed=true;
          }
          currentNode=null;
          ++nodeCount;
          break;
        }
 else {
          INetworkLink newNodeLink=null;
          ListIterator<INetworkLink> jt=myLinks.listIterator(it);
          while (jt.hasNext()) {
            final INetworkLink jlnk=jt.next();
            if (linksEqual(nodeLink,jlnk)) {
              newNodeLink=jlnk;
              break;
            }
          }
          if (newNodeLink == null) {
            Log.w("FBREADER","nodeLink not found: " + nodeLink.getSiteName() + " /// "+ nodeLink.getTitle());
            toRemove.add(currentNode);
            currentNode=null;
            ++nodeCount;
          }
 else {
            if (linkIsInvalid(newNodeLink,nodeLink)) {
              Log.w("FBREADER","move nodeLink: " + nodeLink.getSiteName() + " /// "+ nodeLink.getTitle());
              Log.w("FBREADER","new link will be: " + newNodeLink.getSiteName() + " /// "+ newNodeLink.getTitle());
              toRemove.add(currentNode);
              currentNode=null;
              ++nodeCount;
            }
 else {
              Log.w("FBREADER","need node for link: " + link.getSiteName() + " /// "+ link.getTitle());
              break;
            }
          }
        }
      }
      if (!processed) {
        Log.w("FBREADER","create node for link: " + link.getSiteName() + " /// "+ link.getTitle());
        makeValid(link);
        final int nextIndex=nodeIterator.nextIndex();
        new NetworkCatalogRootTree(myRootTree,link,nodeCount++).Item.onDisplayItem();
        nodeIterator=myRootTree.subTrees().listIterator(nextIndex + 1);
      }
    }
  }
  while (currentNode != null || nodeIterator.hasNext()) {
    if (currentNode == null) {
      currentNode=nodeIterator.next();
    }
    if (currentNode instanceof NetworkCatalogTree) {
      Log.w("FBREADER","remove node: " + currentNode.getName());
      toRemove.add(currentNode);
    }
    currentNode=null;
  }
  for (  FBTree tree : toRemove) {
    tree.removeSelf();
  }
}
