{
  final LinkedList<FBTree> toRemove=new LinkedList<FBTree>();
  ListIterator<FBTree> nodeIterator=myRootTree.subTrees().listIterator();
  FBTree currentNode=null;
  int nodeCount=0;
synchronized (myLinks) {
    ListIterator<INetworkLink> it=myLinks.listIterator();
    while (it.hasNext()) {
      INetworkLink link=it.next();
      boolean processed=false;
      while (currentNode != null || nodeIterator.hasNext()) {
        if (currentNode == null) {
          currentNode=nodeIterator.next();
        }
        if (!(currentNode instanceof NetworkCatalogTree)) {
          currentNode=null;
          ++nodeCount;
          continue;
        }
        final INetworkLink nodeLink=((NetworkCatalogTree)currentNode).Item.Link;
        if (nodeLink == link) {
          if (link instanceof ICustomNetworkLink) {
            toRemove.add(currentNode);
          }
 else {
            processed=true;
          }
          currentNode=null;
          ++nodeCount;
          break;
        }
 else {
          boolean found=false;
          ListIterator<INetworkLink> jt=myLinks.listIterator(it);
          while (jt.hasNext()) {
            if (nodeLink == jt.next()) {
              found=true;
              break;
            }
          }
          if (!found) {
            toRemove.add(currentNode);
            currentNode=null;
            ++nodeCount;
          }
 else {
            break;
          }
        }
      }
      if (!processed) {
        final int nextIndex=nodeIterator.nextIndex();
        new NetworkCatalogRootTree(myRootTree,link,nodeCount++).Item.onDisplayItem();
        nodeIterator=myRootTree.subTrees().listIterator(nextIndex + 1);
      }
    }
  }
  while (currentNode != null || nodeIterator.hasNext()) {
    if (currentNode == null) {
      currentNode=nodeIterator.next();
    }
    toRemove.add(currentNode);
    currentNode=null;
  }
  for (  FBTree tree : toRemove) {
    tree.removeSelf();
  }
}
