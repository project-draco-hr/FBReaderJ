{
  myEncoding=null;
  myLanguage=null;
  myTitle=null;
  myAuthors=null;
  myTags=null;
  mySeriesInfo=null;
  myIsSaved=false;
  final FormatPlugin plugin=PluginCollection.Instance().getPlugin(File);
  if (plugin == null) {
    throw new BookReadingException("pluginNotFound",File);
  }
  plugin.readMetaInfo(this);
  if (myTitle == null || myTitle.length() == 0) {
    final String fileName=File.getShortName();
    final int index=fileName.lastIndexOf('.');
    setTitle(index > 0 ? fileName.substring(0,index) : fileName);
  }
  final String demoPathPrefix=Paths.BooksDirectoryOption().getValue() + java.io.File.separator + "Demos"+ java.io.File.separator;
  if (File.getPath().startsWith(demoPathPrefix)) {
    final String demoTag=LibraryUtil.resource().getResource("demo").getValue();
    setTitle(getTitle() + " (" + demoTag+ ")");
    addTag(demoTag);
  }
}
