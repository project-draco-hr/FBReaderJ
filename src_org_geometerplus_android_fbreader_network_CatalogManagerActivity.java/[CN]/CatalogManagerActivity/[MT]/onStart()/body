{
  super.onStart();
  myAllItems.clear();
  final Intent intent=getIntent();
  myAllItems.add(new SectionItem("enabled"));
  final List<String> enabledIds=intent.getStringArrayListExtra(NetworkLibraryActivity.ENABLED_CATALOG_IDS_KEY);
  if (enabledIds.size() > 0) {
    final List<CatalogItem> cItems=new ArrayList<CatalogItem>();
    for (    String id : enabledIds) {
      final NetworkTree tree=NetworkLibrary.Instance().getCatalogTreeByUrlAll(id);
      if (tree != null && tree.getLink() != null) {
        cItems.add(new CatalogItem(id,true,tree));
      }
    }
    myAllItems.addAll(cItems);
    mySelectedItems.addAll(cItems);
  }
  myAllItems.add(new SectionItem("disabled"));
  final List<String> disabledIds=intent.getStringArrayListExtra(NetworkLibraryActivity.DISABLED_CATALOG_IDS_KEY);
  if (disabledIds.size() > 0) {
    final TreeSet<CatalogItem> cItems=new TreeSet<CatalogItem>();
    for (    String id : disabledIds) {
      final NetworkTree tree=NetworkLibrary.Instance().getCatalogTreeByUrlAll(id);
      if (tree != null && tree.getLink() != null) {
        cItems.add(new CatalogItem(id,false,tree));
      }
    }
    myAllItems.addAll(cItems);
  }
  setListAdapter(new CatalogsListAdapter());
  final DragSortListView list=getListView();
  list.setDropListener(new DragSortListView.DropListener(){
    @Override public void drop(    int from,    int to){
      to=Math.max(to,1);
      if (from == to) {
        return;
      }
      final DragSortListView list=getListView();
      final CatalogsListAdapter adapter=(CatalogsListAdapter)list.getInputAdapter();
      final Item item=adapter.getItem(from);
      if (item instanceof CatalogItem) {
        adapter.remove(item);
        adapter.insert(item,to);
        list.moveCheckState(from,to);
        setResultIds(item,to);
      }
    }
  }
);
  list.setRemoveListener(new DragSortListView.RemoveListener(){
    @Override public void remove(    int which){
      final DragSortListView list=getListView();
      final CatalogsListAdapter adapter=(CatalogsListAdapter)list.getInputAdapter();
      final Item item=adapter.getItem(which);
      if (item instanceof CatalogItem) {
        adapter.remove(item);
        list.removeCheckState(which);
      }
    }
  }
);
}
