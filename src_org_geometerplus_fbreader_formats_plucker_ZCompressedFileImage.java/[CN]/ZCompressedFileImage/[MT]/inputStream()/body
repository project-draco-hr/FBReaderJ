{
  try {
    final InputStream stream=myFile.getInputStream();
    if (stream == null) {
      return null;
    }
    final ArrayList<byte[]> data=new ArrayList<byte[]>();
    byte[] buffer;
    int sizeOfBufferData;
    stream.skip(myOffset);
    byte[] targetBuffer=new byte[myCompressedSize];
    stream.read(targetBuffer,0,myCompressedSize);
    Inflater decompressor=new Inflater();
    decompressor.setInput(targetBuffer,0,myCompressedSize);
    do {
      buffer=new byte[4096];
      sizeOfBufferData=decompressor.inflate(buffer);
      data.add(buffer);
    }
 while (sizeOfBufferData == 4096);
    decompressor.end();
    final int dataSizeMinus1=data.size() - 1;
    buffer=new byte[dataSizeMinus1 * 4096 + sizeOfBufferData];
    for (int i=0; i < dataSizeMinus1; ++i) {
      System.arraycopy(data.get(i),0,buffer,i * 4096,4096);
    }
    System.arraycopy(data.get(dataSizeMinus1),0,buffer,dataSizeMinus1 * 4096,sizeOfBufferData);
    return new ByteArrayInputStream(buffer);
  }
 catch (  IOException e) {
    return null;
  }
catch (  DataFormatException e) {
    return null;
  }
}
