{
  if (data == null) {
    fbreader.hideOutline();
    return;
  }
  final int errorCode=data.getIntExtra("error.code",-1);
  if (resultCode != Activity.RESULT_OK || errorCode != -1) {
    showDictanError(fbreader,errorCode,data);
    return;
  }
  String text=data.getStringExtra("article.text");
  if (text == null) {
    showDictanError(fbreader,-1,data);
    return;
  }
  final int index=text.indexOf("\000");
  if (index >= 0) {
    text=text.substring(0,index);
  }
  final SuperActivityToast toast;
  if (text.length() == MAX_LENGTH_FOR_TOAST) {
    text=trimArticle(text);
    toast=new SuperActivityToast(fbreader,SuperToast.Type.BUTTON);
    toast.setButtonIcon(android.R.drawable.ic_menu_more,ZLResource.resource("footnoteToast").getResource("more").getValue());
    toast.setOnClickWrapper(new OnClickWrapper("dict",new SuperToast.OnClickListener(){
      @Override public void onClick(      View view,      Parcelable token){
        final String word=data.getStringExtra("article.word");
        final PackageInfo info=getInfo("dictan");
        final Intent intent=info.getDictionaryIntent(word);
        try {
          intent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
          intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
          fbreader.startActivity(intent);
          fbreader.overridePendingTransition(0,0);
        }
 catch (        ActivityNotFoundException e) {
        }
      }
    }
));
  }
 else {
    toast=new SuperActivityToast(fbreader,SuperToast.Type.STANDARD);
  }
  toast.setText(text);
  toast.setDuration(20000);
  toast.setOnDismissWrapper(new OnDismissWrapper("ftnt",new SuperToast.OnDismissListener(){
    @Override public void onDismiss(    View view){
      fbreader.hideOutline();
    }
  }
));
  fbreader.showToast(toast);
}
