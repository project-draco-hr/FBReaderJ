{
  String id=attributes.get("id");
  if (id != null) {
    if (!myReadMainText) {
      myModelReader.setFootnoteTextModel(id);
    }
    myModelReader.addHyperlinkLabel(id);
  }
switch (FB2Tag.getTagByName(tagName)) {
case FB2Tag.P:
    if (mySectionStarted) {
      mySectionStarted=false;
    }
 else     if (myInsideTitle) {
      myModelReader.addContentsData(SPACE);
    }
  myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.SUB:
myModelReader.addControl(FBTextKind.SUB,true);
break;
case FB2Tag.SUP:
myModelReader.addControl(FBTextKind.SUP,true);
break;
case FB2Tag.CODE:
myModelReader.addControl(FBTextKind.CODE,true);
break;
case FB2Tag.EMPHASIS:
myModelReader.addControl(FBTextKind.EMPHASIS,true);
break;
case FB2Tag.STRONG:
myModelReader.addControl(FBTextKind.STRONG,true);
break;
case FB2Tag.STRIKETHROUGH:
myModelReader.addControl(FBTextKind.STRIKETHROUGH,true);
break;
case FB2Tag.V:
myModelReader.pushKind(FBTextKind.VERSE);
myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.TEXT_AUTHOR:
myModelReader.pushKind(FBTextKind.AUTHOR);
myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.SUBTITLE:
myModelReader.pushKind(FBTextKind.SUBTITLE);
myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.DATE:
myModelReader.pushKind(FBTextKind.DATE);
myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.EMPTY_LINE:
myModelReader.beginParagraph(ZLTextParagraph.Kind.EMPTY_LINE_PARAGRAPH);
myModelReader.endParagraph();
break;
case FB2Tag.CITE:
myModelReader.pushKind(FBTextKind.CITE);
break;
case FB2Tag.EPIGRAPH:
myModelReader.pushKind(FBTextKind.EPIGRAPH);
break;
case FB2Tag.POEM:
myInsidePoem=true;
break;
case FB2Tag.STANZA:
myModelReader.pushKind(FBTextKind.STANZA);
myModelReader.beginParagraph(ZLTextParagraph.Kind.BEFORE_SKIP_PARAGRAPH);
myModelReader.endParagraph();
break;
case FB2Tag.SECTION:
if (myReadMainText) {
myModelReader.insertEndOfSectionParagraph();
++mySectionDepth;
myModelReader.beginContentsParagraph();
mySectionStarted=true;
}
break;
case FB2Tag.ANNOTATION:
if (myBodyCounter == 0) {
myModelReader.setMainTextModel();
}
myModelReader.pushKind(FBTextKind.ANNOTATION);
break;
case FB2Tag.TITLE:
if (myInsidePoem) {
myModelReader.pushKind(FBTextKind.POEM_TITLE);
}
 else if (mySectionDepth == 0) {
myModelReader.insertEndOfSectionParagraph();
myModelReader.pushKind(FBTextKind.TITLE);
}
 else {
myModelReader.pushKind(FBTextKind.SECTION_TITLE);
myInsideTitle=true;
myModelReader.enterTitle();
}
break;
case FB2Tag.BODY:
++myBodyCounter;
myParagraphsBeforeBodyNumber=myModelReader.getModel().getBookTextModel().getParagraphsNumber();
if ((myBodyCounter == 1) || (attributes.get("name") == null)) {
myModelReader.setMainTextModel();
myReadMainText=true;
}
myModelReader.pushKind(FBTextKind.REGULAR);
break;
case FB2Tag.A:
String ref=reference(attributes);
if ((ref != null) && (ref.length() != 0)) {
if (ref.charAt(0) == '#') {
myHyperlinkType=FBTextKind.FOOTNOTE;
ref=ref.substring(1);
}
 else {
myHyperlinkType=FBTextKind.EXTERNAL_HYPERLINK;
}
myModelReader.addHyperlinkControl(myHyperlinkType,ref);
}
 else {
myHyperlinkType=FBTextKind.FOOTNOTE;
myModelReader.addControl(myHyperlinkType,true);
}
break;
case FB2Tag.COVERPAGE:
if (myBodyCounter == 0) {
myInsideCoverpage=true;
myModelReader.setMainTextModel();
}
break;
case FB2Tag.IMAGE:
String imgRef=reference(attributes);
if ((imgRef != null) && (imgRef.length() != 0) && (imgRef.charAt(0) == '#')) {
String vOffset=attributes.get("voffset");
short offset=0;
try {
offset=Short.parseShort(vOffset);
}
 catch (NumberFormatException e) {
}
imgRef=imgRef.substring(1);
if (!imgRef.equals(myCoverImageReference) || myParagraphsBeforeBodyNumber != myModelReader.getModel().getBookTextModel().getParagraphsNumber()) {
myModelReader.addImageReference(imgRef,offset);
}
if (myInsideCoverpage) {
myCoverImageReference=imgRef;
}
}
break;
case FB2Tag.BINARY:
String contentType=attributes.get("content-type");
String imgId=attributes.get("id");
if ((contentType != null) && (id != null)) {
myCurrentImage=new Base64EncodedImage(contentType);
myModelReader.addImage(imgId,myCurrentImage);
}
break;
default :
break;
}
}
