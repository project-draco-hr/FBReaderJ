{
  String id=attributes.get("id");
  if (id != null) {
    if (!myReadMainText) {
      myModelReader.setFootnoteTextModel(id);
    }
    myModelReader.addHyperlinkLabel(id);
  }
  FB2Tag tag;
  try {
    tag=getTag(tagName);
  }
 catch (  IllegalArgumentException e) {
    return;
  }
switch (tag) {
case P:
    if (mySectionStarted) {
      mySectionStarted=false;
    }
 else     if (myInsideTitle) {
      myModelReader.addContentsData(SPACE);
    }
  myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case SUB:
myModelReader.addControl(FBTextKind.SUB,true);
break;
case SUP:
myModelReader.addControl(FBTextKind.SUP,true);
break;
case CODE:
myModelReader.addControl(FBTextKind.CODE,true);
break;
case EMPHASIS:
myModelReader.addControl(FBTextKind.EMPHASIS,true);
break;
case STRONG:
myModelReader.addControl(FBTextKind.STRONG,true);
break;
case STRIKETHROUGH:
myModelReader.addControl(FBTextKind.STRIKETHROUGH,true);
break;
case V:
myModelReader.pushKind(FBTextKind.VERSE);
myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case TEXT_AUTHOR:
myModelReader.pushKind(FBTextKind.AUTHOR);
myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case SUBTITLE:
myModelReader.pushKind(FBTextKind.SUBTITLE);
myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case DATE:
myModelReader.pushKind(FBTextKind.DATE);
myModelReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case EMPTY_LINE:
myModelReader.beginParagraph(ZLTextParagraph.Kind.EMPTY_LINE_PARAGRAPH);
myModelReader.endParagraph();
break;
case CITE:
myModelReader.pushKind(FBTextKind.CITE);
break;
case EPIGRAPH:
myModelReader.pushKind(FBTextKind.EPIGRAPH);
break;
case POEM:
myInsidePoem=true;
break;
case STANZA:
myModelReader.pushKind(FBTextKind.STANZA);
myModelReader.beginParagraph(ZLTextParagraph.Kind.BEFORE_SKIP_PARAGRAPH);
myModelReader.endParagraph();
break;
case SECTION:
if (myReadMainText) {
myModelReader.insertEndOfSectionParagraph();
++mySectionDepth;
myModelReader.beginContentsParagraph();
mySectionStarted=true;
}
break;
case ANNOTATION:
if (myBodyCounter == 0) {
myModelReader.setMainTextModel();
}
myModelReader.pushKind(FBTextKind.ANNOTATION);
break;
case TITLE:
if (myInsidePoem) {
myModelReader.pushKind(FBTextKind.POEM_TITLE);
}
 else if (mySectionDepth == 0) {
myModelReader.insertEndOfSectionParagraph();
myModelReader.pushKind(FBTextKind.TITLE);
}
 else {
myModelReader.pushKind(FBTextKind.SECTION_TITLE);
myInsideTitle=true;
myModelReader.enterTitle();
}
break;
case BODY:
++myBodyCounter;
myParagraphsBeforeBodyNumber=myModelReader.getModel().getBookModel().getParagraphsNumber();
if ((myBodyCounter == 1) || (attributes.get("name") == null)) {
myModelReader.setMainTextModel();
myReadMainText=true;
}
myModelReader.pushKind(FBTextKind.REGULAR);
break;
case A:
String ref=reference(attributes);
if ((ref != null) && (ref.length() != 0)) {
if (ref.charAt(0) == '#') {
myHyperlinkType=FBTextKind.FOOTNOTE;
ref=ref.substring(1);
}
 else {
myHyperlinkType=FBTextKind.EXTERNAL_HYPERLINK;
}
myModelReader.addHyperlinkControl(myHyperlinkType,ref);
}
 else {
myHyperlinkType=FBTextKind.FOOTNOTE;
myModelReader.addControl(myHyperlinkType,true);
}
break;
case COVERPAGE:
if (myBodyCounter == 0) {
myInsideCoverpage=true;
myModelReader.setMainTextModel();
}
break;
case IMAGE:
String imgRef=reference(attributes);
String vOffset=attributes.get("voffset");
short offset=0;
try {
offset=Short.valueOf(vOffset);
}
 catch (NumberFormatException e) {
}
if ((imgRef != null) && (imgRef.length() != 0) && (imgRef.charAt(0) == '#')) {
imgRef=imgRef.substring(1);
if (!imgRef.equals(myCoverImageReference) || myParagraphsBeforeBodyNumber != myModelReader.getModel().getBookModel().getParagraphsNumber()) {
myModelReader.addImageReference(imgRef,offset);
}
if (myInsideCoverpage) {
myCoverImageReference=imgRef;
}
}
break;
case BINARY:
String contentType=attributes.get("content-type");
String imgId=attributes.get("id");
if ((contentType != null) && (id != null)) {
myCurrentImage=new Base64EncodedImage(contentType);
myModelReader.addImage(imgId,myCurrentImage);
myProcessingImage=true;
}
break;
default :
break;
}
}
