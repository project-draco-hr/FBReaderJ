{
  String id=attributes.getValue("id");
  if (id != null) {
    if (!myReadMainText) {
      setFootnoteTextModel(id);
    }
    addHyperlinkLabel(id);
  }
  final byte tag=FB2Tag.getTagByName(tagName);
  byte[] tagStack=myTagStack;
  if (tagStack.length == myTagStackSize) {
    tagStack=ZLArrayUtils.createCopy(tagStack,myTagStackSize,myTagStackSize * 2);
    myTagStack=tagStack;
  }
  tagStack[myTagStackSize++]=tag;
switch (tag) {
case FB2Tag.FICTIONBOOK:
{
      final int attibutesNumber=attributes.getSize();
      for (int i=0; i < attibutesNumber; ++i) {
        final String key=attributes.getKey(i);
        if (key.startsWith("xmlns:")) {
          final String value=attributes.getValue(key);
          if (value.endsWith("/xlink")) {
            myHrefAttribute=(key.substring(6) + ":href").intern();
            break;
          }
        }
      }
      break;
    }
case FB2Tag.P:
  if (mySectionStarted) {
    mySectionStarted=false;
  }
 else   if (myInsideTitle) {
    addContentsData(SPACE);
  }
beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.SUB:
addControl(FBTextKind.SUB,true);
break;
case FB2Tag.SUP:
addControl(FBTextKind.SUP,true);
break;
case FB2Tag.CODE:
addControl(FBTextKind.CODE,true);
break;
case FB2Tag.EMPHASIS:
addControl(FBTextKind.EMPHASIS,true);
break;
case FB2Tag.STRONG:
addControl(FBTextKind.STRONG,true);
break;
case FB2Tag.STRIKETHROUGH:
addControl(FBTextKind.STRIKETHROUGH,true);
break;
case FB2Tag.V:
pushKind(FBTextKind.VERSE);
beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.TEXT_AUTHOR:
pushKind(FBTextKind.AUTHOR);
beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.SUBTITLE:
pushKind(FBTextKind.SUBTITLE);
beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.DATE:
pushKind(FBTextKind.DATE);
beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.EMPTY_LINE:
beginParagraph(ZLTextParagraph.Kind.EMPTY_LINE_PARAGRAPH);
endParagraph();
break;
case FB2Tag.CITE:
pushKind(FBTextKind.CITE);
break;
case FB2Tag.EPIGRAPH:
pushKind(FBTextKind.EPIGRAPH);
break;
case FB2Tag.POEM:
myInsidePoem=true;
break;
case FB2Tag.STANZA:
pushKind(FBTextKind.STANZA);
beginParagraph(ZLTextParagraph.Kind.BEFORE_SKIP_PARAGRAPH);
endParagraph();
break;
case FB2Tag.SECTION:
if (myReadMainText) {
insertEndOfSectionParagraph();
++mySectionDepth;
beginContentsParagraph();
mySectionStarted=true;
}
break;
case FB2Tag.ANNOTATION:
if (myBodyCounter == 0) {
setMainTextModel();
}
pushKind(FBTextKind.ANNOTATION);
break;
case FB2Tag.TITLE:
if (myInsidePoem) {
pushKind(FBTextKind.POEM_TITLE);
}
 else if (mySectionDepth == 0) {
insertEndOfSectionParagraph();
pushKind(FBTextKind.TITLE);
}
 else {
pushKind(FBTextKind.SECTION_TITLE);
myInsideTitle=true;
enterTitle();
}
break;
case FB2Tag.BODY:
++myBodyCounter;
myParagraphsBeforeBodyNumber=getModel().getBookTextModel().getParagraphsNumber();
if ((myBodyCounter == 1) || (attributes.getValue("name") == null)) {
setMainTextModel();
myReadMainText=true;
}
pushKind(FBTextKind.REGULAR);
break;
case FB2Tag.A:
String ref=attributes.getValue(myHrefAttribute);
if ((ref != null) && (ref.length() != 0)) {
if (ref.charAt(0) == '#') {
myHyperlinkType=FBTextKind.FOOTNOTE;
ref=ref.substring(1);
}
 else {
myHyperlinkType=FBTextKind.EXTERNAL_HYPERLINK;
}
addHyperlinkControl(myHyperlinkType,ref);
}
 else {
myHyperlinkType=FBTextKind.FOOTNOTE;
addControl(myHyperlinkType,true);
}
break;
case FB2Tag.COVERPAGE:
if (myBodyCounter == 0) {
myInsideCoverpage=true;
setMainTextModel();
}
break;
case FB2Tag.IMAGE:
String imgRef=attributes.getValue(myHrefAttribute);
if ((imgRef != null) && (imgRef.length() != 0) && (imgRef.charAt(0) == '#')) {
String vOffset=attributes.getValue("voffset");
short offset=0;
try {
offset=Short.parseShort(vOffset);
}
 catch (NumberFormatException e) {
}
imgRef=imgRef.substring(1);
if (!imgRef.equals(myCoverImageReference) || myParagraphsBeforeBodyNumber != getModel().getBookTextModel().getParagraphsNumber()) {
addImageReference(imgRef,offset);
}
if (myInsideCoverpage) {
myCoverImageReference=imgRef;
}
}
break;
case FB2Tag.BINARY:
String contentType=attributes.getValue("content-type");
String imgId=attributes.getValue("id");
if ((contentType != null) && (id != null)) {
myCurrentImage=new Base64EncodedImage(contentType);
addImage(imgId,myCurrentImage);
}
break;
default :
break;
}
}
