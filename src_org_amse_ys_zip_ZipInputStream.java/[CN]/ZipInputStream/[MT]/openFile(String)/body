{
  if (!myFileHeaders.isEmpty()) {
    int i=0;
    int maxI=myFileHeaders.size();
    for (i=0; i < maxI; i++) {
      if (myFileHeaders.get(i).FileName.equals(fileToOpen)) {
        myFileIsOpened=true;
        myIndexOfFileOpened=i;
        int offset=myFileHeaders.get(i).OffsetOfLocalData;
        myZipFile.setPosition(offset);
        myDecompressor=Decompressor.init(myZipFile,myFileHeaders.get(myIndexOfFileOpened));
        return true;
      }
    }
    if (myAllFilesAreRead) {
      return false;
    }
    LocalFileHeader lastHeader=myFileHeaders.get(i);
    if (lastHeader.sizeIsKnown()) {
      int nextHeaderShift=lastHeader.OffsetOfLocalData + lastHeader.getCompressedSize();
      myZipFile.setPosition(nextHeaderShift);
    }
 else {
      findAndReadDescriptor();
    }
  }
  do {
    int header=read4Bytes();
    if (header != LocalFileHeader.FILE_HEADER_SIGNATURE) {
      if (header == LocalFileHeader.FOLDER_HEADER_SIGNATURE) {
        break;
      }
 else {
        throw new WrongZipFormatException("readHeaders. Wrong signature found = " + header + " at position "+ myCurrentPosition);
      }
    }
  }
 while (!readFileHeader(true,fileToOpen));
  if (myFileHeaders.get(myFileHeaders.size() - 1).FileName.equals(fileToOpen)) {
    myFileIsOpened=true;
    myIndexOfFileOpened=myFileHeaders.size() - 1;
    myDecompressor=Decompressor.init(myZipFile,myFileHeaders.get(myIndexOfFileOpened));
    return true;
  }
 else {
    return false;
  }
}
