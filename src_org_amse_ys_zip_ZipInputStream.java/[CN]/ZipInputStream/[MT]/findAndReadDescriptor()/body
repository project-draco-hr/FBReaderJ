{
  byte[] tempArray=new byte[12];
  mainLoop:   while (true) {
    int tempHeader=0;
    do {
      int nextByte=myZipFile.read();
      myCurrentPosition+=1;
      if (nextByte < 0) {
        throw new WrongZipFormatException("readFileHeaders. Unexpected end of file when looking for DataDescriptor");
      }
      tempHeader=((tempHeader << 8) & (0x0ffffffff)) + (byte)nextByte;
    }
 while (tempHeader != LocalFileHeader.DATA_DESCRIPTOR_SIGNATURE);
    myZipFile.read(tempArray);
    myCurrentPosition+=12;
    long compressedSize=(byteToLong(tempArray[7]) << 24) + (byteToLong(tempArray[6]) << 16) + (byteToLong(tempArray[5]) << 8)+ byteToLong(tempArray[4]);
    long uncompressedSize=((byteToLong(tempArray[11]) << 24) + (byteToLong(tempArray[10]) << 16) + (byteToLong(tempArray[9]) << 8)+ byteToLong(tempArray[8]));
    LocalFileHeader lastHeader=myFileHeaders.get(myFileHeaders.size() - 1);
    if ((myCurrentPosition - lastHeader.OffsetOfLocalData - 16) == compressedSize) {
      lastHeader.setSizes((int)compressedSize,(int)uncompressedSize);
      break mainLoop;
    }
 else {
      myZipFile.backSkip(12);
      continue mainLoop;
    }
  }
}
