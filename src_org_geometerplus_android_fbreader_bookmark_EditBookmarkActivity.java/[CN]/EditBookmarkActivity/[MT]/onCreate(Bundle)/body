{
  super.onCreate(bundle);
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.edit_bookmark);
  myBookmark=FBReaderIntents.getBookmarkExtra(getIntent());
  if (myBookmark == null) {
    finish();
    return;
  }
  final DisplayMetrics dm=getResources().getDisplayMetrics();
  final int width=Math.min((int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,500,dm),dm.widthPixels * 9 / 10);
  final int height=Math.min((int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,350,dm),dm.heightPixels * 9 / 10);
  final TabHost tabHost=(TabHost)findViewById(R.id.edit_bookmark_tabhost);
  tabHost.setLayoutParams(new FrameLayout.LayoutParams(new ViewGroup.LayoutParams(width,height)));
  tabHost.setup();
  addTab(tabHost,"text",R.id.edit_bookmark_content_text);
  addTab(tabHost,"style",R.id.edit_bookmark_content_style);
  addTab(tabHost,"delete",R.id.edit_bookmark_content_delete);
  final EditText editor=(EditText)findViewById(R.id.edit_bookmark_text);
  editor.setText(myBookmark.getText());
  final int len=editor.getText().length();
  editor.setSelection(len,len);
  final Button saveTextButton=(Button)findViewById(R.id.edit_bookmark_save_text_button);
  saveTextButton.setEnabled(false);
  saveTextButton.setText(myResource.getResource("saveText").getValue());
  saveTextButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      myCollection.bindToService(EditBookmarkActivity.this,new Runnable(){
        public void run(){
          myBookmark.setText(editor.getText().toString());
          myCollection.saveBookmark(myBookmark);
          saveTextButton.setEnabled(false);
        }
      }
);
    }
  }
);
  editor.addTextChangedListener(new TextWatcher(){
    @Override public void onTextChanged(    CharSequence sequence,    int start,    int before,    int count){
      final String originalText=myBookmark.getText();
      saveTextButton.setEnabled(!originalText.equals(editor.getText().toString()));
    }
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void afterTextChanged(    Editable s){
    }
  }
);
  final Button deleteButton=(Button)findViewById(R.id.edit_bookmark_delete_button);
  deleteButton.setText(myResource.getResource("deleteBookmark").getValue());
  deleteButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      myCollection.bindToService(EditBookmarkActivity.this,new Runnable(){
        public void run(){
          myCollection.deleteBookmark(myBookmark);
          finish();
        }
      }
);
    }
  }
);
}
