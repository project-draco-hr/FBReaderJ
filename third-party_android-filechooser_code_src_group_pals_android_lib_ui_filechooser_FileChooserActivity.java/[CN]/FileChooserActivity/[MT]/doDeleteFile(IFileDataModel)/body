{
  if (mFileProvider instanceof LocalFileProvider && !Utils.hasPermissions(this,Manifest.permission.WRITE_EXTERNAL_STORAGE)) {
    notifyDataModelNotDeleted(data);
    Dlg.toast(this,R.string.afc_msg_app_doesnot_have_permission_to_delete_files,Dlg._LengthShort);
    return;
  }
  Dlg.confirmYesno(this,getString(R.string.afc_pmsg_confirm_delete_file,data.getFile().isFile() ? getString(R.string.afc_file) : getString(R.string.afc_folder),data.getFile().getName()),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      new LoadingDialog(FileChooserActivity.this,getString(R.string.afc_pmsg_deleting_file,data.getFile().isFile() ? getString(R.string.afc_file) : getString(R.string.afc_folder),data.getFile().getName()),true){
        private Thread mThread=FileUtils.createDeleteFileThread(data.getFile(),mFileProvider,true);
        private final boolean _isFile=data.getFile().isFile();
        private void notifyFileDeleted(){
          mFileAdapter.remove(data);
          mFileAdapter.notifyDataSetChanged();
          refreshHistories();
          Dlg.toast(FileChooserActivity.this,getString(R.string.afc_pmsg_file_has_been_deleted,_isFile ? getString(R.string.afc_file) : getString(R.string.afc_folder),data.getFile().getName()),Dlg._LengthShort);
        }
        @Override protected void onPreExecute(){
          super.onPreExecute();
          mThread.start();
        }
        @Override protected Object doInBackground(        Void... arg0){
          while (mThread.isAlive()) {
            try {
              mThread.join(DisplayPrefs._DelayTimeWaitingThreads);
            }
 catch (            InterruptedException e) {
              mThread.interrupt();
            }
          }
          return null;
        }
        @Override protected void onCancelled(){
          mThread.interrupt();
          if (data.getFile().exists()) {
            notifyDataModelNotDeleted(data);
            Dlg.toast(FileChooserActivity.this,R.string.afc_msg_cancelled,Dlg._LengthShort);
          }
 else           notifyFileDeleted();
          super.onCancelled();
        }
        @Override protected void onPostExecute(        Object result){
          super.onPostExecute(result);
          if (data.getFile().exists()) {
            notifyDataModelNotDeleted(data);
            Dlg.toast(FileChooserActivity.this,getString(R.string.afc_pmsg_cannot_delete_file,data.getFile().isFile() ? getString(R.string.afc_file) : getString(R.string.afc_folder),data.getFile().getName()),Dlg._LengthShort);
          }
 else           notifyFileDeleted();
        }
      }
.execute();
    }
  }
,new DialogInterface.OnCancelListener(){
    @Override public void onCancel(    DialogInterface dialog){
      notifyDataModelNotDeleted(data);
    }
  }
);
}
