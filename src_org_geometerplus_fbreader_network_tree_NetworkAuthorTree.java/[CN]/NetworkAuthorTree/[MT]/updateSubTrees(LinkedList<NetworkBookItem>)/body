{
  if (myBooksNumber >= books.size()) {
    return;
  }
  ListIterator<NetworkBookItem> booksIterator=books.listIterator(myBooksNumber);
  while (booksIterator.hasNext()) {
    NetworkBookItem book=booksIterator.next();
    if (book.SeriesTitle != null) {
      final int seriesPosition=getSeriesIndex(book.SeriesTitle);
      if (seriesPosition == -1) {
        final int insertAt=subTrees().size();
        setSeriesIndex(book.SeriesTitle,insertAt);
        final NetworkSeriesTree seriesTree=new NetworkSeriesTree(this,book.SeriesTitle,insertAt,false);
        new NetworkBookTree(seriesTree,book);
      }
 else {
        FBTree treeAtSeriesPosition=subTrees().get(seriesPosition);
        if (!(treeAtSeriesPosition instanceof NetworkSeriesTree)) {
          throw new RuntimeException("That's impossible!!!");
        }
        NetworkSeriesTree seriesTree=(NetworkSeriesTree)treeAtSeriesPosition;
        ListIterator<FBTree> nodesIterator=seriesTree.subTrees().listIterator();
        int insertAt=0;
        while (nodesIterator.hasNext()) {
          FBTree tree=nodesIterator.next();
          if (!(tree instanceof NetworkBookTree)) {
            throw new RuntimeException("That's impossible!!!");
          }
          NetworkBookTree bookTree=(NetworkBookTree)tree;
          if (bookTree.Book.IndexInSeries > book.IndexInSeries) {
            break;
          }
          ++insertAt;
        }
        new NetworkBookTree(seriesTree,book,insertAt);
      }
    }
 else {
      new NetworkBookTree(this,book);
    }
  }
  myBooksNumber=books.size();
}
