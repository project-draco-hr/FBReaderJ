{
  super.onPrepareOptionsMenu(menu);
  boolean enableUploadAgain=false;
  boolean enableTryAgain=false;
  boolean enableDeleteAll=false;
  final LibraryTree tree=getCurrentTree();
  if (tree instanceof SyncLabelTree) {
    final String label=((SyncLabelTree)tree).Label;
    if (Book.SYNC_DELETED_LABEL.equals(label)) {
      enableUploadAgain=true;
      enableDeleteAll=true;
    }
 else     if (Book.SYNC_FAILURE_LABEL.equals(label)) {
      enableTryAgain=true;
    }
  }
  final MenuItem rescanItem=menu.findItem(OptionsItemId.Rescan);
  myCollection.bindToService(this,new Runnable(){
    public void run(){
      rescanItem.setEnabled(myCollection.status().IsCompleted);
    }
  }
);
  rescanItem.setVisible(tree == myRootTree);
  menu.findItem(OptionsItemId.UploadAgain).setVisible(enableUploadAgain);
  menu.findItem(OptionsItemId.TryAgain).setVisible(enableTryAgain);
  menu.findItem(OptionsItemId.DeleteAll).setVisible(enableDeleteAll);
  return true;
}
