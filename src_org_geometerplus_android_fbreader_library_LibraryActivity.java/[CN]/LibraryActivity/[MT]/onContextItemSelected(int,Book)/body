{
switch (itemId) {
case ItemId.OpenBook:
    FBReader.openBookActivity(this,book,null);
  return true;
case ItemId.ShowBookInfo:
showBookInfo(book);
return true;
case ItemId.ShareBook:
FBUtil.shareBook(this,book);
return true;
case ItemId.AddToFavorites:
book.addLabel(Book.FAVORITE_LABEL);
myRootTree.Collection.saveBook(book);
return true;
case ItemId.RemoveFromFavorites:
book.removeLabel(Book.FAVORITE_LABEL);
myRootTree.Collection.saveBook(book);
if (getCurrentTree().onBookEvent(BookEvent.Updated,book)) {
getListAdapter().replaceAll(getCurrentTree().subtrees(),true);
}
return true;
case ItemId.MarkAsRead:
book.addLabel(Book.READ_LABEL);
myRootTree.Collection.saveBook(book);
getListView().invalidateViews();
return true;
case ItemId.MarkAsUnread:
book.removeLabel(Book.READ_LABEL);
myRootTree.Collection.saveBook(book);
getListView().invalidateViews();
return true;
case ItemId.DeleteBook:
tryToDeleteBook(book);
return true;
case ItemId.SyncAgain:
book.removeLabel(Book.SYNC_FAILURE_LABEL);
book.removeLabel(Book.SYNC_DELETED_LABEL);
book.addLabel(Book.SYNC_TOSYNC_LABEL);
myRootTree.Collection.saveBook(book);
if (getCurrentTree().onBookEvent(BookEvent.Updated,book)) {
getListAdapter().replaceAll(getCurrentTree().subtrees(),true);
}
return true;
}
return false;
}
