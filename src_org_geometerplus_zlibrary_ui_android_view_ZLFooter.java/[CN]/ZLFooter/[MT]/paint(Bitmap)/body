{
  boolean infoChanged=false;
  final ZLTextView view=(ZLTextView)ZLApplication.Instance().getCurrentView();
  int bgColor=ZLAndroidColorUtil.rgb(view.getBackgroundColor());
  int fgColor=ZLAndroidColorUtil.rgb(view.getTextColor(FBHyperlinkType.NONE));
  if (myLastFgColor != fgColor || myLastBgColor != bgColor) {
    infoChanged=true;
    myLastFgColor=fgColor;
    myLastBgColor=bgColor;
  }
  final int width=bitmap.getWidth();
  final int height=view.getFooterArea().getHeight();
  int delta=height <= 10 ? 0 : 1;
  if (height != myLastHeight) {
    myLastHeight=height;
    myTextPaint.setTextSize(height <= 10 ? height + 3 : height + 1);
    myFgPaint.setStrokeWidth(height <= 10 ? 1 : 2);
    myTextPaint.setTypeface(Typeface.create(Typeface.SANS_SERIF,height <= 10 ? Typeface.NORMAL : Typeface.BOLD));
    myTextPaint.setTextAlign(Paint.Align.RIGHT);
    myTextPaint.setStyle(Paint.Style.FILL);
    myTextPaint.setAntiAlias(true);
    infoChanged=true;
  }
  if (width != myLastWidth) {
    myLastWidth=width;
    infoChanged=true;
  }
  Canvas canvas=new Canvas(bitmap);
  final ZLTextView textView=(ZLTextView)view;
  final int pagesProgress=textView.computeCurrentPage();
  final int bookLength=textView.computePageNumber();
  final FBReaderApp fbReader=(FBReaderApp)FBReaderApp.Instance();
  final StringBuilder info=new StringBuilder();
  if (fbReader.FooterShowProgress.getValue()) {
    info.append(pagesProgress);
    info.append("/");
    info.append(bookLength);
  }
  if (fbReader.FooterShowBattery.getValue()) {
    if (info.length() > 0) {
      info.append(" ");
    }
    info.append(ZLApplication.Instance().getBatteryLevel());
    info.append("%");
  }
  if (fbReader.FooterShowClock.getValue()) {
    if (info.length() > 0) {
      info.append(" ");
    }
    Date date=new Date();
    info.append(String.format("%02d:%02d",date.getHours(),date.getMinutes()));
  }
  final String infoString=info.toString();
  if (!infoString.equals(myInfoString)) {
    myInfoString=infoString;
    infoChanged=true;
  }
  if (infoChanged) {
    Rect infoRect=new Rect();
    myTextPaint.getTextBounds(infoString,0,infoString.length(),infoRect);
    int infoWidth=infoString.equals("") ? 0 : infoRect.width() + 10;
    myBgPaint.setColor(bgColor);
    canvas.drawRect(width - infoWidth,0,width,height,myBgPaint);
    myTextPaint.setColor(fgColor);
    canvas.drawText(infoString,width - 1,height - delta,myTextPaint);
    myBgPaint.setColor(bgColor);
    myGaugeRect.set(0,0,width - infoWidth,height);
    canvas.drawRect(myGaugeRect,myBgPaint);
    myFgPaint.setColor(fgColor);
    myFgPaint.setStyle(Paint.Style.STROKE);
    myGaugeRect.right-=(1 - delta);
    myGaugeRect.inset(1 + delta,1 + delta);
    canvas.drawRect(myGaugeRect,myFgPaint);
    myGaugeStart=myGaugeRect.left;
    myGaugeEnd=myGaugeRect.right;
    myGaugeRect.inset(2 + delta,2 + delta);
    myGaugeRect.right=myGaugeRect.left + (int)((float)myGaugeRect.width() * pagesProgress / bookLength);
    canvas.drawRect(myGaugeRect,myFgPaint);
  }
}
