{
  final NetworkAuthenticationManager mgr=book.Link.authenticationManager();
  if (mgr == null) {
    return;
  }
  final ZLResource dialogResource=ZLResource.resource("dialog");
  final ZLResource buttonResource=dialogResource.getResource("button");
  final Runnable buyRunnable=new Runnable(){
    public void run(){
      try {
        mgr.purchaseBook(book);
        final NetworkLibrary library=NetworkLibrary.Instance();
        library.invalidateVisibility();
        library.synchronize();
      }
 catch (      final ZLNetworkException e) {
        final String buttonKey;
        final DialogInterface.OnClickListener action;
        if (NetworkException.ERROR_PURCHASE_NOT_ENOUGH_MONEY.equals(e.getCode())) {
          buttonKey="topup";
          action=new DialogInterface.OnClickListener(){
            public void onClick(            DialogInterface dialog,            int which){
              final BookBuyUrlInfo info=book.buyInfo();
              Money price=info != null ? info.Price : null;
              System.err.println("price = " + price);
              if (price != null) {
                final Money account=mgr.currentAccount();
                System.err.println("account = " + account);
                if (account != null) {
                  price=price.subtract(account);
                }
              }
              System.err.println("price = " + price);
              TopupMenuActivity.runMenu(activity,book.Link,price);
            }
          }
;
        }
 else {
          buttonKey="ok";
          action=null;
        }
        final ZLResource boxResource=dialogResource.getResource("networkError");
        activity.runOnUiThread(new Runnable(){
          public void run(){
            new AlertDialog.Builder(activity).setTitle(boxResource.getResource("title").getValue()).setMessage(e.getMessage()).setIcon(0).setPositiveButton(buttonResource.getResource(buttonKey).getValue(),action).create().show();
          }
        }
);
        final NetworkLibrary library=NetworkLibrary.Instance();
        library.invalidateVisibility();
        library.synchronize();
      }
    }
  }
;
  final DialogInterface.OnClickListener listener=new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      if (which == DialogInterface.BUTTON_NEGATIVE) {
        return;
      }
      if (book.getStatus() != NetworkBookItem.Status.CanBePurchased) {
        return;
      }
      UIUtil.wait("purchaseBook",buyRunnable,activity);
      final boolean downloadBook=which == DialogInterface.BUTTON_NEUTRAL;
      if (downloadBook) {
        activity.runOnUiThread(new Runnable(){
          public void run(){
            doDownloadBook(activity,book,false);
          }
        }
);
      }
    }
  }
;
  final Runnable buyDialogRunnable=new Runnable(){
    public void run(){
      if (book.getStatus() != NetworkBookItem.Status.CanBePurchased) {
        final ZLResource boxResource=dialogResource.getResource("alreadyPurchasedBox");
        new AlertDialog.Builder(activity).setTitle(boxResource.getResource("title").getValue()).setMessage(boxResource.getResource("message").getValue()).setIcon(0).setPositiveButton(buttonResource.getResource("ok").getValue(),null).create().show();
        return;
      }
      final ZLResource boxResource=dialogResource.getResource("purchaseConfirmBox");
      new AlertDialog.Builder(activity).setTitle(boxResource.getResource("title").getValue()).setMessage(boxResource.getResource("message").getValue().replace("%s",book.Title)).setIcon(0).setPositiveButton(buttonResource.getResource("buy").getValue(),listener).setNeutralButton(buttonResource.getResource("buyAndDownload").getValue(),listener).setNegativeButton(buttonResource.getResource("cancel").getValue(),listener).create().show();
    }
  }
;
  try {
    if (mgr.isAuthorised(true)) {
      buyDialogRunnable.run();
    }
 else {
      AccountMenuActivity.runMenu(activity,book.Link);
    }
  }
 catch (  ZLNetworkException e) {
  }
}
