{
  final NetworkAuthenticationManager mgr=book.Link.authenticationManager();
  if (mgr == null) {
    return;
  }
  final ZLResource dialogResource=ZLResource.resource("dialog");
  final ZLResource buttonResource=dialogResource.getResource("button");
  final DialogInterface.OnClickListener listener=new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      if (which == DialogInterface.BUTTON_NEGATIVE) {
        return;
      }
      if (!mgr.needPurchase(book)) {
        return;
      }
      final boolean downloadBook=which == DialogInterface.BUTTON_NEUTRAL;
      final Handler handler=new Handler(){
        public void handleMessage(        Message message){
          final ZLNetworkException exception=(ZLNetworkException)message.obj;
          if (exception != null) {
            String buttonKey;
            DialogInterface.OnClickListener action=null;
            if (NetworkException.ERROR_PURCHASE_NOT_ENOUGH_MONEY.equals(exception.getCode())) {
              buttonKey="topup";
              action=new DialogInterface.OnClickListener(){
                public void onClick(                DialogInterface dialog,                int which){
                  TopupMenuActivity.runMenu(activity,book.Link,"111");
                }
              }
;
            }
 else {
              buttonKey="ok";
            }
            final ZLResource boxResource=dialogResource.getResource("networkError");
            new AlertDialog.Builder(activity).setTitle(boxResource.getResource("title").getValue()).setMessage(exception.getMessage()).setIcon(0).setPositiveButton(buttonResource.getResource(buttonKey).getValue(),action).create().show();
          }
 else           if (downloadBook) {
            doDownloadBook(activity,book,false);
          }
          if (!mgr.mayBeAuthorised(true)) {
            final NetworkLibrary library=NetworkLibrary.Instance();
            library.invalidateVisibility();
            library.synchronize();
          }
          if (NetworkView.Instance().isInitialized()) {
            NetworkView.Instance().fireModelChanged();
          }
        }
      }
;
      final Runnable runnable=new Runnable(){
        public void run(){
          ZLNetworkException exception=null;
          try {
            mgr.purchaseBook(book);
          }
 catch (          ZLNetworkException e) {
            exception=e;
          }
          handler.sendMessage(handler.obtainMessage(0,exception));
        }
      }
;
      UIUtil.wait("purchaseBook",runnable,activity);
    }
  }
;
  final Runnable buyRunnable=new Runnable(){
    public void run(){
      if (!mgr.needPurchase(book)) {
        final ZLResource boxResource=dialogResource.getResource("alreadyPurchasedBox");
        new AlertDialog.Builder(activity).setTitle(boxResource.getResource("title").getValue()).setMessage(boxResource.getResource("message").getValue()).setIcon(0).setPositiveButton(buttonResource.getResource("ok").getValue(),null).create().show();
        return;
      }
      final ZLResource boxResource=dialogResource.getResource("purchaseConfirmBox");
      new AlertDialog.Builder(activity).setTitle(boxResource.getResource("title").getValue()).setMessage(boxResource.getResource("message").getValue().replace("%s",book.Title)).setIcon(0).setPositiveButton(buttonResource.getResource("buy").getValue(),listener).setNeutralButton(buttonResource.getResource("buyAndDownload").getValue(),listener).setNegativeButton(buttonResource.getResource("cancel").getValue(),listener).create().show();
    }
  }
;
  final Runnable buyOnUiRunnable=new Runnable(){
    public void run(){
      activity.runOnUiThread(buyRunnable);
    }
  }
;
  try {
    if (mgr.isAuthorised(true)) {
      buyRunnable.run();
      return;
    }
  }
 catch (  ZLNetworkException e) {
  }
  Util.runAuthenticationDialog(activity,book.Link,buyOnUiRunnable);
}
