{
switch (FB2Tag.getTagByName(tag)) {
case FB2Tag.TITLE_INFO:
    myReadState=READ_NOTHING;
  break;
case FB2Tag.BOOK_TITLE:
if (myReadState == READ_TITLE) {
  myReadState=READ_SOMETHING;
}
break;
case FB2Tag.GENRE:
if (myReadState == READ_GENRE) {
final String genre=myGenreBuffer.toString().trim();
myGenreBuffer.delete(0,myGenreBuffer.length());
if (genre.length() > 0) {
final ArrayList tags=FB2TagManager.humanReadableTags(genre);
if (tags != null) {
  final int len=tags.size();
  for (int i=0; i < len; ++i) {
    myDescription.addTag((String)tags.get(i),false);
  }
}
 else {
  myDescription.addTag(genre,true);
}
}
myReadState=READ_SOMETHING;
}
break;
case FB2Tag.AUTHOR:
if (myReadState == READ_AUTHOR) {
myAuthorNames[0]=myAuthorNames[0].trim();
myAuthorNames[1]=myAuthorNames[1].trim();
myAuthorNames[2]=myAuthorNames[2].trim();
String fullName=myAuthorNames[0];
if (fullName.length() != 0 && myAuthorNames[1].length() != 0) {
fullName+=' ';
}
fullName+=myAuthorNames[1];
if (fullName.length() != 0 && myAuthorNames[2].length() != 0) {
fullName+=' ';
}
fullName+=myAuthorNames[2];
myDescription.addAuthor(fullName,myAuthorNames[2]);
myAuthorNames[0]="";
myAuthorNames[1]="";
myAuthorNames[2]="";
myReadState=READ_SOMETHING;
}
break;
case FB2Tag.LANG:
if (myReadState == READ_LANGUAGE) {
myReadState=READ_SOMETHING;
}
break;
case FB2Tag.FIRST_NAME:
if (myReadState == READ_AUTHOR_NAME_0) {
myReadState=READ_AUTHOR;
}
break;
case FB2Tag.MIDDLE_NAME:
if (myReadState == READ_AUTHOR_NAME_1) {
myReadState=READ_AUTHOR;
}
break;
case FB2Tag.LAST_NAME:
if (myReadState == READ_AUTHOR_NAME_2) {
myReadState=READ_AUTHOR;
}
break;
default :
break;
}
return false;
}
