{
  super.onStart(intent,startId);
  doStart();
  final Uri uri=intent != null ? intent.getData() : null;
  if (uri == null) {
    doStop();
    return;
  }
  intent.setData(null);
  final int notifications=intent.getIntExtra(Key.SHOW_NOTIFICATIONS,0);
  final String url=uri.toString();
  final MimeType mime=MimeType.get(intent.getStringExtra(Key.BOOK_MIME));
  UrlInfo.Type referenceType=(UrlInfo.Type)intent.getSerializableExtra(Key.BOOK_KIND);
  if (referenceType == null) {
    referenceType=UrlInfo.Type.Book;
  }
  String cleanURL=intent.getStringExtra(Key.CLEAN_URL);
  if (cleanURL == null) {
    cleanURL=url;
  }
  if (myDownloadingURLs.contains(url)) {
    if ((notifications & Notifications.ALREADY_DOWNLOADING) != 0) {
      showMessage("alreadyDownloading");
    }
    doStop();
    return;
  }
  final String fileName=BookUrlInfo.makeBookFileName(cleanURL,mime,referenceType);
  if (fileName == null) {
    doStop();
    return;
  }
  int index=fileName.lastIndexOf(File.separator);
  if (index != -1) {
    final String dir=fileName.substring(0,index);
    final File dirFile=new File(dir);
    if (!dirFile.exists() && !dirFile.mkdirs()) {
      showMessage("cannotCreateDirectory",dirFile.getPath());
      doStop();
      return;
    }
    if (!dirFile.exists() || !dirFile.isDirectory()) {
      showMessage("cannotCreateDirectory",dirFile.getPath());
      doStop();
      return;
    }
  }
  final File fileFile=new File(fileName);
  if (fileFile.exists()) {
    if (!fileFile.isFile()) {
      showMessage("cannotCreateFile",fileFile.getPath());
      doStop();
      return;
    }
    doStop();
    startActivity(getFBReaderIntent(fileFile));
    return;
  }
  String title=intent.getStringExtra(Key.BOOK_TITLE);
  if (title == null || title.length() == 0) {
    title=fileFile.getName();
  }
  if ((notifications & Notifications.DOWNLOADING_STARTED) != 0) {
    showMessage("downloadingStarted");
  }
  startFileDownload(url,fileFile,title);
}
