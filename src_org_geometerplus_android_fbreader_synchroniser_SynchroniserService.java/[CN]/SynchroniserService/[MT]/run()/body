{
  System.err.println("SYNCHRONIZER BINDED TO LIBRARY");
  myCollection.addListener(this);
  if (ourSynchronizationThread == null) {
    ourSynchronizationThread=new Thread(){
      public void run(){
        System.err.println("HELLO THREAD");
        try {
          ourSynchronizationThread.sleep(5000);
        }
 catch (        InterruptedException e) {
        }
        System.err.println("START SYNCRONIZING");
        for (BookQuery q=new BookQuery(new Filter.Empty(),20); ; q=q.next()) {
          final List<Book> books=myCollection.books(q);
          if (books.isEmpty()) {
            break;
          }
          for (          Book b : books) {
            addBook(b);
          }
        }
        while (!myQueue.isEmpty()) {
          final Book book=myQueue.remove(0);
          if (myProcessed.contains(book)) {
            continue;
          }
          myProcessed.add(book);
          System.err.println("Processing " + book.getTitle() + " ["+ book.File.getPath()+ "]");
          uploadBookToServer(book.File.getPhysicalFile());
        }
        System.err.println("BYE-BYE THREAD");
        ourSynchronizationThread=null;
      }
    }
;
    ourSynchronizationThread.setPriority(Thread.MIN_PRIORITY);
    ourSynchronizationThread.start();
  }
}
