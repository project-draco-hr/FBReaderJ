{
switch (requestCode) {
case BASIC_AUTHENTICATION_CODE:
    myCredentialsCreator.onDataReceived(resultCode,intent);
  break;
case CUSTOM_AUTHENTICATION_CODE:
Util.processCustomAuthentication(this,((NetworkCatalogTree)getCurrentTree()).Item.Link,resultCode,intent);
break;
case SIGNUP_CODE:
Util.processSignup(((NetworkCatalogTree)getCurrentTree()).Item.Link,resultCode,intent);
break;
case LIST_TOPUP_METHODS_CODE:
if (intent != null) {
final String url=intent.getData().toString();
final List<PluginApi.TopupActionInfo> actions=intent.<PluginApi.TopupActionInfo>getParcelableArrayListExtra(PluginApi.PluginInfo.KEY);
final INetworkLink link=NetworkLibrary.Instance().getLinkByUrl(url);
if (link != null) {
actions.add(new PluginApi.TopupActionInfo(Uri.parse(url + "/browser"),NetworkLibrary.resource().getResource("topupViaBrowser").getValue(),100));
}
Collections.sort(actions);
NetworkView.Instance().TopupActionInfos.put(url,actions);
}
}
}
