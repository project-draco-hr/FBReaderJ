{
  super.onCreateOptionsMenu(menu);
  myOptionsMenuActions.clear();
  myOptionsMenuActions.add(new RootAction(this,ActionCode.SEARCH,"networkSearch",R.drawable.ic_menu_search){
    @Override public boolean isEnabled(    NetworkTree tree){
      return !searchIsInProgress();
    }
    @Override public void run(    NetworkTree tree){
      onSearchRequested();
    }
  }
);
  myOptionsMenuActions.add(new AddCustomCatalogAction(this));
  myOptionsMenuActions.add(new RootAction(this,ActionCode.REFRESH,"refreshCatalogsList",R.drawable.ic_menu_refresh){
    @Override public void run(    NetworkTree tree){
      refreshCatalogsList();
    }
  }
);
  myOptionsMenuActions.add(new LanguageFilterAction(this));
  myOptionsMenuActions.add(new ReloadCatalogAction(this));
  myOptionsMenuActions.add(new SignInAction(this));
  myOptionsMenuActions.add(new SignUpAction(this));
  myOptionsMenuActions.add(new SignOutAction(this));
  myOptionsMenuActions.add(new TopupAction(this));
  final NetworkTree tree=(NetworkTree)getCurrentTree();
  for (  Action a : myOptionsMenuActions) {
    final MenuItem item=menu.add(0,a.Code,Menu.NONE,"");
    if (a.IconId != -1) {
      item.setIcon(a.IconId);
    }
  }
  return true;
}
