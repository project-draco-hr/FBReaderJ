{
  if (myMode != Mode.ManualScrolling) {
    return;
  }
  if (getPageToScrollTo(x,y) == ZLView.PageIndex.current) {
    return;
  }
  final int diff=myDirection.IsHorizontal ? x - myStartX : y - myStartY;
  final int minDiff=myDirection.IsHorizontal ? (myWidth > myHeight ? myWidth / 4 : myWidth / 3) : (myHeight > myWidth ? myHeight / 4 : myHeight / 3);
  boolean forward=Math.abs(diff) > minDiff;
  myMode=forward ? Mode.AutoScrollingForward : Mode.AutoScrollingBackward;
  float velocity=15;
  if (myDrawInfos.size() > 1) {
    int duration=0;
    for (    DrawInfo info : myDrawInfos) {
      duration+=info.Duration;
    }
    duration/=myDrawInfos.size();
    final long time=System.currentTimeMillis();
    myDrawInfos.add(new DrawInfo(x,y,time,time + duration));
    velocity=0;
    for (int i=1; i < myDrawInfos.size(); ++i) {
      final DrawInfo info0=myDrawInfos.get(i - 1);
      final DrawInfo info1=myDrawInfos.get(i);
      final float dX=info0.X - info1.X;
      final float dY=info0.Y - info1.Y;
      velocity+=FloatMath.sqrt(dX * dX + dY * dY) / Math.max(1,info1.Start - info0.Start);
    }
    velocity/=myDrawInfos.size() - 1;
    velocity*=duration;
    velocity=Math.min(100,Math.max(15,velocity));
  }
  myDrawInfos.clear();
  if (getPageToScrollTo() == ZLView.PageIndex.previous) {
    forward=!forward;
  }
switch (myDirection) {
case up:
case rightToLeft:
    mySpeed=forward ? -velocity : velocity;
  break;
case leftToRight:
case down:
mySpeed=forward ? velocity : -velocity;
break;
}
startAutoScrollingInternal(speed);
}
