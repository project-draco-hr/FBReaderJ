{
  final String errorTitle=MissingBookActivity.errorTitle();
  final NotificationManager notificationManager=(NotificationManager)myActivity.getSystemService(Activity.NOTIFICATION_SERVICE);
  final NotificationCompat.Builder builder=new NotificationCompat.Builder(myActivity).setSmallIcon(R.drawable.fbreader).setTicker(errorTitle).setContentTitle(errorTitle).setContentText(info.Title).setAutoCancel(false);
  if (info.ThumbnailUrl != null) {
    SQLiteCookieDatabase.init(myActivity);
    final NetworkImage thumbnail=new NetworkImage(info.ThumbnailUrl);
    thumbnail.synchronize();
    try {
      builder.setLargeIcon(BitmapFactory.decodeStream(thumbnail.getRealImage().inputStream()));
    }
 catch (    Throwable t) {
    }
  }
  Uri uri=null;
  try {
    uri=Uri.parse(info.DownloadUrl);
  }
 catch (  Exception e) {
  }
  if (uri != null) {
    final Intent downloadIntent=new Intent(myActivity,MissingBookActivity.class);
    downloadIntent.setData(uri).putExtra(BookDownloaderService.Key.FROM_SYNC,true).putExtra(BookDownloaderService.Key.BOOK_MIME,info.Mimetype).putExtra(BookDownloaderService.Key.BOOK_KIND,UrlInfo.Type.Book).putExtra(BookDownloaderService.Key.BOOK_TITLE,info.Title);
    builder.setContentIntent(PendingIntent.getActivity(myActivity,0,downloadIntent,0));
  }
 else {
    builder.setContentIntent(PendingIntent.getActivity(myActivity,0,new Intent(),0));
  }
  notificationManager.notify(NotificationIds.MISSING_BOOK_ID,builder.build());
}
