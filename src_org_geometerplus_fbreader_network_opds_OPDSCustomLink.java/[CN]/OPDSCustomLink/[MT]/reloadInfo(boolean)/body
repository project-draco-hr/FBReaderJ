{
  final LinkedList<String> opensearchDescriptionURLs=new LinkedList<String>();
  final List<OpenSearchDescription> descriptions=Collections.synchronizedList(new LinkedList<OpenSearchDescription>());
  ZLNetworkException error=null;
  try {
    ZLNetworkManager.Instance().perform(new ZLNetworkRequest(getUrlInfo(INetworkLink.URL_MAIN).URL){
      @Override public void handleStream(      URLConnection connection,      InputStream inputStream) throws IOException, ZLNetworkException {
        final CatalogInfoReader info=new CatalogInfoReader(URL,OPDSCustomLink.this,opensearchDescriptionURLs);
        new OPDSXMLReader(info).read(inputStream);
        if (!info.FeedStarted) {
          throw new ZLNetworkException(NetworkException.ERROR_NOT_AN_OPDS);
        }
        if (info.Title == null) {
          throw new ZLNetworkException(NetworkException.ERROR_NO_REQUIRED_INFORMATION);
        }
        myTitle=info.Title;
        setUrl(URL_ICON,info.Icon);
        mySummary=info.Summary;
        if (info.DirectOpenSearchDescription != null) {
          descriptions.add(info.DirectOpenSearchDescription);
        }
      }
    }
);
  }
 catch (  ZLNetworkException e) {
    error=e;
  }
  if (descriptions.isEmpty() && !opensearchDescriptionURLs.isEmpty()) {
    LinkedList<ZLNetworkRequest> requests=new LinkedList<ZLNetworkRequest>();
    for (    String url : opensearchDescriptionURLs) {
      requests.add(new ZLNetworkRequest(url){
        @Override public void handleStream(        URLConnection connection,        InputStream inputStream) throws IOException, ZLNetworkException {
          new OpenSearchXMLReader(URL,descriptions).read(inputStream);
        }
      }
);
    }
    try {
      ZLNetworkManager.Instance().perform(requests);
    }
 catch (    ZLNetworkException e) {
      if (error == null) {
        error=e;
      }
    }
  }
  if (!descriptions.isEmpty()) {
    setUrl(URL_SEARCH,descriptions.get(0).makeQuery("%s"));
  }
 else {
    setUrl(URL_SEARCH,null);
  }
  if (error != null) {
    throw error;
  }
}
