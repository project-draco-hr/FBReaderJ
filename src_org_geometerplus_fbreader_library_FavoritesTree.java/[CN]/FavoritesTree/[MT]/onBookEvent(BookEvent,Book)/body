{
switch (event) {
case Added:
    return Collection.labels(book).contains(Book.FAVORITE_LABEL) && createBookWithAuthorsSubTree(book);
case Updated:
{
    boolean changed=removeBook(book);
    changed|=Collection.labels(book).contains(Book.FAVORITE_LABEL) && createBookWithAuthorsSubTree(book);
    return changed;
  }
case Removed:
default :
return super.onBookEvent(event,book);
}
}
