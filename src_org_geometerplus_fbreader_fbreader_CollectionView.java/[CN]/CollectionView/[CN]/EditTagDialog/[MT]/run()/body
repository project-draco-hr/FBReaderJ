{
  final ZLDialog dialog=ZLDialogManager.getInstance().createDialog("editTagInfoDialog");
  dialog.addOption(EDIT_OR_CLONE_KEY,myEditOrCloneEntry);
  dialog.addOption("name",myTagNameEntry);
  if (myIncludeSubtags) {
    dialog.addOption("includeSubtags",myIncludeSubtagsEntry);
  }
  final Runnable acceptAction=new Runnable(){
    public void run(){
      dialog.acceptValues();
      final String tagValue=myTagNameEntry.initialValue().trim();
      if (tagValue.length() == 0) {
        ZLDialogManager.getInstance().showErrorBox("tagMustBeNonEmpty",EditTagDialog.this);
        return;
      }
      if (tagValue.indexOf(',') != -1) {
        ZLDialogManager.getInstance().showErrorBox("tagMustNotContainComma",EditTagDialog.this);
        return;
      }
      if (tagValue.equals(myTag)) {
        return;
      }
      getCollectionModel().removeAllMarks();
      if (myTag == SpecialTagAllBooks) {
        Collection.addTagToAllBooks(tagValue);
      }
 else       if (myTag == SpecialTagNoTagsBooks) {
        Collection.addTagToBooksWithNoTags(tagValue);
      }
 else       if (myEditOrCloneEntry.getEditNotClone()) {
        Collection.renameTag(myTag,tagValue,myIncludeSubtagsEntry.initialState());
      }
 else {
        Collection.cloneTag(myTag,tagValue,myIncludeSubtagsEntry.initialState());
      }
      updateModel();
      Application.refreshWindow();
    }
  }
;
  dialog.addButton(ZLDialogManager.OK_BUTTON,acceptAction);
  dialog.addButton(ZLDialogManager.CANCEL_BUTTON,null);
  dialog.run();
}
