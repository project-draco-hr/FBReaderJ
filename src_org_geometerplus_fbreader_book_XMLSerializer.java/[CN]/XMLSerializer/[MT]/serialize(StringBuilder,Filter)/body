{
  if (filter instanceof Filter.Empty) {
    appendTag(buffer,"filter",true,"type","empty");
  }
 else   if (filter instanceof Filter.And) {
    appendTag(buffer,"and",false);
    serialize(buffer,((Filter.And)filter).First);
    serialize(buffer,((Filter.And)filter).Second);
    closeTag(buffer,"and");
  }
 else   if (filter instanceof Filter.Or) {
    appendTag(buffer,"or",false);
    serialize(buffer,((Filter.Or)filter).First);
    serialize(buffer,((Filter.Or)filter).Second);
    closeTag(buffer,"or");
  }
 else   if (filter instanceof Filter.ByAuthor) {
    final Author author=((Filter.ByAuthor)filter).Author;
    appendTag(buffer,"filter",true,"type","author","displayName",author.DisplayName,"sorkKey",author.SortKey);
  }
 else   if (filter instanceof Filter.ByTag) {
    final LinkedList<String> lst=new LinkedList<String>();
    for (Tag t=((Filter.ByTag)filter).Tag; t != null; t=t.Parent) {
      lst.add(0,t.Name);
    }
    final String[] params=new String[lst.size() * 2 + 2];
    int index=0;
    params[index++]="type";
    params[index++]="tag";
    int num=0;
    for (    String name : lst) {
      params[index++]="name" + num++;
      params[index++]=name;
    }
    appendTag(buffer,"filter",true,params);
  }
 else   if (filter instanceof Filter.BySeries) {
    appendTag(buffer,"filter",true,"type","series","title",((Filter.BySeries)filter).Series.getTitle());
  }
 else   if (filter instanceof Filter.ByPattern) {
    appendTag(buffer,"filter",true,"type","pattern","pattern",((Filter.ByPattern)filter).Pattern);
  }
 else   if (filter instanceof Filter.ByTitlePrefix) {
    appendTag(buffer,"filter",true,"type","title-prefix","prefix",((Filter.ByTitlePrefix)filter).Prefix);
  }
 else   if (filter instanceof Filter.HasBookmark) {
    appendTag(buffer,"filter",true,"type","has-bookmark");
  }
 else {
    throw new RuntimeException("Unsupported filter type: " + filter.getClass());
  }
}
