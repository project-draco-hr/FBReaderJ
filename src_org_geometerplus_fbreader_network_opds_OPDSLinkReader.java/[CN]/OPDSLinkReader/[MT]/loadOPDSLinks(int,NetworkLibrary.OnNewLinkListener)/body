{
  final File dirFile=new File(Paths.networkCacheDirectory());
  if (!dirFile.exists() && !dirFile.mkdirs()) {
    ZLNetworkManager.Instance().perform(new ZLNetworkRequest(CATALOGS_URL){
      @Override public void handleStream(      InputStream inputStream,      int length) throws IOException, ZLNetworkException {
        new OPDSLinkXMLReader(listener,null).read(inputStream);
      }
    }
);
    return;
  }
  final String fileName="fbreader_catalogs-" + CATALOGS_URL.substring(CATALOGS_URL.lastIndexOf(File.separator) + 1);
  boolean cacheIsGood=false;
  File oldCache=null;
  ATOMUpdated cacheUpdatedTime=null;
  final File catalogsFile=new File(dirFile,fileName);
  if (catalogsFile.exists()) {
switch (cacheMode) {
case CACHE_UPDATE:
      final long diff=System.currentTimeMillis() - catalogsFile.lastModified();
    final long valid=7 * 24 * 60* 60* 1000;
  if (diff >= 0 && diff <= valid) {
    return;
  }
case CACHE_CLEAR:
try {
  final OPDSLinkXMLReader reader=new OPDSLinkXMLReader();
  reader.read(new FileInputStream(catalogsFile));
  cacheUpdatedTime=reader.getUpdatedTime();
}
 catch (FileNotFoundException e) {
  throw new RuntimeException("That's impossible!!!",e);
}
oldCache=new File(dirFile,"_" + fileName);
oldCache.delete();
if (!catalogsFile.renameTo(oldCache)) {
catalogsFile.delete();
oldCache=null;
}
break;
case CACHE_LOAD:
cacheIsGood=true;
break;
default :
throw new IllegalArgumentException("Invalid cacheMode value (" + cacheMode + ") in OPDSLinkReader.loadOPDSLinks method");
}
}
if (!cacheIsGood) {
try {
ZLNetworkManager.Instance().downloadToFile(CATALOGS_URL,catalogsFile);
}
 catch (ZLNetworkException e) {
if (oldCache == null) {
throw e;
}
catalogsFile.delete();
if (!oldCache.renameTo(catalogsFile)) {
oldCache.delete();
oldCache=null;
throw e;
}
}
 finally {
if (oldCache != null) {
oldCache.delete();
oldCache=null;
}
}
}
try {
new OPDSLinkXMLReader(listener,cacheUpdatedTime).read(new FileInputStream(catalogsFile));
}
 catch (FileNotFoundException e) {
throw new RuntimeException("That's impossible!!!",e);
}
}
