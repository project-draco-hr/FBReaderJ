{
  final LinkedList<Bookmark> list=new LinkedList<Bookmark>();
  final StringBuilder sql=new StringBuilder("SELECT").append(" bm.bookmark_id,bm.book_id,b.title,bm.bookmark_text,").append("bm.creation_time,bm.modification_time,bm.access_time,").append("bm.model_id,bm.paragraph,bm.word,bm.char,").append("bm.end_paragraph,bm.end_word,bm.end_character,").append("bm.style_id").append(" FROM Bookmarks AS bm").append(" INNER JOIN Books AS b ON b.book_id = bm.book_id").append(" WHERE");
  if (query.Book != null) {
    sql.append(" b.book_id = " + query.Book.getId() + " AND");
  }
  sql.append(" bm.visible = " + (query.Visible ? 1 : 0)).append(" ORDER BY bm.bookmark_id").append(" LIMIT " + query.Limit * query.Page + "," + query.Limit);
  Cursor cursor=myDatabase.rawQuery(sql.toString(),null);
  while (cursor.moveToNext()) {
    list.add(createBookmark(cursor.getLong(0),cursor.getLong(1),cursor.getString(2),cursor.getString(3),SQLiteUtil.getDate(cursor,4),SQLiteUtil.getDate(cursor,5),SQLiteUtil.getDate(cursor,6),cursor.getString(7),(int)cursor.getLong(8),(int)cursor.getLong(9),(int)cursor.getLong(10),(int)cursor.getLong(11),cursor.isNull(12) ? -1 : (int)cursor.getLong(12),cursor.isNull(13) ? -1 : (int)cursor.getLong(13),query.Visible,(int)cursor.getLong(14)));
  }
  cursor.close();
  return list;
}
