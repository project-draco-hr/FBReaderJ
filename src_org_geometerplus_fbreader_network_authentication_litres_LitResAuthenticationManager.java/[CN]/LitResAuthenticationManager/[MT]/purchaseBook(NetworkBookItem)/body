{
  final String sid;
synchronized (this) {
    sid=mySidOption.getValue();
  }
  if (sid.length() == 0) {
    throw new ZLNetworkException(NetworkErrors.ERROR_AUTHENTICATION_FAILED);
  }
  BookReference reference=book.reference(BookReference.Type.BUY);
  if (reference == null) {
    throw new ZLNetworkException(NetworkErrors.ERROR_BOOK_NOT_PURCHASED);
  }
  String query=reference.URL;
  query=ZLNetworkUtil.appendParameter(query,"sid",sid);
  final LitResPurchaseXMLReader xmlReader=new LitResPurchaseXMLReader(Link.getSiteName());
synchronized (this) {
    try {
      ZLNetworkManager.Instance().perform(new LitResNetworkRequest(query,SSLCertificate,xmlReader));
    }
 catch (    ZLNetworkException e) {
      if (NetworkErrors.ERROR_AUTHENTICATION_FAILED.equals(e.getCode())) {
        mySidChecked=true;
        mySidUserNameOption.setValue("");
        mySidOption.setValue("");
      }
 else       if (NetworkErrors.ERROR_PURCHASE_ALREADY_PURCHASED.equals(e.getCode())) {
        myPurchasedBooks.put(book.Id,book);
      }
      throw e;
    }
 finally {
      if (xmlReader.Account != null) {
        myAccount=BuyBookReference.price(xmlReader.Account,"RUB");
      }
    }
    if (xmlReader.BookId == null || !xmlReader.BookId.equals(book.Id)) {
      throw new ZLNetworkException(NetworkErrors.ERROR_SOMETHING_WRONG,Link.getSiteName());
    }
    myPurchasedBooks.put(book.Id,book);
  }
}
