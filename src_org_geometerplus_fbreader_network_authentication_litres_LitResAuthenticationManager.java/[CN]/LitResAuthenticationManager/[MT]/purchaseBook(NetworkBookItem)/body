{
  final String sid;
synchronized (this) {
    sid=mySidOption.getValue();
  }
  if (sid.length() == 0) {
    throw new ZLNetworkException(NetworkException.ERROR_AUTHENTICATION_FAILED);
  }
  final BookUrlInfo reference=book.reference(UrlInfo.Type.BookBuy);
  if (reference == null) {
    throw new ZLNetworkException(NetworkException.ERROR_BOOK_NOT_PURCHASED);
  }
  final LitResPurchaseXMLReader xmlReader=new LitResPurchaseXMLReader(Link.getSiteName());
  ZLNetworkException exception=null;
  try {
    final LitResNetworkRequest request=new LitResNetworkRequest(reference.Url,xmlReader);
    request.addPostParameter("sid",sid);
    ZLNetworkManager.Instance().perform(request);
  }
 catch (  ZLNetworkException e) {
    exception=e;
  }
synchronized (this) {
    if (xmlReader.Account != null) {
      myAccount=BookBuyUrlInfo.price(xmlReader.Account,"RUB");
    }
    if (exception != null) {
      final String code=exception.getCode();
      if (NetworkException.ERROR_AUTHENTICATION_FAILED.equals(code)) {
        logOut(false);
      }
 else       if (NetworkException.ERROR_PURCHASE_ALREADY_PURCHASED.equals(code)) {
        myPurchasedBookMap.put(book.Id,book);
        myPurchasedBookList.add(0,book);
      }
      throw exception;
    }
    if (xmlReader.BookId == null || !xmlReader.BookId.equals(book.Id)) {
      throw new ZLNetworkException(NetworkException.ERROR_SOMETHING_WRONG,Link.getSiteName());
    }
    myPurchasedBookMap.put(book.Id,book);
    myPurchasedBookList.add(0,book);
  }
}
