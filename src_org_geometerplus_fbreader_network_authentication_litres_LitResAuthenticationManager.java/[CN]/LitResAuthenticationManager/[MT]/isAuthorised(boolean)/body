{
  final String sid;
synchronized (this) {
    boolean authState=mySidUserNameOption.getValue().length() != 0 && mySidOption.getValue().length() != 0;
    if (mySidChecked || !useNetwork) {
      return new AuthenticationStatus(authState);
    }
    if (!authState) {
      mySidChecked=true;
      mySidUserNameOption.setValue("");
      mySidOption.setValue("");
      return new AuthenticationStatus(false);
    }
    sid=mySidOption.getValue();
  }
  String url=Link.getLink(INetworkLink.URL_SIGN_IN);
  if (url == null) {
    return new AuthenticationStatus(NetworkErrors.errorMessage(NetworkErrors.ERROR_UNSUPPORTED_OPERATION));
  }
  url=ZLNetworkUtil.appendParameter(url,"sid",sid);
  final LitResLoginXMLReader xmlReader=new LitResLoginXMLReader(Link.getSiteName());
  final String error=ZLNetworkManager.Instance().perform(new LitResNetworkRequest(url,SSLCertificate,xmlReader));
synchronized (this) {
    if (error != null) {
      if (!error.equals(NetworkErrors.errorMessage(NetworkErrors.ERROR_AUTHENTICATION_FAILED))) {
        return new AuthenticationStatus(error);
      }
      mySidChecked=true;
      mySidUserNameOption.setValue("");
      mySidOption.setValue("");
      return new AuthenticationStatus(false);
    }
    mySidChecked=true;
    mySidOption.setValue(xmlReader.Sid);
    return new AuthenticationStatus(true);
  }
}
