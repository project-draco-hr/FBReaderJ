{
  final String sid;
synchronized (this) {
    boolean authState=mySidUserNameOption.getValue().length() != 0 && mySidOption.getValue().length() != 0;
    if (mySidChecked || !useNetwork) {
      return authState;
    }
    if (!authState) {
      logOut();
      return false;
    }
    sid=mySidOption.getValue();
  }
  String url=Link.getLink(INetworkLink.URL_SIGN_IN);
  if (url == null) {
    throw new ZLNetworkException(NetworkException.ERROR_UNSUPPORTED_OPERATION);
  }
  url=ZLNetworkUtil.appendParameter(url,"sid",sid);
  final LitResLoginXMLReader xmlReader=new LitResLoginXMLReader(Link.getSiteName());
  ZLNetworkException exception=null;
  try {
    ZLNetworkManager.Instance().perform(new LitResNetworkRequest(url,SSLCertificate,xmlReader));
  }
 catch (  ZLNetworkException e) {
    exception=e;
  }
synchronized (this) {
    if (exception != null) {
      if (NetworkException.ERROR_AUTHENTICATION_FAILED.equals(exception.getCode())) {
        throw exception;
      }
      logOut();
      return false;
    }
    initUser(UserNameOption.getValue(),xmlReader.Sid,xmlReader.UserId);
    return true;
  }
}
