{
  final ZLFile wallpaper=getWallpaperFile();
  if (wallpaper != null) {
    context.clear(wallpaper,getWallpaperMode());
  }
 else {
    context.clear(getBackgroundColor());
  }
  final BookModel model=myReader.Model;
  if (model == null) {
    return;
  }
  final ZLColor fgColor=getTextColor(ZLTextHyperlink.NO_LINK);
  final ZLColor fillColor=myReader.getColorProfile().FooterFillOption.getValue();
  final int left=getLeftMargin();
  final int right=context.getWidth() - getRightMargin();
  final int height=getHeight();
  final int lineWidth=height <= 10 ? 1 : 2;
  final int delta=height <= 10 ? 0 : 1;
  context.setFont(myReader.FooterOptions.Font.getValue(),height <= 10 ? height + 3 : height + 1,height > 10,false,false,false);
  final PagePosition pagePosition=FBView.this.pagePosition();
  final StringBuilder info=new StringBuilder();
  if (myReader.FooterOptions.ShowProgress.getValue()) {
    info.append(pagePosition.Current);
    info.append("/");
    info.append(pagePosition.Total);
  }
  if (myReader.FooterOptions.ShowClock.getValue()) {
    if (info.length() > 0) {
      info.append(" ");
    }
    info.append(ZLibrary.Instance().getCurrentTimeString());
  }
  if (myReader.FooterOptions.ShowBattery.getValue()) {
    if (info.length() > 0) {
      info.append(" ");
    }
    info.append(myReader.getBatteryLevel());
    info.append("%");
  }
  final String infoString=info.toString();
  final int infoWidth=context.getStringWidth(infoString);
  context.setTextColor(fgColor);
  context.drawString(right - infoWidth,height - delta,infoString);
  final int gaugeRight=right - (infoWidth == 0 ? 0 : infoWidth + 10);
  myGaugeWidth=gaugeRight - left - 2 * lineWidth;
  context.setLineColor(fgColor);
  context.setLineWidth(lineWidth);
  context.drawLine(left,lineWidth,left,height - lineWidth);
  context.drawLine(left,height - lineWidth,gaugeRight,height - lineWidth);
  context.drawLine(gaugeRight,height - lineWidth,gaugeRight,lineWidth);
  context.drawLine(gaugeRight,lineWidth,left,lineWidth);
  final int gaugeInternalRight=left + lineWidth + (int)(1.0 * myGaugeWidth * pagePosition.Current / pagePosition.Total);
  context.setFillColor(fillColor);
  context.fillRectangle(left + 1,height - 2 * lineWidth,gaugeInternalRight,lineWidth + 1);
  if (myReader.FooterOptions.ShowTOCMarks.getValue()) {
    if (myTOCMarks == null) {
      updateTOCMarks(model);
    }
    final int fullLength=sizeOfFullText();
    for (    TOCTree tocItem : myTOCMarks) {
      TOCTree.Reference reference=tocItem.getReference();
      if (reference != null) {
        final int refCoord=sizeOfTextBeforeParagraph(reference.ParagraphIndex);
        final int xCoord=left + 2 * lineWidth + (int)(1.0 * myGaugeWidth * refCoord / fullLength);
        context.drawLine(xCoord,height - lineWidth,xCoord,lineWidth);
      }
    }
  }
}
