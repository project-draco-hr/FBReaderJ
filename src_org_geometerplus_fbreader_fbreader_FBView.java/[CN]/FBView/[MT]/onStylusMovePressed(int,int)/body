{
  if (super.onStylusMovePressed(x,y)) {
    return true;
  }
synchronized (this) {
    if (myIsBrightnessAdjustmentInProgress) {
      if (x >= myContext.getWidth() / 5) {
        myIsBrightnessAdjustmentInProgress=false;
      }
 else {
        final int delta=(myStartBrightness + 30) * (myStartY - y) / myContext.getHeight();
        System.err.println("adjusting to level: " + (myStartBrightness + delta));
        ZLibrary.Instance().setScreenBrightness(myStartBrightness + delta);
        System.err.println("adjusted to level: " + ZLibrary.Instance().getScreenBrightness());
        return true;
      }
    }
    if (isScrollingActive() && myIsManualScrollingActive) {
      final boolean horizontal=ScrollingPreferences.Instance().HorizontalOption.getValue();
      final int diff=horizontal ? x - myStartX : y - myStartY;
      if (diff > 0) {
        ZLTextWordCursor cursor=getStartCursor();
        if (cursor == null || cursor.isNull()) {
          return false;
        }
        if (!cursor.isStartOfParagraph() || !cursor.getParagraphCursor().isFirst()) {
          myReader.scrollViewTo(horizontal ? PAGE_LEFT : PAGE_TOP,diff);
        }
      }
 else       if (diff < 0) {
        ZLTextWordCursor cursor=getEndCursor();
        if (cursor == null || cursor.isNull()) {
          return false;
        }
        if (!cursor.isEndOfParagraph() || !cursor.getParagraphCursor().isLast()) {
          myReader.scrollViewTo(horizontal ? PAGE_RIGHT : PAGE_BOTTOM,-diff);
        }
      }
 else {
        myReader.scrollViewTo(PAGE_CENTRAL,0);
      }
      return true;
    }
  }
  return false;
}
