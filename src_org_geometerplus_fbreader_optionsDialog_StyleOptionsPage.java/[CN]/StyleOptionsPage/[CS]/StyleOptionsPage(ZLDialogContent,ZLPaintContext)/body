{
  final ZLResource styleResource=ZLResource.resource(KEY_STYLE);
  myComboEntry=new ComboOptionEntry(this);
  ZLTextStyleCollection collection=ZLTextStyleCollection.Instance();
  byte styles[]={REGULAR,TITLE,SECTION_TITLE,SUBTITLE,H1,H2,H3,H4,H5,H6,ANNOTATION,EPIGRAPH,AUTHOR,POEM_TITLE,STANZA,VERSE,CITE,INTERNAL_HYPERLINK,EXTERNAL_HYPERLINK,FOOTNOTE,ITALIC,EMPHASIS,BOLD,STRONG,DEFINITION,DEFINITION_DESCRIPTION,PREFORMATTED,CODE};
  for (int i=0; i < styles.length; ++i) {
    final ZLTextStyleDecoration decoration=collection.getDecoration(styles[i]);
    if (decoration != null) {
      myComboEntry.addValue(styleResource.getResource(decoration.getName()).getValue());
    }
  }
  dialogTab.addOption("optionsFor",myComboEntry);
  for (int i=0; i < styles.length; ++i) {
    ZLTextStyleDecoration decoration=collection.getDecoration(styles[i]);
    if (decoration != null) {
      final String name=styleResource.getResource(decoration.getName()).getValue();
      registerEntry(dialogTab,KEY_FONTSIZEDIFFERENCE,new ZLSimpleSpinOptionEntry(decoration.FontSizeDeltaOption,2),name);
      registerEntry(dialogTab,KEY_BOLD,new ZLSimpleBoolean3OptionEntry(decoration.BoldOption),name);
      registerEntry(dialogTab,KEY_ITALIC,new ZLSimpleBoolean3OptionEntry(decoration.ItalicOption),name);
      registerEntry(dialogTab,KEY_ALLOWHYPHENATIONS,new ZLSimpleBoolean3OptionEntry(decoration.AllowHyphenationsOption),name);
    }
  }
  myComboEntry.onValueSelected(0);
}
