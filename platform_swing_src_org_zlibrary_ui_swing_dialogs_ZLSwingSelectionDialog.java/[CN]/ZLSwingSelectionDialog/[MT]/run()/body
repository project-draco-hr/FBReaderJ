{
  myJDialog.setLayout(new BorderLayout());
  myStateLine.setEditable(!handler().isOpenHandler());
  myStateLine.setFocusable(false);
  myJDialog.add(myStateLine,BorderLayout.NORTH);
  myList.setCellRenderer(new CellRenderer());
  JScrollPane scrollPane=new JScrollPane(myList);
  scrollPane.setBorder(BorderFactory.createLoweredBevelBorder());
  myJDialog.add(scrollPane,BorderLayout.CENTER);
  myList.addListSelectionListener(new SelectionListener());
  myList.addKeyListener(new MyKeyAdapter());
  myList.addMouseListener(new MyMouseListener());
  JPanel buttonPanel=new JPanel();
  buttonPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));
  JButton button1=ZLSwingDialogManager.createButton(ZLSwingDialogManager.OK_BUTTON);
  myOKAction=new OKAction(button1.getText());
  button1.setAction(myOKAction);
  JButton button2=ZLSwingDialogManager.createButton(ZLSwingDialogManager.CANCEL_BUTTON);
  button2.setAction(new CancelAction(button2.getText()));
  if (button1.getPreferredSize().width < button2.getPreferredSize().width) {
    button1.setPreferredSize(button2.getPreferredSize());
  }
 else {
    button2.setPreferredSize(button1.getPreferredSize());
  }
  buttonPanel.add(button1);
  buttonPanel.add(button2);
  myJDialog.add(buttonPanel,BorderLayout.SOUTH);
  myJDialog.pack();
  myJDialog.setSize(600,400);
  myJDialog.setLocationRelativeTo(myJDialog.getParent());
  myJDialog.setVisible(true);
  return false;
}
