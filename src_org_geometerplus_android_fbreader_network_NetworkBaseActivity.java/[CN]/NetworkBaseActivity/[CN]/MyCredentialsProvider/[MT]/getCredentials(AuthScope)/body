{
  Credentials creds=super.getCredentials(scope);
  if (creds == null) {
    new Exception().printStackTrace();
    final Intent intent=new Intent();
    final String host=scope.getHost();
    final String area=scope.getRealm();
    final ZLStringOption option=new ZLStringOption("username",host + ":" + area,"");
    intent.setClass(NetworkBaseActivity.this,AuthenticationActivity.class);
    intent.putExtra(AuthenticationActivity.HOST_KEY,host);
    intent.putExtra(AuthenticationActivity.AREA_KEY,area);
    intent.putExtra(AuthenticationActivity.SCHEME_KEY,scope.getScheme());
    intent.putExtra(AuthenticationActivity.USERNAME_KEY,option.getValue());
    startActivityForResult(intent,AUTHENTICATION_CODE);
synchronized (this) {
      try {
        System.err.println("waiting in " + Thread.currentThread());
        wait();
      }
 catch (      InterruptedException e) {
      }
    }
    System.err.println("OK");
    if (myUsername != null && myPassword != null) {
      option.setValue(myUsername);
      creds=new UsernamePasswordCredentials(myUsername,myPassword);
    }
    myUsername=null;
    myPassword=null;
  }
  return creds;
}
