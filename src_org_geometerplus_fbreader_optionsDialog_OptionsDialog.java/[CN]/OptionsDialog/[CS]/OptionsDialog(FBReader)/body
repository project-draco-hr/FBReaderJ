{
  final ZLTextBaseStyle baseStyle=ZLTextStyleCollection.Instance().baseStyle();
  myDialog=ZLDialogManager.Instance().createOptionsDialog("OptionsDialog",null,new OptionsApplyRunnable(fbreader),true);
  ZLDialogContent marginTab=myDialog.createTab("Margins");
  marginTab.addOptions("left",new ZLSimpleSpinOptionEntry(fbreader.LeftMarginOption,1),"right",new ZLSimpleSpinOptionEntry(fbreader.RightMarginOption,1));
  marginTab.addOptions("top",new ZLSimpleSpinOptionEntry(fbreader.TopMarginOption,1),"bottom",new ZLSimpleSpinOptionEntry(fbreader.BottomMarginOption,1));
  new FormatOptionsPage(myDialog.createTab("Format"));
  new StyleOptionsPage(myDialog.createTab("Styles"),ZLibrary.Instance().getPaintContext());
  final ZLDialogContent colorsTab=myDialog.createTab("Colors");
  final String colorKey="colorFor";
  final ZLResource resource=colorsTab.getResource(colorKey);
  final ZLColorOptionBuilder builder=new ZLColorOptionBuilder();
  final String BACKGROUND=resource.getResource("background").getValue();
  builder.addOption(BACKGROUND,baseStyle.BackgroundColorOption);
  builder.addOption(resource.getResource("text").getValue(),baseStyle.RegularTextColorOption);
  builder.addOption(resource.getResource("internalLink").getValue(),baseStyle.InternalHyperlinkTextColorOption);
  builder.addOption(resource.getResource("externalLink").getValue(),baseStyle.ExternalHyperlinkTextColorOption);
  builder.addOption(resource.getResource("highlighted").getValue(),baseStyle.HighlightedTextColorOption);
  builder.setInitial(BACKGROUND);
  colorsTab.addOption(colorKey,builder.comboEntry());
  colorsTab.addOption("",builder.colorEntry());
}
