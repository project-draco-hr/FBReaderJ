{
  myStream=new PdbInputStream(new ZLFile(myFilePath));
  PdbHeader header=new PdbHeader();
  if (!header.read(myStream)) {
    myStream.close();
    return false;
  }
  setMainTextModel();
  myFont=FontType.FT_REGULAR;
  for (int index=0; index < header.Offsets.length; ++index) {
    int currentOffset=myStream.offset();
    int pit=header.Offsets[index];
    if (currentOffset > pit) {
      break;
    }
    myStream.skip(pit - currentOffset);
    if (myStream.offset() != pit) {
      break;
    }
    int recordSize=((index != header.Offsets.length - 1) ? header.Offsets[index + 1] : myStream.sizeOfOpened()) - pit;
    readRecord(recordSize);
  }
  myStream.close();
  for (Iterator it=myReferencedParagraphs.iterator(); it.hasNext(); ) {
    Pair pair=(Pair)it.next();
    int first=(Integer)pair.myFirst;
    int second=(Integer)pair.mySecond;
    ArrayList list=(ArrayList)myParagraphMap.get(first);
    if (list != null) {
      for (int k=second; k < list.size(); ++k) {
        if ((Integer)list.get(k) != -1) {
          addHyperlinkLabel(fromNumber(first) + '#' + fromNumber(second),(Integer)list.get(k));
          break;
        }
      }
    }
  }
  myReferencedParagraphs.clear();
  myParagraphMap.clear();
  return true;
}
