{
  try {
    myStream=new PdbInputStream(myFile);
    PdbHeader header=new PdbHeader(myStream);
    setMainTextModel();
    myFont=FontType.FT_REGULAR;
    for (int index=0; index < header.Offsets.length; ++index) {
      int currentOffset=myStream.offset();
      int pit=header.Offsets[index];
      if (currentOffset > pit) {
        break;
      }
      myStream.skip(pit - currentOffset);
      if (myStream.offset() != pit) {
        break;
      }
      int recordSize=((index != header.Offsets.length - 1) ? header.Offsets[index + 1] : myStream.sizeOfOpened()) - pit;
      readRecord(recordSize);
    }
    myStream.close();
  }
 catch (  IOException e) {
    return false;
  }
  for (Iterator it=myReferencedParagraphs.iterator(); it.hasNext(); ) {
    Pair pair=(Pair)it.next();
    int first=(Integer)pair.myFirst;
    int second=(Integer)pair.mySecond;
    ArrayList list=(ArrayList)myParagraphMap.get(first);
    if (list != null) {
      for (int k=second; k < list.size(); ++k) {
        if (((Integer)((Pair)list.get(k)).myFirst) != -1) {
          final Pair p=(Pair)list.get(k);
          break;
        }
      }
    }
  }
  myReferencedParagraphs.clear();
  myParagraphMap.clear();
  return true;
}
