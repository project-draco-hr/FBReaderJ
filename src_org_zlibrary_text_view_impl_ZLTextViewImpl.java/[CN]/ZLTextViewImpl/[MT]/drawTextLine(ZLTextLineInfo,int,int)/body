{
  final ZLPaintContext context=getContext();
  final ZLTextParagraphCursor paragraph=info.RealStart.getParagraphCursor();
  ListIterator<ZLTextElementArea> fromIt=myTextElementMap.listIterator(from);
  ListIterator<ZLTextElementArea> toIt=myTextElementMap.listIterator(to);
  context.moveY(info.Height);
  int maxY=topMargin() + getTextAreaHeight();
  if (context.getY() > maxY) {
    context.moveYTo(maxY);
  }
  context.moveXTo(leftMargin());
  if (info.NodeInfo != null) {
    drawTreeLines(info.NodeInfo,info.Height,info.Descent + info.VSpaceAfter);
  }
  ListIterator<ZLTextElementArea> it=myTextElementMap.listIterator(from);
  final ZLTextWordCursor end=info.End;
  for (myIteratorCursor.setCursor(info.RealStart); !myIteratorCursor.equalWordNumber(end); myIteratorCursor.nextWord()) {
    final ZLTextElement element=myIteratorCursor.getElement();
    if ((element instanceof ZLTextWord) || (element instanceof ZLTextImageElement)) {
      ZLTextElementArea area=it.next();
      if (area.ChangeStyle) {
        setTextStyle(area.Style);
      }
      final int x=area.XStart;
      final int y=area.YEnd - getElementDescent(element) - myTextStyle.verticalShift();
      context.moveXTo(x);
      if (element instanceof ZLTextWord) {
        drawWord(x,y,(ZLTextWord)element,myIteratorCursor.getCharNumber(),-1,false);
      }
 else {
        context.drawImage(x,y,((ZLTextImageElement)element).getImage());
      }
    }
  }
  if (!(it.nextIndex() == toIt.nextIndex())) {
    ZLTextElementArea area=it.next();
    if (area.ChangeStyle) {
      setTextStyle(area.Style);
    }
    int len=info.End.getCharNumber();
    final ZLTextWord word=(ZLTextWord)info.End.getElement();
    final int x=area.XStart;
    final int y=area.YEnd - getElementDescent(word) - myTextStyle.verticalShift();
    drawWord(x,y,word,0,len,area.AddHyphenationSign);
  }
  context.moveY(info.Descent + info.VSpaceAfter);
}
