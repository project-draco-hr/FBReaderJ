{
  final ZLTextParagraphCursor paragraph=info.RealStart.getParagraphCursor();
  ListIterator<ZLTextElementArea> fromIt=myTextElementMap.listIterator(from);
  ListIterator<ZLTextElementArea> toIt=myTextElementMap.listIterator(to);
  getContext().moveY(info.Height);
  int maxY=topMargin() + myStyle.getTextAreaHeight();
  if (getContext().getY() > maxY) {
    getContext().moveYTo(maxY);
  }
  getContext().moveXTo(leftMargin());
  ListIterator<ZLTextElementArea> it=myTextElementMap.listIterator(from);
  for (ZLTextWordCursor pos=new ZLTextWordCursor(info.RealStart); !pos.equalWordNumber(info.End); pos.nextWord()) {
    final ZLTextElement element=pos.getElement();
    if ((element instanceof ZLTextWord) || (element instanceof ZLTextImageElement)) {
      ZLTextElementArea area=it.next();
      if (area.ChangeStyle) {
        myStyle.setStyle(area.Style);
      }
      final int x=area.XStart;
      final int y=area.YEnd - myStyle.getElementDescent(element) - myStyle.getTextStyle().verticalShift();
      getContext().moveXTo(x);
      if (element instanceof ZLTextWord) {
        drawWord(x,y,(ZLTextWord)element,pos.getCharNumber(),-1,false);
      }
 else {
        getContext().drawImage(x,y,((ZLTextImageElement)element).getImage());
      }
    }
  }
  if (!(it.nextIndex() == toIt.nextIndex())) {
    ZLTextElementArea area=it.next();
    if (area.ChangeStyle) {
      myStyle.setStyle(area.Style);
    }
    int len=info.End.getCharNumber();
    final ZLTextWord word=(ZLTextWord)info.End.getElement();
    final int x=area.XStart;
    final int y=area.YEnd - myStyle.getElementDescent(word) - myStyle.getTextStyle().verticalShift();
    drawWord(x,y,word,0,len,area.AddHyphenationSign);
  }
  getContext().moveY(info.Descent + info.VSpaceAfter);
}
