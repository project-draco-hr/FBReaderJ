{
  ZLTextLineInfo info=new ZLTextLineInfo(start,myStyle.getTextStyle());
  ZLTextWordCursor current=new ZLTextWordCursor(start);
  ZLTextParagraphCursor paragraphCursor=current.getParagraphCursor();
  boolean isFirstLine=current.isStartOfParagraph();
  if (isFirstLine) {
    ZLTextElement element=paragraphCursor.getElement(current.getWordNumber());
    while (element instanceof ZLTextControlElement) {
      if (element instanceof ZLTextControlElement) {
        myStyle.applyControl((ZLTextControlElement)element);
      }
      current.nextWord();
      if (current.equalWordNumber(end)) {
        break;
      }
      element=paragraphCursor.getElement(current.getWordNumber());
    }
    info.StartStyle=myStyle.getTextStyle();
    info.RealStart.setCursor(current);
  }
  ZLTextStyle storedStyle=myStyle.getTextStyle();
  info.LeftIndent=myStyle.getTextStyle().leftIndent();
  if (isFirstLine) {
    info.LeftIndent+=myStyle.getTextStyle().firstLineIndentDelta();
  }
  info.Width=info.LeftIndent;
  final ZLTextWordCursor realStart=info.RealStart;
  if (realStart.equalWordNumber(end)) {
    info.End.setCursor(realStart);
    return info;
  }
  int newWidth=info.Width;
  int newHeight=info.Height;
  int newDescent=info.Descent;
  int maxWidth=myStyle.getPaintContext().getWidth() - leftMargin() - rightMargin()- myStyle.getTextStyle().rightIndent();
  boolean wordOccurred=false;
  boolean isVisible=false;
  int lastSpaceWidth=0;
  int internalSpaceCounter=0;
  boolean removeLastSpace=false;
  do {
    ZLTextElement element=paragraphCursor.getElement(current.getWordNumber());
    newWidth+=myStyle.getElementWidth(element,current.getCharNumber());
    newHeight=Math.max(newHeight,myStyle.getElementHeight(element));
    newDescent=Math.max(newDescent,myStyle.getElementDescent(element));
    if (element == ZLTextElement.HSpace) {
      if (wordOccurred) {
        wordOccurred=false;
        internalSpaceCounter++;
        lastSpaceWidth=myStyle.getPaintContext().getSpaceWidth();
        newWidth+=lastSpaceWidth;
      }
    }
 else     if (element instanceof ZLTextWord) {
      wordOccurred=true;
      isVisible=true;
    }
 else     if (element instanceof ZLTextControlElement) {
      myStyle.applyControl((ZLTextControlElement)element);
    }
 else     if (element instanceof ZLTextImageElement) {
      wordOccurred=true;
      isVisible=true;
    }
    if ((newWidth > maxWidth) && !info.End.equalWordNumber(start)) {
      break;
    }
    ZLTextElement previousElement=element;
    current.nextWord();
    boolean allowBreak=current.equalWordNumber(end);
    if (!allowBreak) {
      element=current.getElement();
      allowBreak=(((!(element instanceof ZLTextWord)) || (previousElement instanceof ZLTextWord)) && !(element instanceof ZLTextImageElement) && !(element instanceof ZLTextControlElement));
    }
    if (allowBreak) {
      info.IsVisible=isVisible;
      info.Width=newWidth;
      info.Height=Math.max(info.Height,newHeight);
      info.Descent=Math.max(info.Descent,newDescent);
      info.End.setCursor(current);
      storedStyle=myStyle.getTextStyle();
      info.SpaceCounter=internalSpaceCounter;
      removeLastSpace=!wordOccurred && (info.SpaceCounter > 0);
    }
  }
 while (!current.equalWordNumber(end));
  if (removeLastSpace) {
    info.Width-=lastSpaceWidth;
    info.SpaceCounter--;
  }
  myStyle.setStyle(storedStyle);
  if (isFirstLine) {
    info.Height+=info.StartStyle.spaceBefore();
  }
  if (info.End.isEndOfParagraph()) {
    info.VSpaceAfter=myStyle.getTextStyle().spaceAfter();
  }
  return info;
}
