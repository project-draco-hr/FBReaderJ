{
  final ZLPaintContext context=getContext();
  final ZLTextLineInfo info=new ZLTextLineInfo(start,myTextStyle);
  ZLTextWordCursor current=new ZLTextWordCursor(start);
  ZLTextParagraphCursor paragraphCursor=current.getParagraphCursor();
  final boolean isFirstLine=current.isStartOfParagraph();
  if (paragraphCursor.getParagraph().getKind() == ZLTextParagraph.Kind.TREE_PARAGRAPH) {
    final ZLTextTreeParagraph treeParagraph=(ZLTextTreeParagraph)paragraphCursor.getParagraph();
    boolean[] stack=new boolean[treeParagraph.getDepth() - 1];
    if (stack.length > 0) {
      ZLTextTreeParagraph ctp=treeParagraph;
      for (int index=0; index < stack.length; ++index) {
        stack[index]=!ctp.isLastChild();
        ctp=ctp.getParent();
      }
    }
    info.NodeInfo=new ZLTextLineInfo.TreeNodeInfo(!treeParagraph.hasChildren(),treeParagraph.isOpen(),isFirstLine,paragraphCursor.getIndex(),stack);
  }
  if (isFirstLine) {
    ZLTextElement element=paragraphCursor.getElement(current.getWordNumber());
    while (element instanceof ZLTextControlElement) {
      if (element instanceof ZLTextControlElement) {
        applyControl((ZLTextControlElement)element);
      }
      current.nextWord();
      if (current.equalWordNumber(end)) {
        break;
      }
      element=paragraphCursor.getElement(current.getWordNumber());
    }
    info.StartStyle=myTextStyle;
    info.RealStart.setCursor(current);
  }
  ZLTextStyle storedStyle=myTextStyle;
  info.LeftIndent=myTextStyle.leftIndent();
  if (isFirstLine) {
    info.LeftIndent+=myTextStyle.firstLineIndentDelta();
  }
  if (info.NodeInfo != null) {
    info.LeftIndent+=(context.getStringHeight() + 2) / 3 * 4 * (info.NodeInfo.VerticalLinesStack.length + 1);
  }
  info.Width=info.LeftIndent;
  final ZLTextWordCursor realStart=info.RealStart;
  if (realStart.equalWordNumber(end)) {
    info.End.setCursor(realStart);
    return info;
  }
  int newWidth=info.Width;
  int newHeight=info.Height;
  int newDescent=info.Descent;
  int maxWidth=context.getWidth() - getLeftMargin() - getRightMargin()- myTextStyle.rightIndent();
  boolean wordOccurred=false;
  boolean isVisible=false;
  int lastSpaceWidth=0;
  int internalSpaceCounter=0;
  boolean removeLastSpace=false;
  do {
    ZLTextElement element=paragraphCursor.getElement(current.getWordNumber());
    newWidth+=getElementWidth(element,current.getCharNumber());
    newHeight=Math.max(newHeight,getElementHeight(element));
    newDescent=Math.max(newDescent,getElementDescent(element));
    if (element == ZLTextElement.HSpace) {
      if (wordOccurred) {
        wordOccurred=false;
        internalSpaceCounter++;
        lastSpaceWidth=context.getSpaceWidth();
        newWidth+=lastSpaceWidth;
      }
    }
 else     if (element instanceof ZLTextWord) {
      wordOccurred=true;
      isVisible=true;
    }
 else     if (element instanceof ZLTextControlElement) {
      applyControl((ZLTextControlElement)element);
    }
 else     if (element instanceof ZLTextImageElement) {
      wordOccurred=true;
      isVisible=true;
    }
    if ((newWidth > maxWidth) && !info.End.equalWordNumber(start)) {
      break;
    }
    ZLTextElement previousElement=element;
    current.nextWord();
    boolean allowBreak=current.equalWordNumber(end);
    if (!allowBreak) {
      element=current.getElement();
      allowBreak=(((!(element instanceof ZLTextWord)) || (previousElement instanceof ZLTextWord)) && !(element instanceof ZLTextImageElement) && !(element instanceof ZLTextControlElement));
    }
    if (allowBreak) {
      info.IsVisible=isVisible;
      info.Width=newWidth;
      info.Height=Math.max(info.Height,newHeight);
      info.Descent=Math.max(info.Descent,newDescent);
      info.End.setCursor(current);
      storedStyle=myTextStyle;
      info.SpaceCounter=internalSpaceCounter;
      removeLastSpace=!wordOccurred && (info.SpaceCounter > 0);
    }
  }
 while (!current.equalWordNumber(end));
  if (removeLastSpace) {
    info.Width-=lastSpaceWidth;
    info.SpaceCounter--;
  }
  setTextStyle(storedStyle);
  if (isFirstLine) {
    info.Height+=info.StartStyle.spaceBefore();
  }
  if (info.End.isEndOfParagraph()) {
    info.VSpaceAfter=myTextStyle.spaceAfter();
  }
  return info;
}
