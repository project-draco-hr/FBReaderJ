{
  ZLTextIndicatorInfo indicatorInfo=getIndicatorInfo();
  if (indicatorInfo.isVisible() && indicatorInfo.isSensitive()) {
    final ZLPaintContext context=getContext();
    final int yBottom=context.getHeight() - getBottomMargin() - 1;
    final int yTop=yBottom - indicatorInfo.getHeight() + 1;
    final int xLeft=getLeftMargin();
    final int xRight=context.getWidth() - getRightMargin() - 1;
    if ((x > xLeft) && (x < xRight) && (y > yTop)&& (y < yBottom)) {
      System.err.println("indicator touched at " + (x - xLeft) + " of "+ (xRight - xLeft - 1));
      return true;
    }
  }
  if (myModel instanceof ZLTextTreeModel) {
    ZLTextTreeNodeArea nodeArea=(ZLTextTreeNodeArea)myTreeNodeMap.binarySearch(x,y);
    if (nodeArea != null) {
      final int index=nodeArea.ParagraphNumber;
      final ZLTextTreeParagraph paragraph=((ZLTextTreeModel)myModel).getTreeParagraph(index);
      paragraph.open(!paragraph.isOpen());
      rebuildPaintInfo(true);
      preparePaintInfo();
      if (paragraph.isOpen()) {
        int nextParagraphNumber=index + paragraph.getFullSize();
        int lastParagraphNumber=myEndCursor.getParagraphCursor().getIndex();
        if (myEndCursor.isEndOfParagraph()) {
          ++lastParagraphNumber;
        }
      }
      int firstParagraphNumber=myStartCursor.getParagraphCursor().getIndex();
      if (myStartCursor.isStartOfParagraph()) {
        --firstParagraphNumber;
      }
      getApplication().refreshWindow();
      return true;
    }
  }
  return false;
}
