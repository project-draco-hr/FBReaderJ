{
  final BearerAuthenticator ba=(BearerAuthenticator)ZLNetworkManager.Instance().getBearerAuthenticator();
switch (requestCode) {
case NetworkLibraryActivity.REQUEST_ACCOUNT_PICKER:
synchronized (ba) {
      ba.myAccount=data.getStringExtra(AccountManager.KEY_ACCOUNT_NAME);
      ba.notifyAll();
    }
  return true;
case NetworkLibraryActivity.REQUEST_WEB_AUTHORISATION_SCREEN:
synchronized (ba) {
  final CookieStore store=ZLNetworkManager.Instance().cookieStore();
  final Map<String,String> cookies=(Map<String,String>)data.getSerializableExtra(NetworkLibraryActivity.COOKIES_KEY);
  if (cookies == null) {
    return true;
  }
  for (  Map.Entry<String,String> entry : cookies.entrySet()) {
    final BasicClientCookie2 c=new BasicClientCookie2(entry.getKey(),entry.getValue());
    c.setDomain(data.getData().getHost());
    c.setPath("/");
    final Calendar expire=Calendar.getInstance();
    expire.add(Calendar.YEAR,1);
    c.setExpiryDate(expire.getTime());
    c.setSecure(true);
    c.setDiscard(false);
    store.addCookie(c);
  }
  ba.notifyAll();
}
return true;
}
return false;
}
