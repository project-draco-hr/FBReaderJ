{
  if (Model != null) {
    if (book == null || bookmark == null && Collection.sameBook(book,Model.Book)) {
      return;
    }
  }
  if (book == null) {
    book=getCurrentServerBook(notifier);
    if (book == null) {
      book=Collection.getRecentBook(0);
    }
    if (book == null || !book.File.exists()) {
      book=Collection.getBookByFile(BookUtil.getHelpFile().getPath());
    }
    if (book == null) {
      return;
    }
  }
  final Book bookToOpen=book;
  bookToOpen.addLabel(Book.READ_LABEL);
  Collection.saveBook(bookToOpen);
  final SynchronousExecutor executor=createExecutor("loadingBook");
  executor.execute(new Runnable(){
    public void run(){
      openBookInternal(bookToOpen,bookmark,false);
    }
  }
,postAction);
}
