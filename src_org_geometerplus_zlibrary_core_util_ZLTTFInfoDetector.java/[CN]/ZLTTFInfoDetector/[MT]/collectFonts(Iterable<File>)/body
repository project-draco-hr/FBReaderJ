{
  final HashMap<String,File[]> fonts=new HashMap<String,File[]>();
  if (files == null) {
    return fonts;
  }
  for (  File f : files) {
    InputStream stream=null;
    try {
      stream=new FileInputStream(f);
      final ZLTTFInfo info=detectInfo(stream);
      if (info == null) {
        continue;
      }
      String family=info.FamilyName;
      String subfamily=info.SubfamilyName;
      if (subfamily == null || !STYLES.contains(subfamily.toLowerCase())) {
        final String full=subfamily != null ? family + " " + subfamily : family;
        final String lower=full.toLowerCase();
        family=full;
        subfamily="";
        for (        String style : STYLES) {
          if (lower.endsWith(" " + style)) {
            family=full.substring(0,lower.length() - style.length() - 1);
            subfamily=full.substring(lower.length() - style.length());
            break;
          }
        }
      }
      File[] table=fonts.get(family);
      if (table == null) {
        table=new File[4];
        fonts.put(family,table);
      }
      if ("bold".equalsIgnoreCase(subfamily)) {
        table[1]=f;
      }
 else       if ("italic".equalsIgnoreCase(subfamily) || "oblique".equalsIgnoreCase(subfamily)) {
        table[2]=f;
      }
 else       if ("bold italic".equalsIgnoreCase(subfamily) || "bold oblique".equalsIgnoreCase(subfamily)) {
        table[3]=f;
      }
 else {
        table[0]=f;
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
 finally {
      if (stream != null) {
        try {
          stream.close();
        }
 catch (        IOException e1) {
        }
      }
    }
  }
  return fonts;
}
