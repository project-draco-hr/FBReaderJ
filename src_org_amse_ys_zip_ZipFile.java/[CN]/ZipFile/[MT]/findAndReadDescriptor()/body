{
  byte[] tempArray=new byte[12];
  while (true) {
    int signature=0;
    do {
      int nextByte=myBaseStream.read();
      if (nextByte < 0) {
        throw new IOException("readFileHeaders. Unexpected end of file when looking for DataDescriptor");
      }
      signature=((signature << 8) & (0x0ffffffff)) + (byte)nextByte;
    }
 while (signature != LocalFileHeader.DATA_DESCRIPTOR_SIGNATURE);
    myBaseStream.read(tempArray);
    int compressedSize=((tempArray[7] & 0xff) << 24) + ((tempArray[6] & 0xff) << 16) + ((tempArray[5] & 0xff) << 8)+ (tempArray[4] & 0xff);
    int uncompressedSize=((tempArray[11] & 0xff) << 24) + ((tempArray[10] & 0xff) << 16) + ((tempArray[9] & 0xff) << 8)+ (tempArray[8] & 0xff);
    LocalFileHeader lastHeader=myFileHeaders.get(myFileHeaders.size() - 1);
    if ((myBaseStream.offset() - lastHeader.OffsetOfLocalData - 16) == compressedSize) {
      lastHeader.setSizes(compressedSize,uncompressedSize);
      break;
    }
 else {
      myBaseStream.backSkip(12);
      continue;
    }
  }
}
