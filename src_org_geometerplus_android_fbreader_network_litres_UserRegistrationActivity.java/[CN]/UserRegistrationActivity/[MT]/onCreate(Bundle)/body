{
  super.onCreate(icicle);
  myResource=ZLResource.resource("dialog").getResource("litresUserRegistration");
  setContentView(R.layout.lr_user_registration);
  setTitle(myResource.getResource("title").getValue());
  setViewTextFromResource(R.id.lr_user_registration_login_text,"login");
  setViewTextFromResource(R.id.lr_user_registration_password_text,"password");
  setViewTextFromResource(R.id.lr_user_registration_confirm_password_text,"confirmPassword");
  setViewTextFromResource(R.id.lr_user_registration_email_text,"email");
  final TextView errorLabel=findTextView(R.id.lr_user_registration_error);
  errorLabel.setVisibility(View.GONE);
  errorLabel.setText("");
  final ZLResource buttonResource=ZLResource.resource("dialog").getResource("button");
  final View buttonsView=findViewById(R.id.lr_user_registration_buttons);
  final Button okButton=(Button)buttonsView.findViewById(R.id.ok_button);
  final Button cancelButton=(Button)buttonsView.findViewById(R.id.cancel_button);
  final View emailControl=findViewById(R.id.lr_user_registration_email_control);
  final TextView emailTextView=(TextView)emailControl.findViewById(R.id.lr_email_edit);
  okButton.setText(buttonResource.getResource("ok").getValue());
  okButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      final String userName=getViewText(R.id.lr_user_registration_login);
      final String password=getViewText(R.id.lr_user_registration_password);
      final String confirmPassword=getViewText(R.id.lr_user_registration_confirm_password);
      final String email=emailTextView.getText().toString().trim();
      if (userName.length() == 0) {
        setErrorMessageFromResource("usernameNotSpecified");
        return;
      }
      if (!password.equals(confirmPassword)) {
        setErrorMessageFromResource("passwordsDoNotMatch");
        return;
      }
      if (password.length() == 0) {
        setErrorMessageFromResource("passwordNotSpecified");
        return;
      }
      if (email.length() == 0) {
        setErrorMessageFromResource("emailNotSpecified");
        return;
      }
      final int atPos=email.indexOf("@");
      if (atPos == -1 || email.indexOf(".",atPos) == -1) {
        setErrorMessageFromResource("invalidEMail");
        return;
      }
      final RegistrationNetworkRunnable runnable=new RegistrationNetworkRunnable(userName,password,email);
      final PostRunnable postRunnable=new PostRunnable(){
        public void run(        ZLNetworkException exception){
          if (exception == null) {
            reportSuccess(userName,password,runnable.XmlReader.Sid);
            finish();
          }
 else {
            setErrorMessage(exception.getMessage());
          }
        }
      }
;
      runWithMessage("registerUser",runnable,postRunnable);
    }
  }
);
  cancelButton.setText(buttonResource.getResource("cancel").getValue());
  cancelButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      finish();
    }
  }
);
  setupEmailControl(emailControl,null);
}
