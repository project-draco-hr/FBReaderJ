{
  final NetworkCatalogTree catalogTree=(NetworkCatalogTree)tree;
  final NetworkCatalogItem item=catalogTree.Item;
  menu.setHeaderTitle(tree.getName());
  final String catalogUrl=item.URLByType.get(NetworkCatalogItem.URL_CATALOG);
  final boolean isOpened=tree.hasChildren() && NetworkLibraryActivity.Instance.getAdapter().isOpen(tree);
  final ItemsLoadingRunnable catalogRunnable=(catalogUrl != null) ? NetworkLibraryActivity.Instance.getItemsLoadingRunnable(Uri.parse(catalogUrl)) : null;
  final boolean isLoading=catalogRunnable != null;
  if (catalogUrl != null) {
    if (isLoading) {
      if (catalogRunnable.InterruptFlag.get()) {
        addMenuItem(menu,TREE_NO_ACTION,"stoppingCatalogLoading");
      }
 else {
        addMenuItem(menu,STOP_LOADING_ITEM_ID,"stopLoading");
      }
    }
 else {
      final String expandOrCollapseTitle;
      if (tree instanceof NetworkCatalogRootTree) {
        expandOrCollapseTitle=isOpened ? "closeCatalog" : "openCatalog";
      }
 else {
        expandOrCollapseTitle=isOpened ? "collapseTree" : "expandTree";
      }
      addMenuItem(menu,EXPAND_OR_COLLAPSE_TREE_ITEM_ID,expandOrCollapseTitle);
      if (isOpened) {
        addMenuItem(menu,RELOAD_ITEM_ID,"reload");
      }
    }
  }
  if (tree instanceof NetworkCatalogRootTree) {
    NetworkAuthenticationManager mgr=item.Link.authenticationManager();
    if (mgr != null) {
      final boolean maybeSignedIn=mgr.isAuthorised(false).Status != ZLBoolean3.B3_FALSE;
      if (maybeSignedIn) {
        addMenuItem(menu,SIGNOUT_ITEM_ID,"signOut",mgr.currentUserName());
        if (mgr.refillAccountLink() != null) {
          final String account=mgr.currentAccount();
          if (account != null) {
            addMenuItem(menu,REFILL_ACCOUNT_ITEM_ID,"refillAccount",account);
          }
        }
      }
 else {
        addMenuItem(menu,SIGNIN_ITEM_ID,"signIn");
      }
    }
  }
 else {
    if (item.URLByType.get(NetworkCatalogItem.URL_HTML_PAGE) != null) {
      addMenuItem(menu,OPEN_IN_BROWSER_ITEM_ID,"openInBrowser");
    }
  }
}
