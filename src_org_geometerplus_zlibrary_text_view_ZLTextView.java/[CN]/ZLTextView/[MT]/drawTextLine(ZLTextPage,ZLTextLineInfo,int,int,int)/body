{
  final ZLTextParagraphCursor paragraph=info.ParagraphCursor;
  final ZLPaintContext context=myContext;
  if (!mySelection.isEmpty() && from != to) {
    final ZLTextElementArea fromArea=page.TextElementMap.get(from);
    final ZLTextElementArea toArea=page.TextElementMap.get(to - 1);
    final ZLTextElementArea selectionStartArea=mySelection.getStartArea();
    final ZLTextElementArea selectionEndArea=mySelection.getEndArea();
    if (fromArea.compareTo(selectionEndArea) <= 0 && toArea.compareTo(selectionStartArea) >= 0) {
      final int top=y + 1;
      int left, right, bottom=y + info.Height + info.Descent;
      if (selectionStartArea.compareTo(fromArea) < 0) {
        left=getLeftMargin();
      }
 else {
        left=selectionStartArea.XStart;
      }
      if (selectionEndArea.compareTo(toArea) > 0) {
        right=getRightLine();
        bottom+=info.VSpaceAfter;
      }
 else {
        right=selectionEndArea.XEnd;
      }
      context.setFillColor(getSelectedBackgroundColor());
      context.fillRectangle(left,top,right,bottom);
    }
  }
  int index=from;
  final int endElementIndex=info.EndElementIndex;
  int charIndex=info.RealStartCharIndex;
  for (int wordIndex=info.RealStartElementIndex; wordIndex != endElementIndex && index < to; ++wordIndex, charIndex=0) {
    final ZLTextElement element=paragraph.getElement(wordIndex);
    final ZLTextElementArea area=page.TextElementMap.get(index);
    if (element == area.Element) {
      index++;
      if (area.ChangeStyle) {
        setTextStyle(area.Style);
      }
      final int areaX=area.XStart;
      final int areaY=area.YEnd - getElementDescent(element) - getTextStyle().getVerticalShift();
      if (element instanceof ZLTextWord) {
        drawWord(areaX,areaY,(ZLTextWord)element,charIndex,-1,false,getTextColor(getTextStyle().Hyperlink));
      }
 else       if (element instanceof ZLTextImageElement) {
        context.drawImage(areaX,areaY,((ZLTextImageElement)element).ImageData);
      }
 else       if (element == ZLTextElement.HSpace) {
        final int cw=context.getSpaceWidth();
        for (int len=0; len < area.XEnd - area.XStart; len+=cw) {
          context.drawString(areaX + len,areaY,SPACE,0,1);
        }
      }
    }
  }
  if (index != to) {
    ZLTextElementArea area=page.TextElementMap.get(index++);
    if (area.ChangeStyle) {
      setTextStyle(area.Style);
    }
    int len=info.EndCharIndex;
    final ZLTextWord word=(ZLTextWord)paragraph.getElement(info.EndElementIndex);
    drawWord(area.XStart,area.YEnd - context.getDescent() - getTextStyle().getVerticalShift(),word,0,len,area.AddHyphenationSign,getTextColor(getTextStyle().Hyperlink));
  }
}
