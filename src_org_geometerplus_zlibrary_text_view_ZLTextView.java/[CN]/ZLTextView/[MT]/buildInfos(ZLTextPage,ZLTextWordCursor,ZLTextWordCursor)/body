{
  result.setCursor(start);
  int textAreaHeight=getTextAreaHeight();
  page.LineInfos.clear();
  page.Column0Height=0;
  boolean nextParagraph;
  do {
    resetTextStyle();
    final ZLTextParagraphCursor paragraphCursor=result.getParagraphCursor();
    final int wordIndex=result.getElementIndex();
    applyStyleChanges(paragraphCursor,0,wordIndex);
    ZLTextLineInfo info=new ZLTextLineInfo(paragraphCursor,wordIndex,result.getCharIndex(),getTextStyle());
    final int endIndex=info.ParagraphCursorLength;
    while (info.EndElementIndex != endIndex) {
      info=processTextLine(paragraphCursor,info.EndElementIndex,info.EndCharIndex,endIndex);
      textAreaHeight-=info.Height + info.Descent;
      if (textAreaHeight < 0 && page.LineInfos.size() > page.Column0Height) {
        if (page.Column0Height == 0 && page.twoColumnView()) {
          textAreaHeight=getTextAreaHeight();
          textAreaHeight-=info.Height + info.Descent;
          page.Column0Height=page.LineInfos.size();
        }
 else {
          break;
        }
      }
      textAreaHeight-=info.VSpaceAfter;
      result.moveTo(info.EndElementIndex,info.EndCharIndex);
      page.LineInfos.add(info);
      if (textAreaHeight < 0) {
        if (page.Column0Height == 0 && page.twoColumnView()) {
          textAreaHeight=getTextAreaHeight();
          page.Column0Height=page.LineInfos.size();
        }
 else {
          break;
        }
      }
    }
    nextParagraph=result.isEndOfParagraph() && result.nextParagraph();
    if (nextParagraph && result.getParagraphCursor().isEndOfSection()) {
      if (page.Column0Height == 0 && page.twoColumnView() && !page.LineInfos.isEmpty()) {
        textAreaHeight=getTextAreaHeight();
        page.Column0Height=page.LineInfos.size();
      }
    }
  }
 while (nextParagraph && textAreaHeight >= 0 && (!result.getParagraphCursor().isEndOfSection() || page.LineInfos.size() == page.Column0Height));
  resetTextStyle();
}
