{
  super.onCreate(bundle);
  Thread.setDefaultUncaughtExceptionHandler(new org.geometerplus.zlibrary.ui.android.library.UncaughtExceptionHandler(this));
  myBookCollection.bindToService(this,null);
  myLibrary=Util.networkLibrary(this);
  final List<NetworkTree.Key> keys=(List<NetworkTree.Key>)getIntent().getSerializableExtra(NetworkLibraryActivity.TREE_KEY_KEY);
  if (keys == null || keys.isEmpty()) {
    finish();
    return;
  }
  myBooks=new ArrayList<NetworkBookItem>(keys.size());
  for (  NetworkTree.Key k : keys) {
    final NetworkTree tree=myLibrary.getTreeByKey(k);
    if (tree instanceof NetworkBookTree) {
      myBooks.add(((NetworkBookTree)tree).Book);
    }
 else {
      finish();
      return;
    }
  }
  myLink=myBooks.get(0).Link;
  final NetworkAuthenticationManager mgr=myLink.authenticationManager();
  if (mgr == null) {
    finish();
    return;
  }
  try {
    if (!mgr.isAuthorised(true)) {
      buttonsView().setVisibility(View.GONE);
      AuthorisationMenuActivity.runMenu(this,myLink,1);
    }
  }
 catch (  ZLNetworkException e) {
  }
  myCost=calculateCost();
  if (myCost == null) {
    finish();
    return;
  }
  myAccount=mgr.currentAccount();
  setupUI(AuthorisationState.Authorised);
  myLibrary.addChangeListener(this);
}
