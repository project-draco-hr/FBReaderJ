{
  int textLength=0;
  int dataIndex=myStartEntryIndices[index];
  int dataOffset=myStartEntryOffsets[index];
  char[] data=myStorage.block(dataIndex);
  for (int len=myParagraphLengths[index]; len > 0; --len) {
    if (dataOffset == data.length) {
      data=myStorage.block(++dataIndex);
      dataOffset=0;
    }
    byte type=(byte)data[dataOffset];
    if (type == 0) {
      data=myStorage.block(++dataIndex);
      dataOffset=0;
      type=(byte)data[0];
    }
    ++dataOffset;
switch (type) {
case ZLTextParagraph.Entry.TEXT:
      int entryLength=((int)data[dataOffset++] << 16) + (int)data[dataOffset++];
    dataOffset+=entryLength;
  textLength+=entryLength;
break;
case ZLTextParagraph.Entry.CONTROL:
{
if ((data[dataOffset++] & 0x0200) == 0x0200) {
  dataOffset+=(short)data[dataOffset++];
}
break;
}
case ZLTextParagraph.Entry.IMAGE:
dataOffset+=2;
break;
case ZLTextParagraph.Entry.FIXED_HSPACE:
++dataOffset;
break;
case ZLTextParagraph.Entry.FORCED_CONTROL:
dataOffset+=2;
break;
}
}
return textLength;
}
