{
  super.onCreate(icicle);
  final Intent intent=getIntent();
  if (Intent.ACTION_SEARCH.equals(intent.getAction())) {
    if (runSearch(intent)) {
      startActivity(intent.setAction(ACTION_FOUND).setClass(getApplicationContext(),LibraryTopLevelActivity.class).addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK));
    }
 else {
      showNotFoundToast();
      finish();
    }
    return;
  }
  myTreePathString=intent.getStringExtra(TREE_PATH_KEY);
  final String[] path=myTreePathString.split("\000");
  String title=null;
  if (path.length == 1) {
    title=myResource.getResource(path[0]).getResource("summary").getValue();
    final String parameter=intent.getStringExtra(PARAMETER_KEY);
    if (parameter != null) {
      title=title.replace("%s",parameter);
    }
  }
 else {
    title=path[path.length - 1];
  }
  setTitle(title);
  FBTree tree=null;
  if (PATH_RECENT.equals(path[0])) {
    tree=Library.recentBooks();
  }
 else   if (PATH_SEARCH_RESULTS.equals(path[0])) {
    tree=Library.searchResults();
  }
 else   if (PATH_BY_AUTHOR.equals(path[0])) {
    tree=Library.byAuthor();
  }
 else   if (PATH_BY_TAG.equals(path[0])) {
    tree=Library.byTag();
  }
 else   if (PATH_FAVORITES.equals(path[0])) {
    tree=Library.favorites();
  }
  for (int i=1; i < path.length; ++i) {
    if (tree == null) {
      break;
    }
    tree=tree.getSubTreeByName(path[i]);
  }
  if (tree != null) {
    final LibraryAdapter adapter=new LibraryAdapter(tree.subTrees());
    setListAdapter(adapter);
    getListView().setOnCreateContextMenuListener(adapter);
  }
}
