{
  super.onCreate(icicle);
  if (DatabaseInstance == null || LibraryInstance == null) {
    finish();
    return;
  }
  final Intent intent=getIntent();
  if (Intent.ACTION_SEARCH.equals(intent.getAction())) {
    if (runSearch(intent)) {
      startActivity(intent.setAction(ACTION_FOUND).setClass(getApplicationContext(),LibraryTopLevelActivity.class).addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK));
    }
 else {
      showNotFoundToast();
      finish();
    }
    return;
  }
  String title=null;
  if (myTreePath.length == 1) {
    title=myResource.getResource(myTreePath[0]).getResource("summary").getValue();
    final String parameter=intent.getStringExtra(PARAMETER_KEY);
    if (parameter != null) {
      title=title.replace("%s",parameter);
    }
  }
 else {
    title=myTreePath[myTreePath.length - 1];
  }
  setTitle(title);
  FBTree tree=null;
  if (Library.ROOT_RECENT.equals(myTreePath[0])) {
    tree=LibraryInstance.recentBooks();
  }
 else   if (Library.ROOT_SEARCH_RESULTS.equals(myTreePath[0])) {
    tree=LibraryInstance.searchResults();
  }
 else   if (Library.ROOT_BY_AUTHOR.equals(myTreePath[0])) {
    tree=LibraryInstance.byAuthor();
  }
 else   if (Library.ROOT_BY_TITLE.equals(myTreePath[0])) {
    tree=LibraryInstance.byTitle();
  }
 else   if (Library.ROOT_BY_TAG.equals(myTreePath[0])) {
    tree=LibraryInstance.byTag();
  }
 else   if (Library.ROOT_FAVORITES.equals(myTreePath[0])) {
    tree=LibraryInstance.favorites();
  }
  for (int i=1; i < myTreePath.length; ++i) {
    if (tree == null) {
      break;
    }
    tree=tree.getSubTreeByName(myTreePath[i]);
  }
  if (tree != null) {
    final ListAdapter adapter=new ListAdapter(this,tree.subTrees());
    setSelection(adapter.getFirstSelectedItemIndex());
  }
}
