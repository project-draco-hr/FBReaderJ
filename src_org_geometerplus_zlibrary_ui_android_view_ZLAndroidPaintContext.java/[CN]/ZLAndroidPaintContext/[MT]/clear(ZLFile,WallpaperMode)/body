{
  if (!wallpaperFile.equals(ourWallpaperFile)) {
    ourWallpaperFile=wallpaperFile;
    ourWallpaper=null;
    try {
      final Bitmap fileBitmap=BitmapFactory.decodeStream(wallpaperFile.getInputStream());
switch (mode) {
case TILE_MIRROR:
{
          final int w=fileBitmap.getWidth();
          final int h=fileBitmap.getHeight();
          final Bitmap wallpaper=Bitmap.createBitmap(2 * w,2 * h,fileBitmap.getConfig());
          final Canvas wallpaperCanvas=new Canvas(wallpaper);
          final Paint wallpaperPaint=new Paint();
          Matrix m=new Matrix();
          wallpaperCanvas.drawBitmap(fileBitmap,m,wallpaperPaint);
          m.preScale(-1,1);
          m.postTranslate(2 * w,0);
          wallpaperCanvas.drawBitmap(fileBitmap,m,wallpaperPaint);
          m.preScale(1,-1);
          m.postTranslate(0,2 * h);
          wallpaperCanvas.drawBitmap(fileBitmap,m,wallpaperPaint);
          m.preScale(-1,1);
          m.postTranslate(-2 * w,0);
          wallpaperCanvas.drawBitmap(fileBitmap,m,wallpaperPaint);
          ourWallpaper=wallpaper;
          break;
        }
case TILE:
      ourWallpaper=fileBitmap;
    break;
}
}
 catch (Throwable t) {
t.printStackTrace();
}
}
if (ourWallpaper != null) {
myBackgroundColor=ZLAndroidColorUtil.getAverageColor(ourWallpaper);
final int w=ourWallpaper.getWidth();
final int h=ourWallpaper.getHeight();
for (int cw=0, iw=1; cw < myWidth; cw+=w, ++iw) {
for (int ch=0, ih=1; ch < myHeight; ch+=h, ++ih) {
  myCanvas.drawBitmap(ourWallpaper,cw,ch,myFillPaint);
}
}
}
 else {
clear(new ZLColor(128,128,128));
}
}
