{
  while (myOutBufferLength == 0) {
    if (myInBufferLength == 0) {
      myInBufferOffset=0;
      final int toRead=(myCompressedAvailable < IN_BUFFER_SIZE) ? myCompressedAvailable : IN_BUFFER_SIZE;
      if (myStream.read(myInBuffer,0,toRead) != toRead) {
        throw new IOException("cannot read from base stream");
      }
      myInBufferLength=toRead;
      myCompressedAvailable-=toRead;
    }
    final long result=inflate(myInBuffer,myInBufferOffset,myInBufferLength,myOutBuffer);
    if (result == 0) {
      throw new IOException("cannot read from base stream");
    }
    final int in=(int)(result >> 16) & 0xFFFF;
    final int out=(int)result & 0xFFFF;
    myInBufferOffset+=in;
    myInBufferLength-=in;
    myOutBufferOffset=0;
    myOutBufferLength=out;
    if ((result & (1L << 32)) != 0) {
      endInflating();
      myStream.backSkip(myInBufferLength - myInBufferOffset);
      break;
    }
  }
}
