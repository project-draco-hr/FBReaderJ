{
  myPaint.setColor(ZLAndroidColorUtil.rgb(myBgColor));
  final int w=getWidth();
  final int h=getHeight();
  canvas.drawRect(0,0,w,h,myPaint);
  if (myBitmap == null || myBitmap.isRecycled()) {
    return;
  }
  final int bw=(int)(myBitmap.getWidth() * myZoomFactor);
  final int bh=(int)(myBitmap.getHeight() * myZoomFactor);
  final Rect src=new Rect(0,0,(int)(w / myZoomFactor),(int)(h / myZoomFactor));
  final Rect dst=new Rect(0,0,w,h);
  if (bw <= w) {
    src.left=0;
    src.right=myBitmap.getWidth();
    dst.left=(w - bw) / 2;
    dst.right=dst.left + bw;
  }
 else {
    final int bWidth=myBitmap.getWidth();
    final int pWidth=(int)(w / myZoomFactor);
    src.left=Math.min(bWidth - pWidth,Math.max((bWidth - pWidth) / 2 - myDx,0));
    src.right+=src.left;
  }
  if (bh <= h) {
    src.top=0;
    src.bottom=myBitmap.getHeight();
    dst.top=(h - bh) / 2;
    dst.bottom=dst.top + bh;
  }
 else {
    final int bHeight=myBitmap.getHeight();
    final int pHeight=(int)(h / myZoomFactor);
    src.top=Math.min(bHeight - pHeight,Math.max((bHeight - pHeight) / 2 - myDy,0));
    src.bottom+=src.top;
  }
  canvas.drawBitmap(myBitmap,src,dst,myPaint);
}
