{
  Set<String> usedCategories=myConfig.applyDelta();
  Map<String,StringBuffer> configFilesContent=new LinkedHashMap<String,StringBuffer>();
  StringBuffer sb;
  Map<String,Boolean> currentGroupOpenedIn;
  for (  String groupName : myConfig.groupNames()) {
    currentGroupOpenedIn=new HashMap<String,Boolean>();
    ZLGroup group=myConfig.getGroup(groupName);
    for (    String optionName : group.optionNames()) {
      ZLOptionInfo option=group.getOption(optionName);
      sb=configFilesContent.get(option.getCategory());
      if (currentGroupOpenedIn.get(option.getCategory()) == null) {
        currentGroupOpenedIn.put(option.getCategory(),false);
      }
      if (sb == null) {
        sb=new StringBuffer();
        configFilesContent.put(option.getCategory(),sb);
      }
      if (!currentGroupOpenedIn.get(option.getCategory())) {
        sb.append("  <group name=\"" + groupName + "\">\n");
        currentGroupOpenedIn.put(option.getCategory(),true);
      }
      sb.append(option);
    }
    for (    String category : currentGroupOpenedIn.keySet()) {
      configFilesContent.get(category).append("  </group>\n");
    }
  }
  for (  String category : usedCategories) {
    this.writeConfigFile("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<config>\n" + configFilesContent.get(category) + "</config>",configFilePath(category));
  }
  for (  String category : usedCategories) {
    if (!configFilesContent.keySet().contains(category)) {
      deleteConfigFile(configFilePath(category));
    }
  }
}
