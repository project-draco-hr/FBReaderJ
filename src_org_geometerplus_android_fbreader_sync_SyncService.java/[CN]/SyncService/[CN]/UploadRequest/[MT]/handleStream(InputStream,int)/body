{
  final Object response=JSONValue.parse(new InputStreamReader(stream));
  String id=null;
  List<String> hashes=null;
  String error=null;
  String code=null;
  try {
    final List<Map> responseList=(List<Map>)response;
    if (responseList.size() == 1) {
      final Map resultMap=(Map)responseList.get(0).get("result");
      id=(String)resultMap.get("id");
      hashes=(List<String>)resultMap.get("hashes");
      error=(String)resultMap.get("error");
      code=(String)resultMap.get("code");
    }
  }
 catch (  Exception e) {
  }
  if (hashes != null && !hashes.isEmpty()) {
    myActualHashesFromServer.addAll(hashes);
    if (!hashes.contains(myHash)) {
      myCollection.setHash(myBook,hashes.get(0));
    }
  }
  if (error != null) {
    log("UPLOAD FAILURE: " + error);
    if ("ALREADY_UPLOADED".equals(code)) {
      Result=Status.AlreadyUploaded;
    }
  }
 else   if (id != null) {
    log("UPLOADED SUCCESSFULLY: " + id);
    Result=Status.Uploaded;
  }
 else {
    log("UNEXPECED RESPONSE: " + response);
  }
}
