{
  if (myHashTablesAreInitialized) {
    return;
  }
  try {
    myBookUploadContext.reloadCookie();
    final int pageSize=300;
    final Map<String,String> data=new HashMap<String,String>();
    data.put("page_size",String.valueOf(pageSize));
    for (int pageNo=0; !myHashTablesAreInitialized; ++pageNo) {
      data.put("page_no",String.valueOf(pageNo));
      myBookUploadContext.perform(new PostRequest("all.hashes.paged",data){
        @Override public void processResponse(        Object response){
          final Map<String,List<String>> map=(Map<String,List<String>>)response;
          final List<String> actualHashes=map.get("actual");
          myActualHashesFromServer.addAll(actualHashes);
          myDeletedHashesFromServer.addAll(map.get("deleted"));
          if (actualHashes.size() < pageSize) {
            myHashTablesAreInitialized=true;
          }
        }
      }
);
      log(String.format("RECEIVED: %s/%s HASHES (%s)",myActualHashesFromServer.size(),myDeletedHashesFromServer.size(),myHashTablesAreInitialized ? "complete" : "partial"));
    }
  }
 catch (  SyncronizationDisabledException e) {
    clearHashTables();
    throw e;
  }
catch (  Exception e) {
    clearHashTables();
    e.printStackTrace();
  }
}
