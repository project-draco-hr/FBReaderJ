{
  if (myPatternTable.isEmpty()) {
    for (int i=0; i < length - 1; i++) {
      mask[i]=false;
    }
    return;
  }
  byte[] values=new byte[length + 1];
  for (int i=0; i < length + 1; i++) {
    values[i]=0;
  }
  for (int j=0; j < length - 2; j++) {
    for (int k=1; k <= length - j; k++) {
      ZLTextTeXHyphenationPattern pattern=new ZLTextTeXHyphenationPattern(ucs2String.toString().toCharArray(),j,k);
      ZLTextTeXHyphenationPattern toApply=findPattern(myPatternTable,pattern);
      if (toApply != null) {
        toApply.apply(values,j);
      }
    }
  }
  for (int i=0; i < length - 1; i++) {
    mask[i]=(values[i + 1] % 2) == 1;
  }
}
