{
  if (myPatternTable.isEmpty()) {
    for (int i=0; i < length - 1; i++) {
      mask[i]=false;
    }
    return;
  }
  byte[] values=new byte[length + 1];
  final HashMap table=myPatternTable;
  ZLTextTeXHyphenationPattern pattern=new ZLTextTeXHyphenationPattern(stringToHyphenate,0,length,false);
  for (int offset=0; offset < length - 2; offset++) {
    for (int len=1; len <= length - offset; len++) {
      pattern.update(stringToHyphenate,offset,len);
      ZLTextTeXHyphenationPattern toApply=(ZLTextTeXHyphenationPattern)table.get(pattern);
      if (toApply != null) {
        toApply.apply(values,offset);
      }
    }
  }
  for (int i=0; i < length - 1; i++) {
    mask[i]=(values[i + 1] % 2) == 1;
  }
}
