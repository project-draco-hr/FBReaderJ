{
  if ((myEncodedData == null) || (myData != null)) {
    return;
  }
  int dataLength=myEncodedData.length();
  int newLength=dataLength / 4 * 3;
  myData=new byte[newLength];
  byte[] number=new byte[4];
  for (int pos=0, dataPos=0; pos < dataLength; dataPos+=3) {
    for (int i=0; (i < 4) && (pos < dataLength); ++pos) {
      char encodedByte=myEncodedData.charAt(pos);
      number[i]=0;
      if (('A' <= encodedByte) && (encodedByte <= 'Z')) {
        number[i]=(byte)(encodedByte - 'A');
      }
 else       if (('a' <= encodedByte) && (encodedByte <= 'z')) {
        number[i]=(byte)(encodedByte - 'a' + 26);
      }
 else       if (('0' <= encodedByte) && (encodedByte <= '9')) {
        number[i]=(byte)(encodedByte - '0' + 52);
      }
 else       if (encodedByte == '+') {
        number[i]=62;
      }
 else       if (encodedByte == '/') {
        number[i]=63;
      }
 else       if (encodedByte == '=') {
        number[i]=64;
      }
 else {
        continue;
      }
      ++i;
    }
    myData[dataPos]=(byte)(number[0] << 2 | number[1] >> 4);
    myData[dataPos + 1]=(byte)(((number[1] & 0xf) << 4) | ((number[2] >> 2) & 0xf));
    myData[dataPos + 2]=(byte)(number[2] << 6 | number[3]);
  }
  myEncodedData=null;
}
