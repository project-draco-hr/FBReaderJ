def _check_boxes(self, state):
    if (self.position == state.src):
        if (self.src_box == None):
            self.src_box = Rectangle((0, self.bottom), width, (self.top - self.bottom), fill=True, ec=None, fc='0.7')
            self.axes.add_patch(self.src_box)
        else:
            self.src_box.set_y(self.bottom)
            self.src_box.set_height((self.top - self.bottom))
    elif (self.position == state.exp1):
        if (state.exp1 < state.src):
            gap_bottom = (self.top - state.exp1_gap)
        else:
            gap_bottom = self.bottom
        if (self.exp_box == None):
            self.exp_box = Rectangle((0, gap_bottom), width, state.exp1_gap, fill=True, ec=None, fc='0.7')
            self.axes.add_patch(self.exp_box)
        else:
            self.exp_box.set_y(gap_bottom)
            self.exp_box.set_height(state.exp1_gap)
    elif (self.position == state.exp2):
        if (state.exp2 < state.src):
            gap_bottom = (self.top - state.exp2_gap)
        else:
            gap_bottom = self.bottom
        if (self.exp_box == None):
            self.exp_box = Rectangle((0, gap_bottom), width, state.exp2_gap, fill=True, ec=None, fc='0.7')
            self.axes.add_patch(self.exp_box)
        else:
            self.exp_box.set_y(gap_bottom)
            self.exp_box.set_height(state.exp2_gap)
    else:
        if (self.src_box != None):
            self.src_box.remove()
            self.src_box = None
        if (self.exp_box != None):
            self.exp_box.remove()
            self.exp_box = None
