{
  boolean doStrongRebuild=myDoStrongRebuild || (myScanSubdirs != ScanSubdirsOption.getValue()) || (myPath != PathOption.getValue());
  if (!doStrongRebuild && !myDoWeakRebuild) {
    return false;
  }
  myPath=PathOption.getValue();
  myScanSubdirs=ScanSubdirsOption.getValue();
  myDoWeakRebuild=false;
  myDoStrongRebuild=false;
  if (doStrongRebuild) {
    myAuthors.clear();
    myCollection.clear();
    myExternalBooks.clear();
    HashSet fileNamesSet=new HashSet();
    collectBookFileNames(fileNamesSet);
    for (Iterator it=fileNamesSet.iterator(); it.hasNext(); ) {
      addDescription(BookDescription.getDescription((String)it.next()));
    }
    BookList bookList=new BookList();
    HashSet bookListSet=bookList.fileNames();
    for (Iterator it=bookListSet.iterator(); it.hasNext(); ) {
      String itValue=(String)it.next();
      if (!fileNamesSet.contains(itValue)) {
        BookDescription description=BookDescription.getDescription(itValue);
        if (description != null) {
          addDescription(description);
          myExternalBooks.add(description);
        }
      }
    }
  }
 else {
    BookList bookList=new BookList();
    HashSet bookListSet=bookList.fileNames();
    ArrayList fileNames=new ArrayList();
    for (Iterator it=myCollection.entrySet().iterator(); it.hasNext(); ) {
      final Map.Entry en=(Map.Entry)it.next();
      final ArrayList books=(ArrayList)en.getValue();
      for (Iterator jt=books.iterator(); jt.hasNext(); ) {
        BookDescription jtValue=(BookDescription)jt.next();
        if ((!myExternalBooks.contains(jtValue)) || (bookListSet.contains(jtValue.getFileName()))) {
          fileNames.add(jtValue.getFileName());
        }
      }
    }
    myCollection.clear();
    myAuthors.clear();
    for (Iterator it=fileNames.iterator(); it.hasNext(); ) {
      addDescription(BookDescription.getDescription((String)it.next(),false));
    }
  }
  return true;
}
