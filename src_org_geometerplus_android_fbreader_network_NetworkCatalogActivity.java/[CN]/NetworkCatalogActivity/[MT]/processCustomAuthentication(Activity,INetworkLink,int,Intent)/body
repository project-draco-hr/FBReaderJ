{
switch (resultCode) {
case AuthenticationActivity.CANCEL_RESULT_CODE:
    UIUtil.wait("signOut",new Runnable(){
      public void run(){
        final NetworkAuthenticationManager mgr=link.authenticationManager();
        if (mgr.mayBeAuthorised(false)) {
          mgr.logOut();
        }
        final NetworkLibrary library=NetworkLibrary.Instance();
        library.invalidateVisibility();
        library.synchronize();
        NetworkView.Instance().fireModelChanged();
      }
    }
,activity);
  break;
case AuthenticationActivity.OK_RESULT_CODE:
{
  final ZLResource resource=ZLResource.resource("dialog").getResource("AuthenticationDialog");
  final String username=data.getStringExtra(AuthenticationActivity.USERNAME_KEY);
  final String password=data.getStringExtra(AuthenticationActivity.PASSWORD_KEY);
  if (username.length() == 0) {
    runAuthenticationDialog(activity,link,resource.getResource("loginIsEmpty").getValue());
  }
  final NetworkAuthenticationManager mgr=link.authenticationManager();
  mgr.UserNameOption.setValue(username);
  final Runnable runnable=new Runnable(){
    public void run(){
      try {
        mgr.authorise(password);
        if (mgr.needsInitialization()) {
          mgr.initialize();
        }
      }
 catch (      ZLNetworkException e) {
        mgr.logOut();
        runAuthenticationDialog(activity,link,e.getMessage());
        return;
      }
      final NetworkLibrary library=NetworkLibrary.Instance();
      library.invalidateVisibility();
      library.synchronize();
      NetworkView.Instance().fireModelChanged();
    }
  }
;
  UIUtil.wait("authentication",runnable,activity);
  break;
}
case AuthenticationActivity.SIGNUP_RESULT_CODE:
Util.runRegistrationDialog(activity,link);
break;
}
}
