{
  final List<InetAddress> addresses=new LinkedList<InetAddress>();
  Method testPtoPMethod=null;
  try {
    testPtoPMethod=NetworkInterface.class.getMethod("isPointToPoint");
  }
 catch (  NoSuchMethodException e) {
  }
  try {
    for (    NetworkInterface iface : Collections.list(NetworkInterface.getNetworkInterfaces())) {
      try {
        if (testPtoPMethod != null && (Boolean)testPtoPMethod.invoke(iface)) {
          continue;
        }
      }
 catch (      IllegalAccessException e) {
      }
catch (      InvocationTargetException e) {
      }
      for (      InetAddress addr : Collections.list(iface.getInetAddresses())) {
        if (!addr.isLoopbackAddress() && addr instanceof Inet4Address) {
          addresses.add(addr);
        }
      }
    }
  }
 catch (  SocketException e) {
    e.printStackTrace();
  }
  return addresses;
}
