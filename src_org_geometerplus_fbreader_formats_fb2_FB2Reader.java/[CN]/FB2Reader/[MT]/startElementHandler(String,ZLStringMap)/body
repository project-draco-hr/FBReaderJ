{
  String id=attributes.getValue("id");
  if (myFootnoteIdDepth > 0) {
    ++myFootnoteIdDepth;
  }
  if (id != null) {
    if (!myReadMainText && myFootnoteIdDepth == 0) {
      myBookReader.setFootnoteTextModel(id);
      myFootnoteIdDepth=1;
    }
    myBookReader.addHyperlinkLabel(id);
  }
  final byte tag=FB2Tag.getTagByName(tagName);
  byte[] tagStack=myTagStack;
  if (tagStack.length == myTagStackSize) {
    tagStack=ZLArrayUtils.createCopy(tagStack,myTagStackSize,myTagStackSize * 2);
    myTagStack=tagStack;
  }
  tagStack[myTagStackSize++]=tag;
switch (tag) {
case FB2Tag.P:
    if (mySectionStarted) {
      mySectionStarted=false;
    }
 else     if (myInsideTitle) {
      myBookReader.addContentsData(SPACE);
    }
  myBookReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.SUB:
myBookReader.addControl(FBTextKind.SUB,true);
break;
case FB2Tag.SUP:
myBookReader.addControl(FBTextKind.SUP,true);
break;
case FB2Tag.CODE:
myBookReader.addControl(FBTextKind.CODE,true);
break;
case FB2Tag.EMPHASIS:
myBookReader.addControl(FBTextKind.EMPHASIS,true);
break;
case FB2Tag.STRONG:
myBookReader.addControl(FBTextKind.STRONG,true);
break;
case FB2Tag.STRIKETHROUGH:
myBookReader.addControl(FBTextKind.STRIKETHROUGH,true);
break;
case FB2Tag.V:
myBookReader.pushKind(FBTextKind.VERSE);
myBookReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.TEXT_AUTHOR:
myBookReader.pushKind(FBTextKind.AUTHOR);
myBookReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.SUBTITLE:
myBookReader.pushKind(FBTextKind.SUBTITLE);
myBookReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.DATE:
myBookReader.pushKind(FBTextKind.DATE);
myBookReader.beginParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH);
break;
case FB2Tag.EMPTY_LINE:
myBookReader.beginParagraph(ZLTextParagraph.Kind.EMPTY_LINE_PARAGRAPH);
myBookReader.endParagraph();
break;
case FB2Tag.CITE:
myBookReader.pushKind(FBTextKind.CITE);
break;
case FB2Tag.EPIGRAPH:
myBookReader.pushKind(FBTextKind.EPIGRAPH);
break;
case FB2Tag.POEM:
myInsidePoem=true;
break;
case FB2Tag.STANZA:
myBookReader.pushKind(FBTextKind.STANZA);
myBookReader.beginParagraph(ZLTextParagraph.Kind.BEFORE_SKIP_PARAGRAPH);
myBookReader.endParagraph();
break;
case FB2Tag.SECTION:
if (myReadMainText) {
myBookReader.insertEndOfSectionParagraph();
++mySectionDepth;
myBookReader.beginContentsParagraph();
mySectionStarted=true;
}
break;
case FB2Tag.ANNOTATION:
if (myBodyCounter == 0) {
myBookReader.setMainTextModel();
}
myBookReader.pushKind(FBTextKind.ANNOTATION);
break;
case FB2Tag.TITLE:
if (myInsidePoem) {
myBookReader.pushKind(FBTextKind.POEM_TITLE);
}
 else if (mySectionDepth == 0) {
myBookReader.insertEndOfSectionParagraph();
myBookReader.pushKind(FBTextKind.TITLE);
}
 else {
myBookReader.pushKind(FBTextKind.SECTION_TITLE);
if (!myBookReader.hasContentsData()) {
myInsideTitle=true;
myBookReader.enterTitle();
}
}
break;
case FB2Tag.BODY:
++myBodyCounter;
myParagraphsBeforeBodyNumber=myBookReader.Model.BookTextModel.getParagraphsNumber();
final String name=attributes.getValue("name");
if (myBodyCounter == 1 || !"notes".equals(name)) {
myBookReader.setMainTextModel();
if (name != null) {
myBookReader.beginContentsParagraph();
myBookReader.addContentsData(name.toCharArray());
++mySectionDepth;
}
myReadMainText=true;
}
myBookReader.pushKind(FBTextKind.REGULAR);
break;
case FB2Tag.A:
{
String ref=getAttributeValue(attributes,XMLNamespaces.XLink,"href");
if ((ref != null) && (ref.length() != 0)) {
final String type=attributes.getValue("type");
if (ref.charAt(0) == '#') {
myHyperlinkType="note".equals(type) ? FBTextKind.FOOTNOTE : FBTextKind.INTERNAL_HYPERLINK;
ref=ref.substring(1);
}
 else {
myHyperlinkType=FBTextKind.EXTERNAL_HYPERLINK;
}
myBookReader.addHyperlinkControl(myHyperlinkType,ref);
}
 else {
myHyperlinkType=FBTextKind.FOOTNOTE;
myBookReader.addControl(myHyperlinkType,true);
}
break;
}
case FB2Tag.COVERPAGE:
if (myBodyCounter == 0) {
myInsideCoverpage=true;
myBookReader.setMainTextModel();
}
break;
case FB2Tag.IMAGE:
{
String imgRef=getAttributeValue(attributes,XMLNamespaces.XLink,"href");
if ((imgRef != null) && (imgRef.length() != 0) && (imgRef.charAt(0) == '#')) {
String vOffset=attributes.getValue("voffset");
short offset=0;
try {
offset=Short.parseShort(vOffset);
}
 catch (NumberFormatException e) {
}
imgRef=imgRef.substring(1);
final boolean isCoverImage=myParagraphsBeforeBodyNumber == myBookReader.Model.BookTextModel.getParagraphsNumber();
if (!imgRef.equals(myCoverImageReference) || !isCoverImage) {
myBookReader.addImageReference(imgRef,offset,myInsideCoverpage || isCoverImage);
}
if (myInsideCoverpage) {
myCoverImageReference=imgRef;
}
}
break;
}
case FB2Tag.BINARY:
final String contentType=attributes.getValue("content-type");
final String imgId=attributes.getValue("id");
if (contentType != null && id != null) {
myCurrentImage=new Base64EncodedImage(MimeType.get(contentType));
myBookReader.addImage(imgId,myCurrentImage);
}
break;
default :
break;
}
return false;
}
