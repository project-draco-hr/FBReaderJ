{
  final LitResAuthenticationManager mgr=(LitResAuthenticationManager)Link.authenticationManager();
  if (!mgr.mayBeAuthorised(true)) {
    throw new ZLNetworkException(NetworkException.ERROR_AUTHENTICATION_FAILED);
  }
  try {
    if (myForceReload) {
      mgr.reloadPurchasedBooks();
    }
  }
  finally {
    myForceReload=true;
    ArrayList<NetworkLibraryItem> children=new ArrayList<NetworkLibraryItem>(mgr.purchasedBooks());
    if (children.size() <= 5) {
      Collections.sort(children,new NetworkBookItemComparator());
      for (      NetworkLibraryItem item : children) {
        listener.onNewItem(Link,item);
      }
    }
 else {
      listener.onNewItem(Link,new ByDateCatalogItem(this,children));
      listener.onNewItem(Link,new ByAuthorCatalogItem(this,children));
      listener.onNewItem(Link,new ByTitleCatalogItem(this,children));
      final BySeriesCatalogItem bySeries=new BySeriesCatalogItem(this,children);
      if (!bySeries.isEmpty()) {
        listener.onNewItem(Link,bySeries);
      }
    }
    listener.commitItems(Link);
  }
}
