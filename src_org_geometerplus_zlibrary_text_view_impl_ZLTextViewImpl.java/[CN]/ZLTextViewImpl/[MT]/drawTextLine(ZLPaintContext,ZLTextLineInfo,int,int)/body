{
  final ZLTextParagraphCursor paragraph=info.ParagraphCursor;
  context.moveY(info.Height);
  int maxY=getBottomLine();
  if (context.getY() > maxY) {
    context.moveYTo(maxY);
  }
  context.moveXTo(getLeftMargin());
  if (info.NodeInfo != null) {
    drawTreeLines(context,info.NodeInfo,info.Height,info.Descent + info.VSpaceAfter);
  }
  int index=from;
  final int endWordNumber=info.EndWordNumber;
  int charNumber=info.RealStartCharNumber;
  for (int wordNumber=info.RealStartWordNumber; wordNumber != endWordNumber; ++wordNumber, charNumber=0) {
    final ZLTextElement element=paragraph.getElement(wordNumber);
    if ((element instanceof ZLTextWord) || (element instanceof ZLTextImageElement)) {
      final ZLTextElementArea area=(ZLTextElementArea)myTextElementMap.getArea(index++);
      if (area.ChangeStyle) {
        setTextStyle(area.Style);
      }
      final int x=area.XStart;
      final int y=area.YEnd - getElementDescent(context,element) - myTextStyle.getVerticalShift();
      context.moveXTo(x);
      if (element instanceof ZLTextWord) {
        drawWord(x,y,(ZLTextWord)element,charNumber,-1,false);
      }
 else {
        context.drawImage(x,y,((ZLTextImageElement)element).ImageData);
      }
    }
  }
  if (index != to) {
    ZLTextElementArea area=(ZLTextElementArea)myTextElementMap.getArea(index++);
    if (area.ChangeStyle) {
      setTextStyle(area.Style);
    }
    int len=info.EndCharNumber;
    final ZLTextWord word=(ZLTextWord)paragraph.getElement(info.EndWordNumber);
    final int x=area.XStart;
    final int y=area.YEnd - context.getDescent() - myTextStyle.getVerticalShift();
    drawWord(x,y,word,0,len,area.AddHyphenationSign);
  }
  context.moveY(info.Descent + info.VSpaceAfter);
}
