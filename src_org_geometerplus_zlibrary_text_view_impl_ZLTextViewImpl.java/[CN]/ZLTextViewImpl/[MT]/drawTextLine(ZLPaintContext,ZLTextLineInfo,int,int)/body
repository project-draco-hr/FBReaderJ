{
  final ZLTextParagraphCursor paragraph=info.ParagraphCursor;
  if (!mySelectionModel.isEmpty() && (from != to)) {
    final int paragraphIndex=paragraph.Index;
    final ZLTextSelectionModel.Range range=mySelectionModel.getRange();
    final ZLTextSelectionModel.BoundElement lBound=range.Left;
    final ZLTextSelectionModel.BoundElement rBound=range.Right;
    int left=getViewWidth() + getLeftMargin() - 1;
    if (paragraphIndex > lBound.ParagraphIndex) {
      left=getLeftMargin();
    }
 else     if (paragraphIndex == lBound.ParagraphIndex) {
      final int boundElementIndex=lBound.TextElementIndex;
      if (info.StartWordIndex > boundElementIndex) {
        left=getLeftMargin();
      }
 else       if ((info.EndWordIndex > boundElementIndex) || ((info.EndWordIndex == boundElementIndex) && (info.EndCharIndex >= lBound.CharIndex))) {
        final ZLTextElementArea elementArea=findLast(from,to,lBound);
        left=elementArea.XStart;
        if (elementArea.Element instanceof ZLTextWord) {
          left+=getAreaLength(paragraph,elementArea,lBound.CharIndex);
        }
      }
    }
    final int top=context.getY() + 1;
    int bottom=context.getY() + info.Height + info.Descent;
    int right=getLeftMargin();
    if (paragraphIndex < rBound.ParagraphIndex) {
      right=getViewWidth() + getLeftMargin() - 1;
      bottom+=info.VSpaceAfter;
    }
 else     if (paragraphIndex == rBound.ParagraphIndex) {
      final int boundElementIndex=rBound.TextElementIndex;
      if ((info.EndWordIndex < boundElementIndex) || ((info.EndWordIndex == boundElementIndex) && (info.EndCharIndex < rBound.CharIndex))) {
        right=getViewWidth() + getLeftMargin() - 1;
        bottom+=info.VSpaceAfter;
      }
 else       if ((info.StartWordIndex < boundElementIndex) || ((info.StartWordIndex == boundElementIndex) && (info.StartCharIndex <= rBound.CharIndex))) {
        final ZLTextElementArea elementArea=findLast(from,to,rBound);
        if (elementArea.Element instanceof ZLTextWord) {
          right=elementArea.XStart + getAreaLength(paragraph,elementArea,rBound.CharIndex) - 1;
        }
 else {
          right=elementArea.XEnd;
        }
      }
    }
    if (left < right) {
      context.setFillColor(ZLTextStyleCollection.getInstance().getBaseStyle().SelectionBackgroundColorOption.getValue());
      context.fillRectangle(left,top,right,bottom);
    }
  }
  context.moveY(info.Height);
  int maxY=getBottomLine();
  if (context.getY() > maxY) {
    context.moveYTo(maxY);
  }
  context.moveXTo(getLeftMargin());
  if (info.NodeInfo != null) {
    drawTreeLines(context,info.NodeInfo,info.Height,info.Descent + info.VSpaceAfter);
  }
  int index=from;
  final int endWordIndex=info.EndWordIndex;
  int charIndex=info.RealStartCharIndex;
  for (int wordIndex=info.RealStartWordIndex; wordIndex != endWordIndex; ++wordIndex, charIndex=0) {
    final ZLTextElement element=paragraph.getElement(wordIndex);
    if ((element instanceof ZLTextWord) || (element instanceof ZLTextImageElement)) {
      final ZLTextElementArea area=(ZLTextElementArea)myTextElementMap.get(index++);
      if (area.ChangeStyle) {
        setTextStyle(area.Style);
      }
      final int x=area.XStart;
      final int y=area.YEnd - getElementDescent(context,element) - myTextStyle.getVerticalShift();
      context.moveXTo(x);
      if (element instanceof ZLTextWord) {
        drawWord(x,y,(ZLTextWord)element,charIndex,-1,false);
      }
 else {
        context.drawImage(x,y,((ZLTextImageElement)element).ImageData);
      }
    }
  }
  if (index != to) {
    ZLTextElementArea area=(ZLTextElementArea)myTextElementMap.get(index++);
    if (area.ChangeStyle) {
      setTextStyle(area.Style);
    }
    int len=info.EndCharIndex;
    final ZLTextWord word=(ZLTextWord)paragraph.getElement(info.EndWordIndex);
    final int x=area.XStart;
    final int y=area.YEnd - context.getDescent() - myTextStyle.getVerticalShift();
    drawWord(x,y,word,0,len,area.AddHyphenationSign);
  }
  context.moveY(info.Descent + info.VSpaceAfter);
}
