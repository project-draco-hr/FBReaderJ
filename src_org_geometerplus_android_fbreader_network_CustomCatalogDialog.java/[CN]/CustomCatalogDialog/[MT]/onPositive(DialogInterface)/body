{
  AlertDialog alert=(AlertDialog)dialog;
  myTitle=((TextView)alert.findViewById(R.id.network_catalog_title)).getText().toString().trim();
  myUrl=((TextView)alert.findViewById(R.id.network_catalog_url)).getText().toString().trim();
  mySummary=((TextView)alert.findViewById(R.id.network_catalog_summary)).getText().toString().trim();
  if (myTitle.length() == 0) {
    myTitle=null;
    if (myLink != null) {
      final String err=myResource.getResource("titleIsEmpty").getValue();
      sendError(true,false,err);
      return;
    }
  }
  if (myUrl.length() == 0) {
    myUrl=null;
    final String err=myResource.getResource("urlIsEmpty").getValue();
    sendError(true,false,err);
    return;
  }
  if (mySummary.length() == 0) {
    mySummary=null;
  }
  Uri uri=Uri.parse(myUrl);
  if (uri.getScheme() == null) {
    myUrl="http://" + myUrl;
    uri=Uri.parse(myUrl);
  }
  String siteName=uri.getHost();
  if (siteName == null) {
    final String err=myResource.getResource("invalidUrl").getValue();
    sendError(true,false,err);
    return;
  }
  if (siteName.startsWith("www.")) {
    siteName=siteName.substring(4);
  }
  final NetworkLibrary library=NetworkLibrary.Instance();
  if (myLink != null && library.hasCustomLinkTitle(myTitle,myLink)) {
    final String err=myResource.getResource("titleAlreadyExists").getValue();
    sendError(true,false,err);
    return;
  }
  if (library.hasCustomLinkSite(siteName,myLink)) {
    final String err=myResource.getResource("siteAlreadyExists").getValue();
    sendError(true,false,err);
    return;
  }
  if (myLink != null) {
    final ICustomNetworkLink link=(ICustomNetworkLink)myLink;
    link.setSiteName(siteName);
    link.setTitle(myTitle);
    link.setSummary(mySummary);
    link.setLink(INetworkLink.URL_MAIN,myUrl);
    if (myLinkWithoutInfo) {
      NetworkLibrary.Instance().addCustomLink(link);
      myLinkWithoutInfo=false;
    }
 else {
      link.saveLink();
    }
    sendSuccess(true);
    return;
  }
  myLinkWithoutInfo=true;
  myLink=OPDSLinkReader.createCustomLinkWithoutInfo(siteName,myUrl);
  final Handler handler=new Handler(){
    public void handleMessage(    Message msg){
      final String err=(String)msg.obj;
      if (err != null) {
        final DialogInterface.OnClickListener listener=new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int which){
            if (which == DialogInterface.BUTTON_NEGATIVE) {
              sendSuccess(true);
            }
 else {
              if (which == DialogInterface.BUTTON_NEUTRAL) {
                myLinkWithoutInfo=false;
                myLink=null;
              }
              sendError(true,false,null);
            }
          }
        }
;
        final ZLResource dialogResource=ZLResource.resource("dialog");
        final ZLResource boxResource=dialogResource.getResource("networkError");
        final ZLResource buttonResource=dialogResource.getResource("button");
        new AlertDialog.Builder(myActivity).setTitle(boxResource.getResource("title").getValue()).setMessage(err).setIcon(0).setPositiveButton(buttonResource.getResource("continue").getValue(),listener).setNeutralButton(buttonResource.getResource("editUrl").getValue(),listener).setNegativeButton(buttonResource.getResource("cancel").getValue(),listener).setOnCancelListener(new DialogInterface.OnCancelListener(){
          public void onCancel(          DialogInterface dialog){
            listener.onClick(dialog,DialogInterface.BUTTON_NEGATIVE);
          }
        }
).create().show();
      }
 else {
        sendError(true,false,null);
      }
    }
  }
;
  final Runnable loadInfoRunnable=new Runnable(){
    public void run(){
      String error=null;
      try {
        ((ICustomNetworkLink)myLink).reloadInfo();
      }
 catch (      ZLNetworkException e) {
        error=e.getMessage();
      }
      handler.sendMessage(handler.obtainMessage(0,error));
    }
  }
;
  UIUtil.wait("loadingCatalogInfo",loadInfoRunnable,myActivity);
}
