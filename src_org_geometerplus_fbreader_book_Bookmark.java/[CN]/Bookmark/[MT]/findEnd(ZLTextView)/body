{
  if (myEnd != null) {
    return;
  }
  ZLTextWordCursor cursor=view.getStartCursor();
  if (cursor.isNull()) {
    cursor=view.getEndCursor();
  }
  if (cursor.isNull()) {
    return;
  }
  cursor.moveTo(this);
  ZLTextWord word=null;
  mainLoop:   for (int count=myLength; count > 0; cursor.nextWord()) {
    while (cursor.isEndOfParagraph()) {
      if (!cursor.nextParagraph()) {
        break mainLoop;
      }
    }
    final ZLTextElement element=cursor.getElement();
    if (element instanceof ZLTextWord) {
      if (word != null) {
        --count;
      }
      word=(ZLTextWord)element;
      System.err.println(new String(word.Data,word.Offset,word.Length));
      count-=word.Length;
    }
  }
  if (word != null) {
    myEnd=new ZLTextFixedPosition(cursor.getParagraphIndex(),cursor.getElementIndex(),word.Length);
  }
}
