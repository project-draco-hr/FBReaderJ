{
  final OPDSLink opdsLink=(OPDSLink)myData.Link;
  final String date;
  if (entry.DCIssued != null) {
    date=entry.DCIssued.getDateTime(true);
  }
 else {
    date=null;
  }
  final LinkedList<String> tags=new LinkedList<String>();
  for (  ATOMCategory category : entry.Categories) {
    String term=category.getTerm();
    if (term != null) {
      tags.add(term);
    }
  }
  HashMap<Integer,String> urlMap=new HashMap<Integer,String>();
  LinkedList<BookReference> references=new LinkedList<BookReference>();
  for (  ATOMLink link : entry.Links) {
    final String href=link.getHref();
    final String type=link.getType();
    final String rel=opdsLink.relation(filter(link.getRel()),type);
    final int referenceType=typeByRelation(rel);
    if (rel == OPDSConstants.REL_COVER) {
      if (urlMap.get(NetworkLibraryItem.URL_COVER) == null && (type == OPDSConstants.MIME_IMG_PNG || type == OPDSConstants.MIME_IMG_JPEG)) {
        urlMap.put(NetworkLibraryItem.URL_COVER,href);
      }
    }
 else     if (rel == OPDSConstants.REL_THUMBNAIL) {
      if (type == OPDSConstants.MIME_IMG_PNG || type == OPDSConstants.MIME_IMG_JPEG) {
        urlMap.put(NetworkLibraryItem.URL_COVER,href);
      }
    }
 else     if (referenceType == BookReference.Type.BUY) {
      String price=BuyBookReference.price(link.getAttribute(OPDSXMLReader.KEY_PRICE),link.getAttribute(OPDSXMLReader.KEY_CURRENCY));
      if (price == null) {
        price=BuyBookReference.price(entry.getAttribute(OPDSXMLReader.KEY_PRICE),entry.getAttribute(OPDSXMLReader.KEY_CURRENCY));
      }
      if (price == null) {
        price="";
      }
      if (type == OPDSConstants.MIME_TEXT_HTML) {
        references.add(new BuyBookReference(href,BookReference.Format.NONE,BookReference.Type.BUY_IN_BROWSER,price));
      }
 else {
        int format=formatByMimeType(filter(link.getAttribute(OPDSXMLReader.KEY_FORMAT)));
        if (format != BookReference.Format.NONE) {
          references.add(new BuyBookReference(href,format,BookReference.Type.BUY,price));
        }
      }
    }
 else     if (referenceType != BookReference.Type.UNKNOWN) {
      final int format=formatByMimeType(type);
      if (format != BookReference.Format.NONE) {
        references.add(new BookReference(href,format,referenceType));
      }
    }
  }
  LinkedList<NetworkBookItem.AuthorData> authors=new LinkedList<NetworkBookItem.AuthorData>();
  for (  ATOMAuthor author : entry.Authors) {
    String name=author.Name;
    final String lowerCased=name.toLowerCase();
    int index=lowerCased.indexOf(AuthorPrefix);
    if (index != -1) {
      name=name.substring(index + AuthorPrefix.length());
    }
 else {
      index=lowerCased.indexOf(AuthorsPrefix);
      if (index != -1) {
        name=name.substring(index + AuthorsPrefix.length());
      }
    }
    index=name.indexOf(',');
    NetworkBookItem.AuthorData authorData;
    if (index != -1) {
      final String before=name.substring(0,index).trim();
      final String after=name.substring(index + 1).trim();
      authorData=new NetworkBookItem.AuthorData(after + ' ' + before,before);
    }
 else {
      name=name.trim();
      index=name.lastIndexOf(' ');
      authorData=new NetworkBookItem.AuthorData(name,name.substring(index + 1));
    }
    authors.add(authorData);
  }
  return new NetworkBookItem(myData.Link,entry.Id.Uri,myIndex++,entry.Title,entry.Summary,entry.DCLanguage,date,authors,tags,entry.SeriesTitle,entry.SeriesIndex,urlMap,references);
}
