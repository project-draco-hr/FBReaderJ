{
  String coverURL=null;
  String url=null;
  boolean urlIsAlternate=false;
  String htmlURL=null;
  for (  ATOMLink link : entry.Links) {
    final String href=link.getHref();
    final String rel=intern(link.getRel());
    final String type=intern(link.getType());
    if (rel == OPDSConstants.REL_COVER || rel == OPDSConstants.REL_STANZA_COVER) {
      if (coverURL == null && (type == OPDSConstants.MIME_IMG_PNG || type == OPDSConstants.MIME_IMG_JPEG)) {
        coverURL=href;
      }
    }
 else     if (rel == OPDSConstants.REL_THUMBNAIL || rel == OPDSConstants.REL_STANZA_THUMBNAIL) {
      if (type == OPDSConstants.MIME_IMG_PNG || type == OPDSConstants.MIME_IMG_JPEG) {
        coverURL=href;
      }
    }
 else     if (rel == OPDSConstants.REL_ACQUISITION || rel == ATOMConstants.REL_ALTERNATE || rel == null) {
      if (type == OPDSConstants.MIME_APP_ATOM) {
        if (rel == ATOMConstants.REL_ALTERNATE) {
          if (url == null) {
            url=href;
            urlIsAlternate=true;
          }
        }
 else {
          url=href;
        }
      }
 else       if (type == OPDSConstants.MIME_TEXT_HTML) {
        htmlURL=href;
      }
    }
  }
  if (url == null && htmlURL == null) {
    return null;
  }
  if (url != null && !urlIsAlternate) {
    htmlURL=null;
  }
  Integer entryCondition=myUrlConditions.get(entry.Id.Uri);
  final boolean dependsOnAccount=entryCondition != null && entryCondition.intValue() == OPDSLink.URLCondition.URL_CONDITION_SIGNED_IN;
  final String annotation;
  if (entry.Summary == null) {
    annotation=null;
  }
 else {
    annotation=entry.Summary.replace("\011","").replace("\012","");
  }
  HashMap<Integer,String> urlMap=new HashMap<Integer,String>();
  urlMap.put(NetworkLibraryItem.URLType.URL_COVER,coverURL);
  urlMap.put(NetworkLibraryItem.URLType.URL_CATALOG,ZLNetworkUtil.url(myBaseURL,url));
  urlMap.put(NetworkLibraryItem.URLType.URL_HTML_PAGE,ZLNetworkUtil.url(myBaseURL,htmlURL));
  return new OPDSCatalogItem(myData.Link,entry.Title,annotation,urlMap,dependsOnAccount ? OPDSCatalogItem.VisibilityType.LOGGED_USERS : OPDSCatalogItem.VisibilityType.ALWAYS);
}
