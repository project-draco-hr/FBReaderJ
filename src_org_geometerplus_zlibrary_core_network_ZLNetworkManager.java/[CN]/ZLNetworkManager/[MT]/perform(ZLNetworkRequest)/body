{
  boolean success=false;
  try {
    request.doBefore();
    HttpURLConnection httpConnection=null;
    int response=-1;
    for (int retryCounter=0; retryCounter < 3 && response == -1; ++retryCounter) {
      final URL url=new URL(request.URL);
      final URLConnection connection=url.openConnection();
      if (!(connection instanceof HttpURLConnection)) {
        throw new ZLNetworkException(ZLNetworkException.ERROR_UNSUPPORTED_PROTOCOL);
      }
      httpConnection=(HttpURLConnection)connection;
      setCommonHTTPOptions(request,httpConnection);
      httpConnection.connect();
      response=httpConnection.getResponseCode();
    }
    if (response == HttpURLConnection.HTTP_OK) {
      InputStream stream=httpConnection.getInputStream();
      try {
        if ("gzip".equalsIgnoreCase(httpConnection.getContentEncoding())) {
          stream=new GZIPInputStream(stream);
        }
        request.handleStream(httpConnection,stream);
      }
  finally {
        stream.close();
      }
      success=true;
    }
 else {
      if (response == HttpURLConnection.HTTP_UNAUTHORIZED) {
        throw new ZLNetworkException(ZLNetworkException.ERROR_AUTHENTICATION_FAILED);
      }
 else {
        throw new ZLNetworkException(ZLNetworkException.ERROR_SOMETHING_WRONG,ZLNetworkUtil.hostFromUrl(request.URL));
      }
    }
  }
 catch (  SSLHandshakeException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_SSL_CONNECT,ZLNetworkUtil.hostFromUrl(request.URL));
  }
catch (  SSLKeyException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_SSL_BAD_KEY,ZLNetworkUtil.hostFromUrl(request.URL));
  }
catch (  SSLPeerUnverifiedException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_SSL_PEER_UNVERIFIED,ZLNetworkUtil.hostFromUrl(request.URL));
  }
catch (  SSLProtocolException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_SSL_PROTOCOL_ERROR);
  }
catch (  SSLException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_SSL_SUBSYSTEM);
  }
catch (  ConnectException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_CONNECTION_REFUSED,ZLNetworkUtil.hostFromUrl(request.URL));
  }
catch (  NoRouteToHostException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_HOST_CANNOT_BE_REACHED,ZLNetworkUtil.hostFromUrl(request.URL));
  }
catch (  UnknownHostException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_RESOLVE_HOST,ZLNetworkUtil.hostFromUrl(request.URL));
  }
catch (  MalformedURLException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_INVALID_URL);
  }
catch (  SocketTimeoutException ex) {
    throw new ZLNetworkException(ZLNetworkException.ERROR_TIMEOUT);
  }
catch (  IOException ex) {
    ex.printStackTrace();
    throw new ZLNetworkException(ZLNetworkException.ERROR_SOMETHING_WRONG,ZLNetworkUtil.hostFromUrl(request.URL));
  }
 finally {
    request.doAfter(success);
  }
}
