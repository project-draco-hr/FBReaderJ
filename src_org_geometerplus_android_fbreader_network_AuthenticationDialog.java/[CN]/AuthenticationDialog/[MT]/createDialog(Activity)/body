{
  final View layout=activity.getLayoutInflater().inflate(R.layout.network_authentication_dialog,null);
  final TextView login=(TextView)layout.findViewById(R.id.network_authentication_login);
  final TextView password=(TextView)layout.findViewById(R.id.network_authentication_password);
  login.measure(ViewGroup.LayoutParams.FILL_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);
  password.measure(ViewGroup.LayoutParams.FILL_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);
  final TextView loginText=(TextView)layout.findViewById(R.id.network_authentication_login_text);
  loginText.setText(myResource.getResource("login").getValue());
  loginText.getLayoutParams().height=login.getMeasuredHeight();
  final TextView passwordText=(TextView)layout.findViewById(R.id.network_authentication_password_text);
  passwordText.setText(myResource.getResource("password").getValue());
  passwordText.getLayoutParams().height=password.getMeasuredHeight();
  final Handler handler=new Handler(){
    public void handleMessage(    Message message){
      final NetworkLibrary library=NetworkLibrary.Instance();
      library.invalidateAccountDependents();
      library.synchronize();
      if (NetworkLibraryActivity.Instance != null) {
        NetworkLibraryActivity.Instance.getAdapter().resetTree();
        NetworkLibraryActivity.Instance.fireOnModelChanged();
      }
      if (message.what < 0) {
        myErrorMessage=(String)message.obj;
        activity.showDialog(NetworkDialog.DIALOG_AUTHENTICATION);
      }
 else       if (message.what > 0) {
        if (myOnSuccessRunnable != null) {
          myOnSuccessRunnable.run();
        }
      }
    }
  }
;
  final DialogInterface.OnClickListener listener=new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      final NetworkAuthenticationManager mgr=myLink.authenticationManager();
      if (which == DialogInterface.BUTTON_POSITIVE) {
        AlertDialog alert=(AlertDialog)dialog;
        final String login=((TextView)alert.findViewById(R.id.network_authentication_login)).getText().toString().trim();
        final String password=((TextView)alert.findViewById(R.id.network_authentication_password)).getText().toString();
        if (login.length() == 0) {
          String err=myResource.getResource("loginIsEmpty").getValue();
          handler.sendMessage(handler.obtainMessage(-1,err));
          return;
        }
        mgr.UserNameOption.setValue(login);
        final Runnable runnable=new Runnable(){
          public void run(){
            String err=mgr.authorise(password);
            if (err != null) {
              mgr.logOut();
              handler.sendMessage(handler.obtainMessage(-1,err));
              return;
            }
            if (mgr.needsInitialization()) {
              err=mgr.initialize();
              if (err != null) {
                mgr.logOut();
                handler.sendMessage(handler.obtainMessage(-1,err));
                return;
              }
            }
            handler.sendEmptyMessage(1);
          }
        }
;
        ((ZLAndroidDialogManager)ZLAndroidDialogManager.Instance()).wait("authentication",runnable,activity);
      }
 else {
        final Runnable runnable=new Runnable(){
          public void run(){
            if (mgr.isAuthorised(false).Status != ZLBoolean3.B3_FALSE) {
              mgr.logOut();
              handler.sendEmptyMessage(0);
            }
          }
        }
;
        ((ZLAndroidDialogManager)ZLAndroidDialogManager.Instance()).wait("signOut",runnable,activity);
      }
    }
  }
;
  final TextView registerText=(TextView)layout.findViewById(R.id.network_authentication_register);
  registerText.setText(myResource.getResource("register").getValue());
  final ZLResource buttonResource=ZLResource.resource("dialog").getResource("button");
  return new AlertDialog.Builder(activity).setView(layout).setTitle(myResource.getResource("title").getValue()).setPositiveButton(buttonResource.getResource("ok").getValue(),listener).setNegativeButton(buttonResource.getResource("cancel").getValue(),listener).create();
}
