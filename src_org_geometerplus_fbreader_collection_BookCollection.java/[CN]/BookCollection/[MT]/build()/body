{
  final HashSet fileNamesSet=collectBookFileNames();
  final HashMap<String,TagTree> tagTreeMap=new HashMap<String,TagTree>();
  final HashMap<Author,AuthorTree> authorTreeMap=new HashMap<Author,AuthorTree>();
  final HashMap<AuthorSeriesPair,SeriesTree> seriesTreeMap=new HashMap<AuthorSeriesPair,SeriesTree>();
  for (Iterator it=fileNamesSet.iterator(); it.hasNext(); ) {
    final BookDescription description=BookDescription.getDescription((String)it.next());
    final Author author=description.getAuthor();
    final String series=description.getSeriesName();
    AuthorTree authorTree=authorTreeMap.get(author);
    if (authorTree == null) {
      authorTree=myCollectionByAuthor.createAuthorSubTree(author);
      authorTreeMap.put(author,authorTree);
    }
    if (series.length() == 0) {
      authorTree.createBookSubTree(description);
    }
 else {
      final AuthorSeriesPair pair=new AuthorSeriesPair(author,series);
      SeriesTree seriesTree=seriesTreeMap.get(pair);
      if (seriesTree == null) {
        seriesTree=authorTree.createSeriesSubTree(series);
        seriesTreeMap.put(pair,seriesTree);
      }
      seriesTree.createBookInSeriesSubTree(description);
    }
    final List<String> tags=description.getTags();
    if (!tags.isEmpty()) {
      for (      String tag : description.getTags()) {
        TagTree tagTree=tagTreeMap.get(tag);
        if (tagTree == null) {
          tagTree=myCollectionByTag.createTagSubTree(tag);
          tagTreeMap.put(tag,tagTree);
        }
        tagTree.createBookSubTree(description);
      }
    }
 else {
      TagTree tagTree=tagTreeMap.get(null);
      if (tagTree == null) {
        tagTree=myCollectionByTag.createTagSubTree(null);
        tagTreeMap.put(null,tagTree);
      }
      tagTree.createBookSubTree(description);
    }
  }
}
