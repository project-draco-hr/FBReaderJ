{
  Collection.addListener(new BookCollection.Listener(){
    public void onBookEvent(    BookEvent event,    Book book){
switch (event) {
case Added:
        addBookToLibrary(book);
synchronized (myStatusLock) {
        if ((myStatusMask & STATUS_LOADING) == 0 || Collection.size() % 16 == 0) {
          Library.this.fireModelChangedEvent(ChangeListener.Code.BookAdded);
        }
      }
    break;
}
}
public void onBuildEvent(BuildEvent event){
switch (event) {
case Started:
  break;
case Completed:
Library.this.fireModelChangedEvent(ChangeListener.Code.BookAdded);
break;
}
}
}
);
final Thread initializer=new Thread(){
public void run(){
setStatus(myStatusMask | STATUS_LOADING);
getFirstLevelTree(ROOT_RECENT).clear();
for (Book book : Collection.recentBooks()) {
new BookTree(getFirstLevelTree(ROOT_RECENT),book,true);
}
getFirstLevelTree(ROOT_FAVORITES).clear();
for (Book book : Collection.favorites()) {
new BookTree(getFirstLevelTree(ROOT_FAVORITES),book,true);
}
int count=0;
for (Book book : Collection.books()) {
addBookToLibrary(book);
if (++count % 16 == 0) {
Library.this.fireModelChangedEvent(ChangeListener.Code.BookAdded);
}
}
Library.this.fireModelChangedEvent(ChangeListener.Code.BookAdded);
setStatus(myStatusMask & ~STATUS_LOADING);
}
}
;
initializer.setPriority((Thread.MIN_PRIORITY + Thread.NORM_PRIORITY) / 2);
initializer.start();
}
